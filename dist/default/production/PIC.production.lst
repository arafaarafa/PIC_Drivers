

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Mar 04 11:37:14 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    25   000000                     
    26                           ; Version 2.40
    27                           ; Generated 17/11/2021 GMT
    28                           ; 
    29                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F4620 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61   000000                     
    62                           	psect	idataCOMRAM
    63   00F748                     __pidataCOMRAM:
    64                           	callstack 0
    65                           
    66                           ;initializer for _lat_registers
    67   00F748  89                 	db	137
    68   00F749  0F                 	db	15
    69   00F74A  8A                 	db	138
    70   00F74B  0F                 	db	15
    71   00F74C  8B                 	db	139
    72   00F74D  0F                 	db	15
    73   00F74E  8C                 	db	140
    74   00F74F  0F                 	db	15
    75   00F750  8D                 	db	141
    76   00F751  0F                 	db	15
    77                           
    78                           ;initializer for _port_registers
    79   00F752  80                 	db	128
    80   00F753  0F                 	db	15
    81   00F754  81                 	db	129
    82   00F755  0F                 	db	15
    83   00F756  82                 	db	130
    84   00F757  0F                 	db	15
    85   00F758  83                 	db	131
    86   00F759  0F                 	db	15
    87   00F75A  84                 	db	132
    88   00F75B  0F                 	db	15
    89                           
    90                           ;initializer for _tris_registers
    91   00F75C  92                 	db	146
    92   00F75D  0F                 	db	15
    93   00F75E  93                 	db	147
    94   00F75F  0F                 	db	15
    95   00F760  94                 	db	148
    96   00F761  0F                 	db	15
    97   00F762  95                 	db	149
    98   00F763  0F                 	db	15
    99   00F764  96                 	db	150
   100   00F765  0F                 	db	15
   101                           
   102                           ;initializer for main@F2986
   103   00F766  01                 	db	1
   104   00F767  02                 	db	2
   105   00F768  03                 	db	3
   106   00F769  04                 	db	4
   107   00F76A  05                 	db	5
   108   00F76B  06                 	db	6
   109                           
   110                           ;initializer for _seven_seg
   111   00F76C  03                 	db	3
   112   00F76D  00                 	db	0
   113   00F76E  02                 	db	2
   114   00F76F  06                 	db	6
   115   00F770  02                 	db	2
   116   00F771  07                 	db	7
   117   00F772  03                 	db	3
   118   00F773  04                 	db	4
   119   00F774  03                 	db	3
   120   00F775  05                 	db	5
   121   00F776  03                 	db	3
   122   00F777  06                 	db	6
   123   00F778  03                 	db	3
   124   00F779  07                 	db	7
   125   000000                     _LATA	set	3977
   126   000000                     _PORTE	set	3972
   127   000000                     _PORTD	set	3971
   128   000000                     _PORTC	set	3970
   129   000000                     _PORTB	set	3969
   130   000000                     _PORTA	set	3968
   131   000000                     _TRISA	set	3986
   132   000000                     _ADCON1	set	4033
   133   000000                     _ADCON0	set	4034
   134   000000                     _TRISE	set	3990
   135   000000                     _TRISD	set	3989
   136   000000                     _TRISC	set	3988
   137   000000                     _TRISB	set	3987
   138   000000                     _LATE	set	3981
   139   000000                     _LATD	set	3980
   140   000000                     _LATC	set	3979
   141   000000                     _LATB	set	3978
   142                           
   143                           ; #config settings
   144                           
   145                           	psect	cinit
   146   00F77A                     __pcinit:
   147                           	callstack 0
   148   00F77A                     start_initialization:
   149                           	callstack 0
   150   00F77A                     __initialization:
   151                           	callstack 0
   152                           
   153                           ; Initialize objects allocated to COMRAM (50 bytes)
   154                           ; load TBLPTR registers with __pidataCOMRAM
   155   00F77A  0E48               	movlw	low __pidataCOMRAM
   156   00F77C  6EF6               	movwf	tblptrl,c
   157   00F77E  0EF7               	movlw	high __pidataCOMRAM
   158   00F780  6EF7               	movwf	tblptrh,c
   159   00F782  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   160   00F784  6EF8               	movwf	tblptru,c
   161   00F786  EE00  F001         	lfsr	0,__pdataCOMRAM
   162   00F78A  EE10 F032          	lfsr	1,50
   163   00F78E                     copy_data0:
   164   00F78E  0009               	tblrd		*+
   165   00F790  CFF5 FFEE          	movff	tablat,postinc0
   166   00F794  50E5               	movf	postdec1,w,c
   167   00F796  50E1               	movf	fsr1l,w,c
   168   00F798  E1FA               	bnz	copy_data0
   169                           
   170                           ; Clear objects allocated to COMRAM (5 bytes)
   171   00F79A  6A61               	clrf	(__pbssCOMRAM+4)& (0+255),c
   172   00F79C  6A60               	clrf	(__pbssCOMRAM+3)& (0+255),c
   173   00F79E  6A5F               	clrf	(__pbssCOMRAM+2)& (0+255),c
   174   00F7A0  6A5E               	clrf	(__pbssCOMRAM+1)& (0+255),c
   175   00F7A2  6A5D               	clrf	__pbssCOMRAM& (0+255),c
   176   00F7A4                     end_of_initialization:
   177                           	callstack 0
   178   00F7A4                     __end_of__initialization:
   179                           	callstack 0
   180   00F7A4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   181   00F7A6  6EF8               	movwf	tblptru,c
   182   00F7A8  0100               	movlb	0
   183   00F7AA  EFD7  F07B         	goto	_main	;jump to C main() function
   184                           
   185                           	psect	bssCOMRAM
   186   00005D                     __pbssCOMRAM:
   187                           	callstack 0
   188   00005D                     _ret:
   189                           	callstack 0
   190   00005D                     	ds	1
   191   00005E                     led_toggle@F2905:
   192                           	callstack 0
   193   00005E                     	ds	1
   194   00005F                     led_turn_off@F2900:
   195                           	callstack 0
   196   00005F                     	ds	1
   197   000060                     led_turn_on@F2895:
   198                           	callstack 0
   199   000060                     	ds	1
   200   000061                     led_intialize@F2890:
   201                           	callstack 0
   202   000061                     	ds	1
   203                           
   204                           	psect	dataCOMRAM
   205   000001                     __pdataCOMRAM:
   206                           	callstack 0
   207   000001                     _lat_registers:
   208                           	callstack 0
   209   000001                     	ds	10
   210   00000B                     _port_registers:
   211                           	callstack 0
   212   00000B                     	ds	10
   213   000015                     _tris_registers:
   214                           	callstack 0
   215   000015                     	ds	10
   216   00001F                     main@F2986:
   217                           	callstack 0
   218   00001F                     	ds	6
   219   000025                     _seven_seg:
   220                           	callstack 0
   221   000025                     	ds	14
   222                           
   223                           	psect	cstackCOMRAM
   224   000033                     __pcstackCOMRAM:
   225                           	callstack 0
   226   000033                     gpio_pin_direction_initialize@pin_config:
   227                           	callstack 0
   228   000033                     gpio_pin_write_logic@pin_config:
   229                           	callstack 0
   230   000033                     gpio_port_low_nibble_direction_initialize@pin_config:
   231                           	callstack 0
   232   000033                     gpio_port_low_nibble_write_logic@pin_config:
   233                           	callstack 0
   234   000033                     gpio_port_high_nibble_direction_initialize@pin_config:
   235                           	callstack 0
   236   000033                     gpio_port_high_nibble_write_logic@pin_config:
   237                           	callstack 0
   238                           
   239                           ; 2 bytes @ 0x0
   240   000033                     	ds	2
   241   000035                     ??_gpio_pin_direction_initialize:
   242   000035                     gpio_pin_write_logic@logic:
   243                           	callstack 0
   244   000035                     gpio_port_low_nibble_direction_initialize@data:
   245                           	callstack 0
   246   000035                     gpio_port_low_nibble_write_logic@data:
   247                           	callstack 0
   248   000035                     gpio_port_high_nibble_direction_initialize@data:
   249                           	callstack 0
   250   000035                     gpio_port_high_nibble_write_logic@data:
   251                           	callstack 0
   252                           
   253                           ; 1 bytes @ 0x2
   254   000035                     	ds	1
   255   000036                     ??_gpio_pin_write_logic:
   256   000036                     ??_gpio_port_low_nibble_direction_initialize:
   257   000036                     ??_gpio_port_low_nibble_write_logic:
   258   000036                     ??_gpio_port_high_nibble_direction_initialize:
   259   000036                     ??_gpio_port_high_nibble_write_logic:
   260                           
   261                           ; 1 bytes @ 0x3
   262   000036                     	ds	5
   263   00003B                     gpio_pin_direction_initialize@ret:
   264                           	callstack 0
   265                           
   266                           ; 1 bytes @ 0x8
   267   00003B                     	ds	1
   268   00003C                     gpio_pin_write_logic@ret:
   269                           	callstack 0
   270                           
   271                           ; 1 bytes @ 0x9
   272   00003C                     	ds	1
   273   00003D                     SVS_initialize@Seven_SEG:
   274                           	callstack 0
   275   00003D                     SVS_print@Seven_SEG:
   276                           	callstack 0
   277                           
   278                           ; 2 bytes @ 0xA
   279   00003D                     	ds	2
   280   00003F                     ??_SVS_initialize:
   281   00003F                     SVS_print@data:
   282                           	callstack 0
   283                           
   284                           ; 1 bytes @ 0xC
   285   00003F                     	ds	1
   286   000040                     ??_SVS_print:
   287                           
   288                           ; 1 bytes @ 0xD
   289   000040                     	ds	1
   290   000041                     SVS_print@temp:
   291                           	callstack 0
   292                           
   293                           ; 1 bytes @ 0xE
   294   000041                     	ds	1
   295   000042                     SVS_print_pov@Seven_SEG:
   296                           	callstack 0
   297                           
   298                           ; 2 bytes @ 0xF
   299   000042                     	ds	2
   300   000044                     SVS_initialize@svs_counter:
   301                           	callstack 0
   302   000044                     SVS_print_pov@data:
   303                           	callstack 0
   304                           
   305                           ; 2 bytes @ 0x11
   306   000044                     	ds	2
   307   000046                     ??_SVS_print_pov:
   308   000046                     SVS_initialize@temp:
   309                           	callstack 0
   310                           
   311                           ; 1 bytes @ 0x13
   312   000046                     	ds	1
   313   000047                     
   314                           ; 1 bytes @ 0x14
   315   000047                     	ds	4
   316   00004B                     SVS_print_pov@l:
   317                           	callstack 0
   318                           
   319                           ; 4 bytes @ 0x18
   320   00004B                     	ds	4
   321   00004F                     SVS_print_pov@svs_counter_2:
   322                           	callstack 0
   323                           
   324                           ; 2 bytes @ 0x1C
   325   00004F                     	ds	2
   326   000051                     SVS_print_pov@temp:
   327                           	callstack 0
   328                           
   329                           ; 1 bytes @ 0x1E
   330   000051                     	ds	1
   331   000052                     SVS_print_pov@svs_counter:
   332                           	callstack 0
   333                           
   334                           ; 1 bytes @ 0x1F
   335   000052                     	ds	1
   336   000053                     ??_main:
   337                           
   338                           ; 1 bytes @ 0x20
   339   000053                     	ds	2
   340   000055                     main@data:
   341                           	callstack 0
   342                           
   343                           ; 6 bytes @ 0x22
   344   000055                     	ds	6
   345   00005B                     main@i:
   346                           	callstack 0
   347                           
   348                           ; 2 bytes @ 0x28
   349   00005B                     	ds	2
   350                           
   351 ;;
   352 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   353 ;;
   354 ;; *************** function _main *****************
   355 ;; Defined at:
   356 ;;		line 80 in file "main.c"
   357 ;; Parameters:    Size  Location     Type
   358 ;;		None
   359 ;; Auto vars:     Size  Location     Type
   360 ;;  i               2   40[COMRAM] int 
   361 ;;  data            6   34[COMRAM] unsigned char [6]
   362 ;; Return value:  Size  Location     Type
   363 ;;                  2  184[None  ] int 
   364 ;; Registers used:
   365 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   366 ;; Tracked objects:
   367 ;;		On entry : 0/0
   368 ;;		On exit  : 0/0
   369 ;;		Unchanged: 0/0
   370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   372 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   373 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   374 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   375 ;;Total ram usage:       10 bytes
   376 ;; Hardware stack levels required when called: 3
   377 ;; This function calls:
   378 ;;		_SVS_print_pov
   379 ;;		_appliction_intialize
   380 ;; This function is called by:
   381 ;;		Startup code after reset
   382 ;; This function uses a non-reentrant model
   383 ;;
   384                           
   385                           	psect	text0
   386   00F7AE                     __ptext0:
   387                           	callstack 0
   388   00F7AE                     _main:
   389                           	callstack 28
   390   00F7AE                     
   391                           ;main.c: 82:     appliction_intialize();
   392   00F7AE  EC99  F07B         	call	_appliction_intialize	;wreg free
   393   00F7B2                     
   394                           ;main.c: 83:     uint8 data[6 ]= {1,2,3,4,5,6};
   395   00F7B2  EE20  F01F         	lfsr	2,main@F2986
   396   00F7B6  EE10  F055         	lfsr	1,main@data
   397   00F7BA  0E05               	movlw	5
   398   00F7BC                     u1011:
   399   00F7BC  CFDB FFE3          	movff	plusw2,plusw1
   400   00F7C0  06E8               	decf	wreg,f,c
   401   00F7C2  E2FC               	bc	u1011
   402   00F7C4                     l1752:
   403                           
   404                           ;main.c: 100:         for(int i =0 ; i<10; i++){
   405   00F7C4  0E00               	movlw	0
   406   00F7C6  6E5C               	movwf	(main@i+1)^0,c
   407   00F7C8  0E00               	movlw	0
   408   00F7CA  6E5B               	movwf	main@i^0,c
   409   00F7CC                     l1758:
   410                           
   411                           ;main.c: 101:             SVS_print_pov(&seven_seg, data);
   412   00F7CC  0E25               	movlw	low _seven_seg
   413   00F7CE  6E42               	movwf	SVS_print_pov@Seven_SEG^0,c
   414   00F7D0  0E00               	movlw	high _seven_seg
   415   00F7D2  6E43               	movwf	(SVS_print_pov@Seven_SEG+1)^0,c
   416   00F7D4  0E55               	movlw	low main@data
   417   00F7D6  6E44               	movwf	SVS_print_pov@data^0,c
   418   00F7D8  0E00               	movlw	high main@data
   419   00F7DA  6E45               	movwf	(SVS_print_pov@data+1)^0,c
   420   00F7DC  EC2B  F07F         	call	_SVS_print_pov	;wreg free
   421   00F7E0                     
   422                           ;main.c: 102:             _delay((unsigned long)((2000)*(16000000ul/4000.0)));
   423   00F7E0  0E29               	movlw	41
   424   00F7E2  6E54               	movwf	(??_main+1)^0,c
   425   00F7E4  0E96               	movlw	150
   426   00F7E6  6E53               	movwf	??_main^0,c
   427   00F7E8  0E7F               	movlw	127
   428   00F7EA                     u1177:
   429   00F7EA  2EE8               	decfsz	wreg,f,c
   430   00F7EC  D7FE               	bra	u1177
   431   00F7EE  2E53               	decfsz	??_main^0,f,c
   432   00F7F0  D7FC               	bra	u1177
   433   00F7F2  2E54               	decfsz	(??_main+1)^0,f,c
   434   00F7F4  D7FA               	bra	u1177
   435   00F7F6  F000               	nop	
   436   00F7F8                     
   437                           ;main.c: 103:         }
   438   00F7F8  4A5B               	infsnz	main@i^0,f,c
   439   00F7FA  2A5C               	incf	(main@i+1)^0,f,c
   440   00F7FC  BE5C               	btfsc	(main@i+1)^0,7,c
   441   00F7FE  EF0A  F07C         	goto	u1021
   442   00F802  505C               	movf	(main@i+1)^0,w,c
   443   00F804  E109               	bnz	u1020
   444   00F806  0E0A               	movlw	10
   445   00F808  5C5B               	subwf	main@i^0,w,c
   446   00F80A  A0D8               	btfss	status,0,c
   447   00F80C  EF0A  F07C         	goto	u1021
   448   00F810  EF0C  F07C         	goto	u1020
   449   00F814                     u1021:
   450   00F814  EFE6  F07B         	goto	l1758
   451   00F818                     u1020:
   452   00F818  EFE2  F07B         	goto	l1752
   453   00F81C  EF00  F000         	goto	start
   454   00F820                     __end_of_main:
   455                           	callstack 0
   456                           
   457 ;; *************** function _appliction_intialize *****************
   458 ;; Defined at:
   459 ;;		line 108 in file "main.c"
   460 ;; Parameters:    Size  Location     Type
   461 ;;		None
   462 ;; Auto vars:     Size  Location     Type
   463 ;;		None
   464 ;; Return value:  Size  Location     Type
   465 ;;                  1    wreg      void 
   466 ;; Registers used:
   467 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   468 ;; Tracked objects:
   469 ;;		On entry : 0/0
   470 ;;		On exit  : 0/0
   471 ;;		Unchanged: 0/0
   472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   477 ;;Total ram usage:        0 bytes
   478 ;; Hardware stack levels used: 1
   479 ;; Hardware stack levels required when called: 2
   480 ;; This function calls:
   481 ;;		_SVS_initialize
   482 ;; This function is called by:
   483 ;;		_main
   484 ;; This function uses a non-reentrant model
   485 ;;
   486                           
   487                           	psect	text1
   488   00F732                     __ptext1:
   489                           	callstack 0
   490   00F732                     _appliction_intialize:
   491                           	callstack 28
   492   00F732                     
   493                           ;main.c: 109:     ADCON0 = 0x00;
   494   00F732  0E00               	movlw	0
   495   00F734  6EC2               	movwf	194,c	;volatile
   496                           
   497                           ;main.c: 110:     ADCON1 = 0x0F;
   498   00F736  0E0F               	movlw	15
   499   00F738  6EC1               	movwf	193,c	;volatile
   500   00F73A                     
   501                           ;main.c: 120:     SVS_initialize(&seven_seg);
   502   00F73A  0E25               	movlw	low _seven_seg
   503   00F73C  6E3D               	movwf	SVS_initialize@Seven_SEG^0,c
   504   00F73E  0E00               	movlw	high _seven_seg
   505   00F740  6E3E               	movwf	(SVS_initialize@Seven_SEG+1)^0,c
   506   00F742  ECEF  F07D         	call	_SVS_initialize	;wreg free
   507   00F746  0012               	return		;funcret
   508   00F748                     __end_of_appliction_intialize:
   509                           	callstack 0
   510                           
   511 ;; *************** function _SVS_initialize *****************
   512 ;; Defined at:
   513 ;;		line 38 in file "ECU_layer/7_SEGMENTS/7_SEGMENTS.c"
   514 ;; Parameters:    Size  Location     Type
   515 ;;  Seven_SEG       2   10[COMRAM] PTR const struct .
   516 ;;		 -> seven_seg(14), 
   517 ;; Auto vars:     Size  Location     Type
   518 ;;  svs_counter     2   17[COMRAM] int 
   519 ;;  temp            1   19[COMRAM] struct .
   520 ;;  ret             1    0        unsigned char 
   521 ;; Return value:  Size  Location     Type
   522 ;;                  1    wreg      unsigned char 
   523 ;; Registers used:
   524 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   525 ;; Tracked objects:
   526 ;;		On entry : 0/0
   527 ;;		On exit  : 0/0
   528 ;;		Unchanged: 0/0
   529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   530 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   531 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   532 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   533 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   534 ;;Total ram usage:       10 bytes
   535 ;; Hardware stack levels used: 1
   536 ;; Hardware stack levels required when called: 1
   537 ;; This function calls:
   538 ;;		_gpio_pin_direction_initialize
   539 ;;		_gpio_port_high_nibble_direction_initialize
   540 ;;		_gpio_port_low_nibble_direction_initialize
   541 ;; This function is called by:
   542 ;;		_appliction_intialize
   543 ;; This function uses a non-reentrant model
   544 ;;
   545                           
   546                           	psect	text2
   547   00FBDE                     __ptext2:
   548                           	callstack 0
   549   00FBDE                     _SVS_initialize:
   550                           	callstack 28
   551   00FBDE                     
   552                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 41:     if(Seven_SEG == ((void*)0)){
   553   00FBDE  503D               	movf	SVS_initialize@Seven_SEG^0,w,c
   554   00FBE0  103E               	iorwf	(SVS_initialize@Seven_SEG+1)^0,w,c
   555   00FBE2  A4D8               	btfss	status,2,c
   556   00FBE4  EFF6  F07D         	goto	u851
   557   00FBE8  EFF8  F07D         	goto	u850
   558   00FBEC                     u851:
   559   00FBEC  EFFA  F07D         	goto	l1592
   560   00FBF0                     u850:
   561   00FBF0                     
   562                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 43:     }
   563   00FBF0  EF86  F07E         	goto	l291
   564   00FBF4                     l1592:
   565                           
   566                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 45:         pin_config_t temp;;ECU_layer/7_SEGMENTS/
      +                          7_SEGMENTS.c: 46:         temp.port = Seven_SEG->SVS_port;
   567   00FBF4  C03D  FFD9         	movff	SVS_initialize@Seven_SEG,fsr2l
   568   00FBF8  C03E  FFDA         	movff	SVS_initialize@Seven_SEG+1,fsr2h
   569   00FBFC  50DF               	movf	indf2,w,c
   570   00FBFE  6E3F               	movwf	??_SVS_initialize^0,c
   571   00FC00  5046               	movf	SVS_initialize@temp^0,w,c
   572   00FC02  183F               	xorwf	??_SVS_initialize^0,w,c
   573   00FC04  0BF8               	andlw	-8
   574   00FC06  183F               	xorwf	??_SVS_initialize^0,w,c
   575   00FC08  6E46               	movwf	SVS_initialize@temp^0,c
   576   00FC0A                     
   577                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 47:         temp.direction= GPIO_DIRECTION_OUTPUT;
   578   00FC0A  9C46               	bcf	SVS_initialize@temp^0,6,c
   579                           
   580                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 49:         if(Seven_SEG->SVS_nibble_state == SVS_LO
      +                          W_NIBBLE){
   581   00FC0C  EE20 F001          	lfsr	2,1
   582   00FC10  503D               	movf	SVS_initialize@Seven_SEG^0,w,c
   583   00FC12  26D9               	addwf	fsr2l,f,c
   584   00FC14  503E               	movf	(SVS_initialize@Seven_SEG+1)^0,w,c
   585   00FC16  22DA               	addwfc	fsr2h,f,c
   586   00FC18  50DF               	movf	indf2,w,c
   587   00FC1A  A4D8               	btfss	status,2,c
   588   00FC1C  EF12  F07E         	goto	u861
   589   00FC20  EF14  F07E         	goto	u860
   590   00FC24                     u861:
   591   00FC24  EF1E  F07E         	goto	l1598
   592   00FC28                     u860:
   593   00FC28                     
   594                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 50:             gpio_port_low_nibble_direction_initi
      +                          alize(&temp, 0xF0);
   595   00FC28  0E46               	movlw	low SVS_initialize@temp
   596   00FC2A  6E33               	movwf	gpio_port_low_nibble_direction_initialize@pin_config^0,c
   597   00FC2C  0E00               	movlw	high SVS_initialize@temp
   598   00FC2E  6E34               	movwf	(gpio_port_low_nibble_direction_initialize@pin_config+1)^0,c
   599   00FC30  0EF0               	movlw	240
   600   00FC32  6E35               	movwf	gpio_port_low_nibble_direction_initialize@data^0,c
   601   00FC34  ECD6  F07C         	call	_gpio_port_low_nibble_direction_initialize	;wreg free
   602                           
   603                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 51:         }else if(Seven_SEG->SVS_nibble_state == 
      +                          SVS_HIGH_NIBBLE){
   604   00FC38  EF34  F07E         	goto	l1602
   605   00FC3C                     l1598:
   606   00FC3C  EE20 F001          	lfsr	2,1
   607   00FC40  503D               	movf	SVS_initialize@Seven_SEG^0,w,c
   608   00FC42  26D9               	addwf	fsr2l,f,c
   609   00FC44  503E               	movf	(SVS_initialize@Seven_SEG+1)^0,w,c
   610   00FC46  22DA               	addwfc	fsr2h,f,c
   611   00FC48  04DE               	decf	postinc2,w,c
   612   00FC4A  A4D8               	btfss	status,2,c
   613   00FC4C  EF2A  F07E         	goto	u871
   614   00FC50  EF2C  F07E         	goto	u870
   615   00FC54                     u871:
   616   00FC54  EF34  F07E         	goto	l1602
   617   00FC58                     u870:
   618   00FC58                     
   619                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 52:             gpio_port_high_nibble_direction_init
      +                          ialize(&temp, 0x0F);
   620   00FC58  0E46               	movlw	low SVS_initialize@temp
   621   00FC5A  6E33               	movwf	gpio_port_high_nibble_direction_initialize@pin_config^0,c
   622   00FC5C  0E00               	movlw	high SVS_initialize@temp
   623   00FC5E  6E34               	movwf	(gpio_port_high_nibble_direction_initialize@pin_config+1)^0,c
   624   00FC60  0E0F               	movlw	15
   625   00FC62  6E35               	movwf	gpio_port_high_nibble_direction_initialize@data^0,c
   626   00FC64  EC94  F07C         	call	_gpio_port_high_nibble_direction_initialize	;wreg free
   627   00FC68                     l1602:
   628                           
   629                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 56:         int svs_counter = 0;
   630   00FC68  0E00               	movlw	0
   631   00FC6A  6E45               	movwf	(SVS_initialize@svs_counter+1)^0,c
   632   00FC6C  0E00               	movlw	0
   633   00FC6E  6E44               	movwf	SVS_initialize@svs_counter^0,c
   634   00FC70                     
   635                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 58:         temp.direction = GPIO_DIRECTION_OUTPUT;
   636   00FC70  9C46               	bcf	SVS_initialize@temp^0,6,c
   637   00FC72                     l1610:
   638                           
   639                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 60:                 temp.port = Seven_SEG->SVS_EN_PI
      +                          NS[svs_counter].SVS_en_port;
   640   00FC72  C044  F03F         	movff	SVS_initialize@svs_counter,??_SVS_initialize
   641   00FC76  C045  F040         	movff	SVS_initialize@svs_counter+1,??_SVS_initialize+1
   642   00FC7A  90D8               	bcf	status,0,c
   643   00FC7C  363F               	rlcf	??_SVS_initialize^0,f,c
   644   00FC7E  3640               	rlcf	(??_SVS_initialize+1)^0,f,c
   645   00FC80  503F               	movf	??_SVS_initialize^0,w,c
   646   00FC82  243D               	addwf	SVS_initialize@Seven_SEG^0,w,c
   647   00FC84  6E41               	movwf	(??_SVS_initialize+2)^0,c
   648   00FC86  5040               	movf	(??_SVS_initialize+1)^0,w,c
   649   00FC88  203E               	addwfc	(SVS_initialize@Seven_SEG+1)^0,w,c
   650   00FC8A  6E42               	movwf	(??_SVS_initialize+3)^0,c
   651   00FC8C  0E02               	movlw	2
   652   00FC8E  2441               	addwf	(??_SVS_initialize+2)^0,w,c
   653   00FC90  6ED9               	movwf	fsr2l,c
   654   00FC92  0E00               	movlw	0
   655   00FC94  2042               	addwfc	(??_SVS_initialize+3)^0,w,c
   656   00FC96  6EDA               	movwf	fsr2h,c
   657   00FC98  50DF               	movf	indf2,w,c
   658   00FC9A  6E43               	movwf	(??_SVS_initialize+4)^0,c
   659   00FC9C  5046               	movf	SVS_initialize@temp^0,w,c
   660   00FC9E  1843               	xorwf	(??_SVS_initialize+4)^0,w,c
   661   00FCA0  0BF8               	andlw	-8
   662   00FCA2  1843               	xorwf	(??_SVS_initialize+4)^0,w,c
   663   00FCA4  6E46               	movwf	SVS_initialize@temp^0,c
   664                           
   665                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 61:                 temp.pin = Seven_SEG->SVS_EN_PIN
      +                          S[svs_counter].SVS_en_pin;
   666   00FCA6  C044  F03F         	movff	SVS_initialize@svs_counter,??_SVS_initialize
   667   00FCAA  C045  F040         	movff	SVS_initialize@svs_counter+1,??_SVS_initialize+1
   668   00FCAE  90D8               	bcf	status,0,c
   669   00FCB0  363F               	rlcf	??_SVS_initialize^0,f,c
   670   00FCB2  3640               	rlcf	(??_SVS_initialize+1)^0,f,c
   671   00FCB4  503F               	movf	??_SVS_initialize^0,w,c
   672   00FCB6  243D               	addwf	SVS_initialize@Seven_SEG^0,w,c
   673   00FCB8  6E41               	movwf	(??_SVS_initialize+2)^0,c
   674   00FCBA  5040               	movf	(??_SVS_initialize+1)^0,w,c
   675   00FCBC  203E               	addwfc	(SVS_initialize@Seven_SEG+1)^0,w,c
   676   00FCBE  6E42               	movwf	(??_SVS_initialize+3)^0,c
   677   00FCC0  0E03               	movlw	3
   678   00FCC2  2441               	addwf	(??_SVS_initialize+2)^0,w,c
   679   00FCC4  6ED9               	movwf	fsr2l,c
   680   00FCC6  0E00               	movlw	0
   681   00FCC8  2042               	addwfc	(??_SVS_initialize+3)^0,w,c
   682   00FCCA  6EDA               	movwf	fsr2h,c
   683   00FCCC  50DF               	movf	indf2,w,c
   684   00FCCE  6E43               	movwf	(??_SVS_initialize+4)^0,c
   685   00FCD0  4643               	rlncf	(??_SVS_initialize+4)^0,f,c
   686   00FCD2  4643               	rlncf	(??_SVS_initialize+4)^0,f,c
   687   00FCD4  4643               	rlncf	(??_SVS_initialize+4)^0,f,c
   688   00FCD6  5046               	movf	SVS_initialize@temp^0,w,c
   689   00FCD8  1843               	xorwf	(??_SVS_initialize+4)^0,w,c
   690   00FCDA  0BC7               	andlw	-57
   691   00FCDC  1843               	xorwf	(??_SVS_initialize+4)^0,w,c
   692   00FCDE  6E46               	movwf	SVS_initialize@temp^0,c
   693   00FCE0                     
   694                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 62:                 gpio_pin_direction_initialize(&t
      +                          emp);
   695   00FCE0  0E46               	movlw	low SVS_initialize@temp
   696   00FCE2  6E33               	movwf	gpio_pin_direction_initialize@pin_config^0,c
   697   00FCE4  0E00               	movlw	high SVS_initialize@temp
   698   00FCE6  6E34               	movwf	(gpio_pin_direction_initialize@pin_config+1)^0,c
   699   00FCE8  EC87  F07E         	call	_gpio_pin_direction_initialize	;wreg free
   700   00FCEC                     
   701                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 64:         }
   702   00FCEC  4A44               	infsnz	SVS_initialize@svs_counter^0,f,c
   703   00FCEE  2A45               	incf	(SVS_initialize@svs_counter+1)^0,f,c
   704   00FCF0  BE45               	btfsc	(SVS_initialize@svs_counter+1)^0,7,c
   705   00FCF2  EF84  F07E         	goto	u881
   706   00FCF6  5045               	movf	(SVS_initialize@svs_counter+1)^0,w,c
   707   00FCF8  E109               	bnz	u880
   708   00FCFA  0E06               	movlw	6
   709   00FCFC  5C44               	subwf	SVS_initialize@svs_counter^0,w,c
   710   00FCFE  A0D8               	btfss	status,0,c
   711   00FD00  EF84  F07E         	goto	u881
   712   00FD04  EF86  F07E         	goto	u880
   713   00FD08                     u881:
   714   00FD08  EF39  F07E         	goto	l1610
   715   00FD0C                     u880:
   716   00FD0C                     l291:
   717   00FD0C  0012               	return		;funcret
   718   00FD0E                     __end_of_SVS_initialize:
   719                           	callstack 0
   720                           
   721 ;; *************** function _gpio_port_low_nibble_direction_initialize *****************
   722 ;; Defined at:
   723 ;;		line 299 in file "MCAL_layer/GPIO/GPIO.c"
   724 ;; Parameters:    Size  Location     Type
   725 ;;  pin_config      2    0[COMRAM] PTR struct .
   726 ;;		 -> SVS_initialize@temp(1), 
   727 ;;  data            1    2[COMRAM] unsigned char 
   728 ;; Auto vars:     Size  Location     Type
   729 ;;  ret             1    0        unsigned char 
   730 ;; Return value:  Size  Location     Type
   731 ;;                  1    wreg      unsigned char 
   732 ;; Registers used:
   733 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   734 ;; Tracked objects:
   735 ;;		On entry : 0/0
   736 ;;		On exit  : 0/0
   737 ;;		Unchanged: 0/0
   738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   739 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   741 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   742 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   743 ;;Total ram usage:       10 bytes
   744 ;; Hardware stack levels used: 1
   745 ;; This function calls:
   746 ;;		Nothing
   747 ;; This function is called by:
   748 ;;		_SVS_initialize
   749 ;; This function uses a non-reentrant model
   750 ;;
   751                           
   752                           	psect	text3
   753   00F9AC                     __ptext3:
   754                           	callstack 0
   755   00F9AC                     _gpio_port_low_nibble_direction_initialize:
   756                           	callstack 28
   757   00F9AC                     
   758                           ;MCAL_layer/GPIO/GPIO.c: 301:     if(pin_config == ((void*)0)){
   759   00F9AC  5033               	movf	gpio_port_low_nibble_direction_initialize@pin_config^0,w,c
   760   00F9AE  1034               	iorwf	(gpio_port_low_nibble_direction_initialize@pin_config+1)^0,w,c
   761   00F9B0  A4D8               	btfss	status,2,c
   762   00F9B2  EFDD  F07C         	goto	u781
   763   00F9B6  EFDF  F07C         	goto	u780
   764   00F9BA                     u781:
   765   00F9BA  EFE1  F07C         	goto	l1524
   766   00F9BE                     u780:
   767   00F9BE                     
   768                           ;MCAL_layer/GPIO/GPIO.c: 303:     }
   769   00F9BE  EF17  F07D         	goto	l149
   770   00F9C2                     l1524:
   771                           
   772                           ;MCAL_layer/GPIO/GPIO.c: 305:         ((*((volatile uint8 *)(tris_registers[pin_config->
      +                          port]))) = (((*((volatile uint8 *)(tris_registers[pin_config->port])))&0xF0)|(data&0x0F)
      +                          ));
   773   00F9C2  C033  FFD9         	movff	gpio_port_low_nibble_direction_initialize@pin_config,fsr2l
   774   00F9C6  C034  FFDA         	movff	gpio_port_low_nibble_direction_initialize@pin_config+1,fsr2h
   775   00F9CA  50DF               	movf	223,w,c
   776   00F9CC  0B07               	andlw	7
   777   00F9CE  6E36               	movwf	??_gpio_port_low_nibble_direction_initialize^0,c
   778   00F9D0  5036               	movf	??_gpio_port_low_nibble_direction_initialize^0,w,c
   779   00F9D2  0D02               	mullw	2
   780   00F9D4  0E15               	movlw	low _tris_registers
   781   00F9D6  24F3               	addwf	243,w,c
   782   00F9D8  6ED9               	movwf	fsr2l,c
   783   00F9DA  0E00               	movlw	high _tris_registers
   784   00F9DC  20F4               	addwfc	prodh,w,c
   785   00F9DE  6EDA               	movwf	fsr2h,c
   786   00F9E0  CFDE F037          	movff	postinc2,??_gpio_port_low_nibble_direction_initialize+1
   787   00F9E4  CFDD F038          	movff	postdec2,??_gpio_port_low_nibble_direction_initialize+2
   788   00F9E8  C037  FFD9         	movff	??_gpio_port_low_nibble_direction_initialize+1,fsr2l
   789   00F9EC  C038  FFDA         	movff	??_gpio_port_low_nibble_direction_initialize+2,fsr2h
   790   00F9F0  C035  F039         	movff	gpio_port_low_nibble_direction_initialize@data,??_gpio_port_low_nibble_direction_
      +                          initialize+3
   791   00F9F4  0E0F               	movlw	15
   792   00F9F6  1639               	andwf	(??_gpio_port_low_nibble_direction_initialize+3)^0,f,c
   793   00F9F8  C033  FFE1         	movff	gpio_port_low_nibble_direction_initialize@pin_config,fsr1l
   794   00F9FC  C034  FFE2         	movff	gpio_port_low_nibble_direction_initialize@pin_config+1,fsr1h
   795   00FA00  50E7               	movf	231,w,c
   796   00FA02  0B07               	andlw	7
   797   00FA04  6E3A               	movwf	(??_gpio_port_low_nibble_direction_initialize+4)^0,c
   798   00FA06  503A               	movf	(??_gpio_port_low_nibble_direction_initialize+4)^0,w,c
   799   00FA08  0D02               	mullw	2
   800   00FA0A  0E15               	movlw	low _tris_registers
   801   00FA0C  24F3               	addwf	243,w,c
   802   00FA0E  6EE1               	movwf	fsr1l,c
   803   00FA10  0E00               	movlw	high _tris_registers
   804   00FA12  20F4               	addwfc	prodh,w,c
   805   00FA14  6EE2               	movwf	fsr1h,c
   806   00FA16  CFE6 F03B          	movff	postinc1,??_gpio_port_low_nibble_direction_initialize+5
   807   00FA1A  CFE5 F03C          	movff	postdec1,??_gpio_port_low_nibble_direction_initialize+6
   808   00FA1E  C03B  FFE1         	movff	??_gpio_port_low_nibble_direction_initialize+5,fsr1l
   809   00FA22  C03C  FFE2         	movff	??_gpio_port_low_nibble_direction_initialize+6,fsr1h
   810   00FA26  50E7               	movf	indf1,w,c
   811   00FA28  0BF0               	andlw	240
   812   00FA2A  1039               	iorwf	(??_gpio_port_low_nibble_direction_initialize+3)^0,w,c
   813   00FA2C  6EDF               	movwf	indf2,c
   814   00FA2E                     l149:
   815   00FA2E  0012               	return		;funcret
   816   00FA30                     __end_of_gpio_port_low_nibble_direction_initialize:
   817                           	callstack 0
   818                           
   819 ;; *************** function _gpio_port_high_nibble_direction_initialize *****************
   820 ;; Defined at:
   821 ;;		line 320 in file "MCAL_layer/GPIO/GPIO.c"
   822 ;; Parameters:    Size  Location     Type
   823 ;;  pin_config      2    0[COMRAM] PTR struct .
   824 ;;		 -> SVS_initialize@temp(1), 
   825 ;;  data            1    2[COMRAM] unsigned char 
   826 ;; Auto vars:     Size  Location     Type
   827 ;;  ret             1    0        unsigned char 
   828 ;; Return value:  Size  Location     Type
   829 ;;                  1    wreg      unsigned char 
   830 ;; Registers used:
   831 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   832 ;; Tracked objects:
   833 ;;		On entry : 0/0
   834 ;;		On exit  : 0/0
   835 ;;		Unchanged: 0/0
   836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   837 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   839 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   840 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   841 ;;Total ram usage:       10 bytes
   842 ;; Hardware stack levels used: 1
   843 ;; This function calls:
   844 ;;		Nothing
   845 ;; This function is called by:
   846 ;;		_SVS_initialize
   847 ;; This function uses a non-reentrant model
   848 ;;
   849                           
   850                           	psect	text4
   851   00F928                     __ptext4:
   852                           	callstack 0
   853   00F928                     _gpio_port_high_nibble_direction_initialize:
   854                           	callstack 28
   855   00F928                     
   856                           ;MCAL_layer/GPIO/GPIO.c: 322:     if(pin_config == ((void*)0)){
   857   00F928  5033               	movf	gpio_port_high_nibble_direction_initialize@pin_config^0,w,c
   858   00F92A  1034               	iorwf	(gpio_port_high_nibble_direction_initialize@pin_config+1)^0,w,c
   859   00F92C  A4D8               	btfss	status,2,c
   860   00F92E  EF9B  F07C         	goto	u801
   861   00F932  EF9D  F07C         	goto	u800
   862   00F936                     u801:
   863   00F936  EF9F  F07C         	goto	l1544
   864   00F93A                     u800:
   865   00F93A                     
   866                           ;MCAL_layer/GPIO/GPIO.c: 324:     }
   867   00F93A  EFD5  F07C         	goto	l159
   868   00F93E                     l1544:
   869                           
   870                           ;MCAL_layer/GPIO/GPIO.c: 326:         ((*((volatile uint8 *)(tris_registers[pin_config->
      +                          port]))) = (((*((volatile uint8 *)(tris_registers[pin_config->port])))&0x0F)|(data&0xF0)
      +                          ));
   871   00F93E  C033  FFD9         	movff	gpio_port_high_nibble_direction_initialize@pin_config,fsr2l
   872   00F942  C034  FFDA         	movff	gpio_port_high_nibble_direction_initialize@pin_config+1,fsr2h
   873   00F946  50DF               	movf	223,w,c
   874   00F948  0B07               	andlw	7
   875   00F94A  6E36               	movwf	??_gpio_port_high_nibble_direction_initialize^0,c
   876   00F94C  5036               	movf	??_gpio_port_high_nibble_direction_initialize^0,w,c
   877   00F94E  0D02               	mullw	2
   878   00F950  0E15               	movlw	low _tris_registers
   879   00F952  24F3               	addwf	243,w,c
   880   00F954  6ED9               	movwf	fsr2l,c
   881   00F956  0E00               	movlw	high _tris_registers
   882   00F958  20F4               	addwfc	prodh,w,c
   883   00F95A  6EDA               	movwf	fsr2h,c
   884   00F95C  CFDE F037          	movff	postinc2,??_gpio_port_high_nibble_direction_initialize+1
   885   00F960  CFDD F038          	movff	postdec2,??_gpio_port_high_nibble_direction_initialize+2
   886   00F964  C037  FFD9         	movff	??_gpio_port_high_nibble_direction_initialize+1,fsr2l
   887   00F968  C038  FFDA         	movff	??_gpio_port_high_nibble_direction_initialize+2,fsr2h
   888   00F96C  C035  F039         	movff	gpio_port_high_nibble_direction_initialize@data,??_gpio_port_high_nibble_directio
      +                          n_initialize+3
   889   00F970  0EF0               	movlw	240
   890   00F972  1639               	andwf	(??_gpio_port_high_nibble_direction_initialize+3)^0,f,c
   891   00F974  C033  FFE1         	movff	gpio_port_high_nibble_direction_initialize@pin_config,fsr1l
   892   00F978  C034  FFE2         	movff	gpio_port_high_nibble_direction_initialize@pin_config+1,fsr1h
   893   00F97C  50E7               	movf	231,w,c
   894   00F97E  0B07               	andlw	7
   895   00F980  6E3A               	movwf	(??_gpio_port_high_nibble_direction_initialize+4)^0,c
   896   00F982  503A               	movf	(??_gpio_port_high_nibble_direction_initialize+4)^0,w,c
   897   00F984  0D02               	mullw	2
   898   00F986  0E15               	movlw	low _tris_registers
   899   00F988  24F3               	addwf	243,w,c
   900   00F98A  6EE1               	movwf	fsr1l,c
   901   00F98C  0E00               	movlw	high _tris_registers
   902   00F98E  20F4               	addwfc	prodh,w,c
   903   00F990  6EE2               	movwf	fsr1h,c
   904   00F992  CFE6 F03B          	movff	postinc1,??_gpio_port_high_nibble_direction_initialize+5
   905   00F996  CFE5 F03C          	movff	postdec1,??_gpio_port_high_nibble_direction_initialize+6
   906   00F99A  C03B  FFE1         	movff	??_gpio_port_high_nibble_direction_initialize+5,fsr1l
   907   00F99E  C03C  FFE2         	movff	??_gpio_port_high_nibble_direction_initialize+6,fsr1h
   908   00F9A2  50E7               	movf	indf1,w,c
   909   00F9A4  0B0F               	andlw	15
   910   00F9A6  1039               	iorwf	(??_gpio_port_high_nibble_direction_initialize+3)^0,w,c
   911   00F9A8  6EDF               	movwf	indf2,c
   912   00F9AA                     l159:
   913   00F9AA  0012               	return		;funcret
   914   00F9AC                     __end_of_gpio_port_high_nibble_direction_initialize:
   915                           	callstack 0
   916                           
   917 ;; *************** function _gpio_pin_direction_initialize *****************
   918 ;; Defined at:
   919 ;;		line 16 in file "MCAL_layer/GPIO/GPIO.c"
   920 ;; Parameters:    Size  Location     Type
   921 ;;  pin_config      2    0[COMRAM] PTR const struct .
   922 ;;		 -> SVS_initialize@temp(1), led_intialize@temp(1), 
   923 ;; Auto vars:     Size  Location     Type
   924 ;;  ret             1    8[COMRAM] unsigned char 
   925 ;; Return value:  Size  Location     Type
   926 ;;                  1    wreg      unsigned char 
   927 ;; Registers used:
   928 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   929 ;; Tracked objects:
   930 ;;		On entry : 0/0
   931 ;;		On exit  : 0/0
   932 ;;		Unchanged: 0/0
   933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   934 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   935 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   936 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   937 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   938 ;;Total ram usage:        9 bytes
   939 ;; Hardware stack levels used: 1
   940 ;; This function calls:
   941 ;;		Nothing
   942 ;; This function is called by:
   943 ;;		_SVS_initialize
   944 ;;		_led_intialize
   945 ;;		_gpio_pin_initialize
   946 ;;		_button_initializa
   947 ;;		_relay_initialize
   948 ;;		_motor_initialize
   949 ;; This function uses a non-reentrant model
   950 ;;
   951                           
   952                           	psect	text5
   953   00FD0E                     __ptext5:
   954                           	callstack 0
   955   00FD0E                     _gpio_pin_direction_initialize:
   956                           	callstack 28
   957   00FD0E                     
   958                           ;MCAL_layer/GPIO/GPIO.c: 17:     Std_ReturnType ret = (Std_ReturnType)0x00;
   959   00FD0E  0E00               	movlw	0
   960   00FD10  6E3B               	movwf	gpio_pin_direction_initialize@ret^0,c
   961   00FD12                     
   962                           ;MCAL_layer/GPIO/GPIO.c: 18:     if(pin_config == ((void*)0) || pin_config->pin > 8 -1 |
      +                          | pin_config->port > 5 -1){
   963   00FD12  5033               	movf	gpio_pin_direction_initialize@pin_config^0,w,c
   964   00FD14  1034               	iorwf	(gpio_pin_direction_initialize@pin_config+1)^0,w,c
   965   00FD16  B4D8               	btfsc	status,2,c
   966   00FD18  EF90  F07E         	goto	u711
   967   00FD1C  EF92  F07E         	goto	u710
   968   00FD20                     u711:
   969   00FD20  EFB2  F07E         	goto	l1504
   970   00FD24                     u710:
   971   00FD24  C033  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
   972   00FD28  C034  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
   973   00FD2C  30DF               	rrcf	223,w,c
   974   00FD2E  32E8               	rrcf	wreg,f,c
   975   00FD30  32E8               	rrcf	wreg,f,c
   976   00FD32  0B07               	andlw	7
   977   00FD34  6E35               	movwf	??_gpio_pin_direction_initialize^0,c
   978   00FD36  0E08               	movlw	8
   979   00FD38  6035               	cpfslt	??_gpio_pin_direction_initialize^0,c
   980   00FD3A  EFA1  F07E         	goto	u721
   981   00FD3E  EFA3  F07E         	goto	u720
   982   00FD42                     u721:
   983   00FD42  EFB2  F07E         	goto	l1504
   984   00FD46                     u720:
   985   00FD46  C033  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
   986   00FD4A  C034  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
   987   00FD4E  50DF               	movf	223,w,c
   988   00FD50  0B07               	andlw	7
   989   00FD52  6E35               	movwf	??_gpio_pin_direction_initialize^0,c
   990   00FD54  0E04               	movlw	4
   991   00FD56  6435               	cpfsgt	??_gpio_pin_direction_initialize^0,c
   992   00FD58  EFB0  F07E         	goto	u731
   993   00FD5C  EFB2  F07E         	goto	u730
   994   00FD60                     u731:
   995   00FD60  EFB6  F07E         	goto	l1506
   996   00FD64                     u730:
   997   00FD64                     l1504:
   998                           
   999                           ;MCAL_layer/GPIO/GPIO.c: 19:         ret =(Std_ReturnType)0x01;
  1000   00FD64  0E01               	movlw	1
  1001   00FD66  6E3B               	movwf	gpio_pin_direction_initialize@ret^0,c
  1002                           
  1003                           ;MCAL_layer/GPIO/GPIO.c: 20:     }
  1004   00FD68  EF29  F07F         	goto	l76
  1005   00FD6C                     l1506:
  1006                           
  1007                           ;MCAL_layer/GPIO/GPIO.c: 22:         if(pin_config->direction == GPIO_DIRECTION_OUTPUT){
  1008   00FD6C  C033  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  1009   00FD70  C034  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  1010   00FD74  BCDF               	btfsc	indf2,6,c
  1011   00FD76  EFBF  F07E         	goto	u741
  1012   00FD7A  EFC1  F07E         	goto	u740
  1013   00FD7E                     u741:
  1014   00FD7E  EFF2  F07E         	goto	l1510
  1015   00FD82                     u740:
  1016   00FD82                     
  1017                           ;MCAL_layer/GPIO/GPIO.c: 23:         ((*((volatile uint8 *)(tris_registers[pin_config->p
      +                          ort]))) &= (~(0x01 << pin_config->pin)));
  1018   00FD82  C033  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  1019   00FD86  C034  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  1020   00FD8A  30DF               	rrcf	223,w,c
  1021   00FD8C  32E8               	rrcf	wreg,f,c
  1022   00FD8E  32E8               	rrcf	wreg,f,c
  1023   00FD90  0B07               	andlw	7
  1024   00FD92  6E35               	movwf	??_gpio_pin_direction_initialize^0,c
  1025   00FD94  0E01               	movlw	1
  1026   00FD96  6E36               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  1027   00FD98  2A35               	incf	??_gpio_pin_direction_initialize^0,f,c
  1028   00FD9A  EFD1  F07E         	goto	u754
  1029   00FD9E                     u755:
  1030   00FD9E  90D8               	bcf	status,0,c
  1031   00FDA0  3636               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  1032   00FDA2                     u754:
  1033   00FDA2  2E35               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  1034   00FDA4  EFCF  F07E         	goto	u755
  1035   00FDA8  5036               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1036   00FDAA  0AFF               	xorlw	255
  1037   00FDAC  6E37               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  1038   00FDAE  C033  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  1039   00FDB2  C034  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  1040   00FDB6  50DF               	movf	223,w,c
  1041   00FDB8  0B07               	andlw	7
  1042   00FDBA  6E38               	movwf	(??_gpio_pin_direction_initialize+3)^0,c
  1043   00FDBC  5038               	movf	(??_gpio_pin_direction_initialize+3)^0,w,c
  1044   00FDBE  0D02               	mullw	2
  1045   00FDC0  0E15               	movlw	low _tris_registers
  1046   00FDC2  24F3               	addwf	243,w,c
  1047   00FDC4  6ED9               	movwf	fsr2l,c
  1048   00FDC6  0E00               	movlw	high _tris_registers
  1049   00FDC8  20F4               	addwfc	prodh,w,c
  1050   00FDCA  6EDA               	movwf	fsr2h,c
  1051   00FDCC  CFDE F039          	movff	postinc2,??_gpio_pin_direction_initialize+4
  1052   00FDD0  CFDD F03A          	movff	postdec2,??_gpio_pin_direction_initialize+5
  1053   00FDD4  C039  FFD9         	movff	??_gpio_pin_direction_initialize+4,fsr2l
  1054   00FDD8  C03A  FFDA         	movff	??_gpio_pin_direction_initialize+5,fsr2h
  1055   00FDDC  5037               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  1056   00FDDE  16DF               	andwf	indf2,f,c
  1057                           
  1058                           ;MCAL_layer/GPIO/GPIO.c: 25:         }
  1059   00FDE0  EF29  F07F         	goto	l76
  1060   00FDE4                     l1510:
  1061   00FDE4  C033  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  1062   00FDE8  C034  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  1063   00FDEC  ACDF               	btfss	indf2,6,c
  1064   00FDEE  EFFB  F07E         	goto	u761
  1065   00FDF2  EFFD  F07E         	goto	u760
  1066   00FDF6                     u761:
  1067   00FDF6  EFB2  F07E         	goto	l1504
  1068   00FDFA                     u760:
  1069   00FDFA                     
  1070                           ;MCAL_layer/GPIO/GPIO.c: 27:             ((*((volatile uint8 *)(tris_registers[pin_confi
      +                          g->port]))) |= (0x01 << pin_config->pin));
  1071   00FDFA  C033  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  1072   00FDFE  C034  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  1073   00FE02  30DF               	rrcf	223,w,c
  1074   00FE04  32E8               	rrcf	wreg,f,c
  1075   00FE06  32E8               	rrcf	wreg,f,c
  1076   00FE08  0B07               	andlw	7
  1077   00FE0A  6E35               	movwf	??_gpio_pin_direction_initialize^0,c
  1078   00FE0C  0E01               	movlw	1
  1079   00FE0E  6E36               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  1080   00FE10  2A35               	incf	??_gpio_pin_direction_initialize^0,f,c
  1081   00FE12  EF0D  F07F         	goto	u774
  1082   00FE16                     u775:
  1083   00FE16  90D8               	bcf	status,0,c
  1084   00FE18  3636               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  1085   00FE1A                     u774:
  1086   00FE1A  2E35               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  1087   00FE1C  EF0B  F07F         	goto	u775
  1088   00FE20  C033  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  1089   00FE24  C034  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  1090   00FE28  50DF               	movf	223,w,c
  1091   00FE2A  0B07               	andlw	7
  1092   00FE2C  6E37               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  1093   00FE2E  5037               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  1094   00FE30  0D02               	mullw	2
  1095   00FE32  0E15               	movlw	low _tris_registers
  1096   00FE34  24F3               	addwf	243,w,c
  1097   00FE36  6ED9               	movwf	fsr2l,c
  1098   00FE38  0E00               	movlw	high _tris_registers
  1099   00FE3A  20F4               	addwfc	prodh,w,c
  1100   00FE3C  6EDA               	movwf	fsr2h,c
  1101   00FE3E  CFDE F038          	movff	postinc2,??_gpio_pin_direction_initialize+3
  1102   00FE42  CFDD F039          	movff	postdec2,??_gpio_pin_direction_initialize+4
  1103   00FE46  C038  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  1104   00FE4A  C039  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  1105   00FE4E  5036               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1106   00FE50  12DF               	iorwf	indf2,f,c
  1107   00FE52                     l76:
  1108                           
  1109                           ;MCAL_layer/GPIO/GPIO.c: 34:     return ret;
  1110   00FE52  503B               	movf	gpio_pin_direction_initialize@ret^0,w,c
  1111   00FE54  0012               	return		;funcret
  1112   00FE56                     __end_of_gpio_pin_direction_initialize:
  1113                           	callstack 0
  1114                           
  1115 ;; *************** function _SVS_print_pov *****************
  1116 ;; Defined at:
  1117 ;;		line 92 in file "ECU_layer/7_SEGMENTS/7_SEGMENTS.c"
  1118 ;; Parameters:    Size  Location     Type
  1119 ;;  Seven_SEG       2   15[COMRAM] PTR struct .
  1120 ;;		 -> seven_seg(14), 
  1121 ;;  data            2   17[COMRAM] PTR unsigned char 
  1122 ;;		 -> main@data(6), 
  1123 ;; Auto vars:     Size  Location     Type
  1124 ;;  l               4   24[COMRAM] long 
  1125 ;;  svs_counter_    2   28[COMRAM] int 
  1126 ;;  svs_counter     1   31[COMRAM] unsigned char 
  1127 ;;  temp            1   30[COMRAM] struct .
  1128 ;;  ret             1    0        unsigned char 
  1129 ;; Return value:  Size  Location     Type
  1130 ;;                  1    wreg      unsigned char 
  1131 ;; Registers used:
  1132 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1133 ;; Tracked objects:
  1134 ;;		On entry : 0/0
  1135 ;;		On exit  : 0/0
  1136 ;;		Unchanged: 0/0
  1137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1138 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1139 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1140 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1141 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1142 ;;Total ram usage:       17 bytes
  1143 ;; Hardware stack levels used: 1
  1144 ;; Hardware stack levels required when called: 2
  1145 ;; This function calls:
  1146 ;;		_SVS_print
  1147 ;;		_gpio_pin_write_logic
  1148 ;; This function is called by:
  1149 ;;		_main
  1150 ;; This function uses a non-reentrant model
  1151 ;;
  1152                           
  1153                           	psect	text6
  1154   00FE56                     __ptext6:
  1155                           	callstack 0
  1156   00FE56                     _SVS_print_pov:
  1157                           	callstack 28
  1158   00FE56                     
  1159                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 95:         if(Seven_SEG == ((void*)0)){
  1160   00FE56  5042               	movf	SVS_print_pov@Seven_SEG^0,w,c
  1161   00FE58  1043               	iorwf	(SVS_print_pov@Seven_SEG+1)^0,w,c
  1162   00FE5A  A4D8               	btfss	status,2,c
  1163   00FE5C  EF32  F07F         	goto	u921
  1164   00FE60  EF34  F07F         	goto	u920
  1165   00FE64                     u921:
  1166   00FE64  EF36  F07F         	goto	l1646
  1167   00FE68                     u920:
  1168   00FE68                     
  1169                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 97:         }
  1170   00FE68  EFFF  F07F         	goto	l310
  1171   00FE6C                     l1646:
  1172                           
  1173                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 99:             uint8 svs_counter = 0;
  1174   00FE6C  0E00               	movlw	0
  1175   00FE6E  6E52               	movwf	SVS_print_pov@svs_counter^0,c
  1176   00FE70                     l1652:
  1177                           
  1178                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 102:                 for(int svs_counter_2 = 0 ;svs_
      +                          counter_2<6; svs_counter_2++){
  1179   00FE70  0E00               	movlw	0
  1180   00FE72  6E50               	movwf	(SVS_print_pov@svs_counter_2+1)^0,c
  1181   00FE74  0E00               	movlw	0
  1182   00FE76  6E4F               	movwf	SVS_print_pov@svs_counter_2^0,c
  1183   00FE78                     l1658:
  1184                           
  1185                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 103:                     temp.port = Seven_SEG->SVS_
      +                          EN_PINS[svs_counter_2].SVS_en_port;
  1186   00FE78  C04F  F046         	movff	SVS_print_pov@svs_counter_2,??_SVS_print_pov
  1187   00FE7C  C050  F047         	movff	SVS_print_pov@svs_counter_2+1,??_SVS_print_pov+1
  1188   00FE80  90D8               	bcf	status,0,c
  1189   00FE82  3646               	rlcf	??_SVS_print_pov^0,f,c
  1190   00FE84  3647               	rlcf	(??_SVS_print_pov+1)^0,f,c
  1191   00FE86  5046               	movf	??_SVS_print_pov^0,w,c
  1192   00FE88  2442               	addwf	SVS_print_pov@Seven_SEG^0,w,c
  1193   00FE8A  6E48               	movwf	(??_SVS_print_pov+2)^0,c
  1194   00FE8C  5047               	movf	(??_SVS_print_pov+1)^0,w,c
  1195   00FE8E  2043               	addwfc	(SVS_print_pov@Seven_SEG+1)^0,w,c
  1196   00FE90  6E49               	movwf	(??_SVS_print_pov+3)^0,c
  1197   00FE92  0E02               	movlw	2
  1198   00FE94  2448               	addwf	(??_SVS_print_pov+2)^0,w,c
  1199   00FE96  6ED9               	movwf	fsr2l,c
  1200   00FE98  0E00               	movlw	0
  1201   00FE9A  2049               	addwfc	(??_SVS_print_pov+3)^0,w,c
  1202   00FE9C  6EDA               	movwf	fsr2h,c
  1203   00FE9E  50DF               	movf	indf2,w,c
  1204   00FEA0  6E4A               	movwf	(??_SVS_print_pov+4)^0,c
  1205   00FEA2  5051               	movf	SVS_print_pov@temp^0,w,c
  1206   00FEA4  184A               	xorwf	(??_SVS_print_pov+4)^0,w,c
  1207   00FEA6  0BF8               	andlw	-8
  1208   00FEA8  184A               	xorwf	(??_SVS_print_pov+4)^0,w,c
  1209   00FEAA  6E51               	movwf	SVS_print_pov@temp^0,c
  1210                           
  1211                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 104:                     temp.pin = Seven_SEG->SVS_E
      +                          N_PINS[svs_counter_2].SVS_en_pin;
  1212   00FEAC  C04F  F046         	movff	SVS_print_pov@svs_counter_2,??_SVS_print_pov
  1213   00FEB0  C050  F047         	movff	SVS_print_pov@svs_counter_2+1,??_SVS_print_pov+1
  1214   00FEB4  90D8               	bcf	status,0,c
  1215   00FEB6  3646               	rlcf	??_SVS_print_pov^0,f,c
  1216   00FEB8  3647               	rlcf	(??_SVS_print_pov+1)^0,f,c
  1217   00FEBA  5046               	movf	??_SVS_print_pov^0,w,c
  1218   00FEBC  2442               	addwf	SVS_print_pov@Seven_SEG^0,w,c
  1219   00FEBE  6E48               	movwf	(??_SVS_print_pov+2)^0,c
  1220   00FEC0  5047               	movf	(??_SVS_print_pov+1)^0,w,c
  1221   00FEC2  2043               	addwfc	(SVS_print_pov@Seven_SEG+1)^0,w,c
  1222   00FEC4  6E49               	movwf	(??_SVS_print_pov+3)^0,c
  1223   00FEC6  0E03               	movlw	3
  1224   00FEC8  2448               	addwf	(??_SVS_print_pov+2)^0,w,c
  1225   00FECA  6ED9               	movwf	fsr2l,c
  1226   00FECC  0E00               	movlw	0
  1227   00FECE  2049               	addwfc	(??_SVS_print_pov+3)^0,w,c
  1228   00FED0  6EDA               	movwf	fsr2h,c
  1229   00FED2  50DF               	movf	indf2,w,c
  1230   00FED4  6E4A               	movwf	(??_SVS_print_pov+4)^0,c
  1231   00FED6  464A               	rlncf	(??_SVS_print_pov+4)^0,f,c
  1232   00FED8  464A               	rlncf	(??_SVS_print_pov+4)^0,f,c
  1233   00FEDA  464A               	rlncf	(??_SVS_print_pov+4)^0,f,c
  1234   00FEDC  5051               	movf	SVS_print_pov@temp^0,w,c
  1235   00FEDE  184A               	xorwf	(??_SVS_print_pov+4)^0,w,c
  1236   00FEE0  0BC7               	andlw	-57
  1237   00FEE2  184A               	xorwf	(??_SVS_print_pov+4)^0,w,c
  1238   00FEE4  6E51               	movwf	SVS_print_pov@temp^0,c
  1239   00FEE6                     
  1240                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 105:                     gpio_pin_write_logic( &temp
      +                          , GPIO_HIGH);
  1241   00FEE6  0E51               	movlw	low SVS_print_pov@temp
  1242   00FEE8  6E33               	movwf	gpio_pin_write_logic@pin_config^0,c
  1243   00FEEA  0E00               	movlw	high SVS_print_pov@temp
  1244   00FEEC  6E34               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  1245   00FEEE  0E01               	movlw	1
  1246   00FEF0  6E35               	movwf	gpio_pin_write_logic@logic^0,c
  1247   00FEF2  EC60  F07D         	call	_gpio_pin_write_logic	;wreg free
  1248   00FEF6                     
  1249                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 106:                 }
  1250   00FEF6  4A4F               	infsnz	SVS_print_pov@svs_counter_2^0,f,c
  1251   00FEF8  2A50               	incf	(SVS_print_pov@svs_counter_2+1)^0,f,c
  1252   00FEFA  BE50               	btfsc	(SVS_print_pov@svs_counter_2+1)^0,7,c
  1253   00FEFC  EF89  F07F         	goto	u931
  1254   00FF00  5050               	movf	(SVS_print_pov@svs_counter_2+1)^0,w,c
  1255   00FF02  E109               	bnz	u930
  1256   00FF04  0E06               	movlw	6
  1257   00FF06  5C4F               	subwf	SVS_print_pov@svs_counter_2^0,w,c
  1258   00FF08  A0D8               	btfss	status,0,c
  1259   00FF0A  EF89  F07F         	goto	u931
  1260   00FF0E  EF8B  F07F         	goto	u930
  1261   00FF12                     u931:
  1262   00FF12  EF3C  F07F         	goto	l1658
  1263   00FF16                     u930:
  1264   00FF16                     
  1265                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 107:                 temp.port = Seven_SEG->SVS_EN_P
      +                          INS[svs_counter].SVS_en_port;
  1266   00FF16  5052               	movf	SVS_print_pov@svs_counter^0,w,c
  1267   00FF18  0D02               	mullw	2
  1268   00FF1A  CFF3 F046          	movff	prodl,??_SVS_print_pov
  1269   00FF1E  CFF4 F047          	movff	prodh,??_SVS_print_pov+1
  1270   00FF22  5046               	movf	??_SVS_print_pov^0,w,c
  1271   00FF24  2442               	addwf	SVS_print_pov@Seven_SEG^0,w,c
  1272   00FF26  6E48               	movwf	(??_SVS_print_pov+2)^0,c
  1273   00FF28  5047               	movf	(??_SVS_print_pov+1)^0,w,c
  1274   00FF2A  2043               	addwfc	(SVS_print_pov@Seven_SEG+1)^0,w,c
  1275   00FF2C  6E49               	movwf	(??_SVS_print_pov+3)^0,c
  1276   00FF2E  0E02               	movlw	2
  1277   00FF30  2448               	addwf	(??_SVS_print_pov+2)^0,w,c
  1278   00FF32  6ED9               	movwf	fsr2l,c
  1279   00FF34  0E00               	movlw	0
  1280   00FF36  2049               	addwfc	(??_SVS_print_pov+3)^0,w,c
  1281   00FF38  6EDA               	movwf	fsr2h,c
  1282   00FF3A  50DF               	movf	indf2,w,c
  1283   00FF3C  6E4A               	movwf	(??_SVS_print_pov+4)^0,c
  1284   00FF3E  5051               	movf	SVS_print_pov@temp^0,w,c
  1285   00FF40  184A               	xorwf	(??_SVS_print_pov+4)^0,w,c
  1286   00FF42  0BF8               	andlw	-8
  1287   00FF44  184A               	xorwf	(??_SVS_print_pov+4)^0,w,c
  1288   00FF46  6E51               	movwf	SVS_print_pov@temp^0,c
  1289                           
  1290                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 108:                 temp.pin = Seven_SEG->SVS_EN_PI
      +                          NS[svs_counter].SVS_en_pin;
  1291   00FF48  5052               	movf	SVS_print_pov@svs_counter^0,w,c
  1292   00FF4A  0D02               	mullw	2
  1293   00FF4C  CFF3 F046          	movff	prodl,??_SVS_print_pov
  1294   00FF50  CFF4 F047          	movff	prodh,??_SVS_print_pov+1
  1295   00FF54  5046               	movf	??_SVS_print_pov^0,w,c
  1296   00FF56  2442               	addwf	SVS_print_pov@Seven_SEG^0,w,c
  1297   00FF58  6E48               	movwf	(??_SVS_print_pov+2)^0,c
  1298   00FF5A  5047               	movf	(??_SVS_print_pov+1)^0,w,c
  1299   00FF5C  2043               	addwfc	(SVS_print_pov@Seven_SEG+1)^0,w,c
  1300   00FF5E  6E49               	movwf	(??_SVS_print_pov+3)^0,c
  1301   00FF60  0E03               	movlw	3
  1302   00FF62  2448               	addwf	(??_SVS_print_pov+2)^0,w,c
  1303   00FF64  6ED9               	movwf	fsr2l,c
  1304   00FF66  0E00               	movlw	0
  1305   00FF68  2049               	addwfc	(??_SVS_print_pov+3)^0,w,c
  1306   00FF6A  6EDA               	movwf	fsr2h,c
  1307   00FF6C  50DF               	movf	indf2,w,c
  1308   00FF6E  6E4A               	movwf	(??_SVS_print_pov+4)^0,c
  1309   00FF70  464A               	rlncf	(??_SVS_print_pov+4)^0,f,c
  1310   00FF72  464A               	rlncf	(??_SVS_print_pov+4)^0,f,c
  1311   00FF74  464A               	rlncf	(??_SVS_print_pov+4)^0,f,c
  1312   00FF76  5051               	movf	SVS_print_pov@temp^0,w,c
  1313   00FF78  184A               	xorwf	(??_SVS_print_pov+4)^0,w,c
  1314   00FF7A  0BC7               	andlw	-57
  1315   00FF7C  184A               	xorwf	(??_SVS_print_pov+4)^0,w,c
  1316   00FF7E  6E51               	movwf	SVS_print_pov@temp^0,c
  1317   00FF80                     
  1318                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 109:                 gpio_pin_write_logic( &temp, GP
      +                          IO_LOW);
  1319   00FF80  0E51               	movlw	low SVS_print_pov@temp
  1320   00FF82  6E33               	movwf	gpio_pin_write_logic@pin_config^0,c
  1321   00FF84  0E00               	movlw	high SVS_print_pov@temp
  1322   00FF86  6E34               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  1323   00FF88  0E00               	movlw	0
  1324   00FF8A  6E35               	movwf	gpio_pin_write_logic@logic^0,c
  1325   00FF8C  EC60  F07D         	call	_gpio_pin_write_logic	;wreg free
  1326   00FF90                     
  1327                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 110:                 SVS_print(Seven_SEG, data[svs_c
      +                          ounter]);
  1328   00FF90  C042  F03D         	movff	SVS_print_pov@Seven_SEG,SVS_print@Seven_SEG
  1329   00FF94  C043  F03E         	movff	SVS_print_pov@Seven_SEG+1,SVS_print@Seven_SEG+1
  1330   00FF98  5052               	movf	SVS_print_pov@svs_counter^0,w,c
  1331   00FF9A  2444               	addwf	SVS_print_pov@data^0,w,c
  1332   00FF9C  6ED9               	movwf	fsr2l,c
  1333   00FF9E  0E00               	movlw	0
  1334   00FFA0  2045               	addwfc	(SVS_print_pov@data+1)^0,w,c
  1335   00FFA2  6EDA               	movwf	fsr2h,c
  1336   00FFA4  50DF               	movf	indf2,w,c
  1337   00FFA6  6E3F               	movwf	SVS_print@data^0,c
  1338   00FFA8  EC18  F07D         	call	_SVS_print	;wreg free
  1339   00FFAC                     
  1340                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 111:                 for(long l =0; l<=5000000;l++);
  1341   00FFAC  0E00               	movlw	0
  1342   00FFAE  6E4B               	movwf	SVS_print_pov@l^0,c
  1343   00FFB0  0E00               	movlw	0
  1344   00FFB2  6E4C               	movwf	(SVS_print_pov@l+1)^0,c
  1345   00FFB4  0E00               	movlw	0
  1346   00FFB6  6E4D               	movwf	(SVS_print_pov@l+2)^0,c
  1347   00FFB8  0E00               	movlw	0
  1348   00FFBA  6E4E               	movwf	(SVS_print_pov@l+3)^0,c
  1349   00FFBC                     l1678:
  1350   00FFBC  0E01               	movlw	1
  1351   00FFBE  264B               	addwf	SVS_print_pov@l^0,f,c
  1352   00FFC0  0E00               	movlw	0
  1353   00FFC2  224C               	addwfc	(SVS_print_pov@l+1)^0,f,c
  1354   00FFC4  224D               	addwfc	(SVS_print_pov@l+2)^0,f,c
  1355   00FFC6  224E               	addwfc	(SVS_print_pov@l+3)^0,f,c
  1356   00FFC8  BE4E               	btfsc	(SVS_print_pov@l+3)^0,7,c
  1357   00FFCA  EFF4  F07F         	goto	u941
  1358   00FFCE  504E               	movf	(SVS_print_pov@l+3)^0,w,c
  1359   00FFD0  E10D               	bnz	u940
  1360   00FFD2  0E41               	movlw	65
  1361   00FFD4  5C4B               	subwf	SVS_print_pov@l^0,w,c
  1362   00FFD6  0E4B               	movlw	75
  1363   00FFD8  584C               	subwfb	(SVS_print_pov@l+1)^0,w,c
  1364   00FFDA  0E4C               	movlw	76
  1365   00FFDC  584D               	subwfb	(SVS_print_pov@l+2)^0,w,c
  1366   00FFDE  A0D8               	btfss	status,0,c
  1367   00FFE0  EFF4  F07F         	goto	u941
  1368   00FFE4  EFF6  F07F         	goto	u940
  1369   00FFE8                     u941:
  1370   00FFE8  EFDE  F07F         	goto	l1678
  1371   00FFEC                     u940:
  1372   00FFEC                     
  1373                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 112:             }
  1374   00FFEC  2A52               	incf	SVS_print_pov@svs_counter^0,f,c
  1375   00FFEE  0E05               	movlw	5
  1376   00FFF0  6452               	cpfsgt	SVS_print_pov@svs_counter^0,c
  1377   00FFF2  EFFD  F07F         	goto	u951
  1378   00FFF6  EFFF  F07F         	goto	u950
  1379   00FFFA                     u951:
  1380   00FFFA  EF38  F07F         	goto	l1652
  1381   00FFFE                     u950:
  1382   00FFFE                     l310:
  1383   00FFFE  0012               	return		;funcret
  1384   010000                     __end_of_SVS_print_pov:
  1385                           	callstack 0
  1386                           
  1387 ;; *************** function _gpio_pin_write_logic *****************
  1388 ;; Defined at:
  1389 ;;		line 75 in file "MCAL_layer/GPIO/GPIO.c"
  1390 ;; Parameters:    Size  Location     Type
  1391 ;;  pin_config      2    0[COMRAM] PTR struct .
  1392 ;;		 -> SVS_print_pov@temp(1), led_turn_off@temp(1), led_turn_on@temp(1), led_intialize@temp(1), 
  1393 ;;  logic           1    2[COMRAM] enum E2798
  1394 ;; Auto vars:     Size  Location     Type
  1395 ;;  ret             1    9[COMRAM] unsigned char 
  1396 ;; Return value:  Size  Location     Type
  1397 ;;                  1    wreg      unsigned char 
  1398 ;; Registers used:
  1399 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1400 ;; Tracked objects:
  1401 ;;		On entry : 0/0
  1402 ;;		On exit  : 0/0
  1403 ;;		Unchanged: 0/0
  1404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1405 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1406 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1407 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1408 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1409 ;;Total ram usage:       10 bytes
  1410 ;; Hardware stack levels used: 1
  1411 ;; This function calls:
  1412 ;;		Nothing
  1413 ;; This function is called by:
  1414 ;;		_SVS_print_pov
  1415 ;;		_led_intialize
  1416 ;;		_led_turn_on
  1417 ;;		_led_turn_off
  1418 ;;		_gpio_pin_initialize
  1419 ;;		_relay_turn_on
  1420 ;;		_relay_turn_off
  1421 ;;		_motor_turn_on
  1422 ;;		_motor_stop
  1423 ;; This function uses a non-reentrant model
  1424 ;;
  1425                           
  1426                           	psect	text7
  1427   00FAC0                     __ptext7:
  1428                           	callstack 0
  1429   00FAC0                     _gpio_pin_write_logic:
  1430                           	callstack 29
  1431   00FAC0                     
  1432                           ;MCAL_layer/GPIO/GPIO.c: 77:     Std_ReturnType ret = (Std_ReturnType)0x00;
  1433   00FAC0  0E00               	movlw	0
  1434   00FAC2  6E3C               	movwf	gpio_pin_write_logic@ret^0,c
  1435   00FAC4                     
  1436                           ;MCAL_layer/GPIO/GPIO.c: 79:     if(pin_config == ((void*)0)){
  1437   00FAC4  5033               	movf	gpio_pin_write_logic@pin_config^0,w,c
  1438   00FAC6  1034               	iorwf	(gpio_pin_write_logic@pin_config+1)^0,w,c
  1439   00FAC8  A4D8               	btfss	status,2,c
  1440   00FACA  EF69  F07D         	goto	u821
  1441   00FACE  EF6B  F07D         	goto	u820
  1442   00FAD2                     u821:
  1443   00FAD2  EFD8  F07D         	goto	l1576
  1444   00FAD6                     u820:
  1445   00FAD6                     l1562:
  1446                           
  1447                           ;MCAL_layer/GPIO/GPIO.c: 80:         ret =(Std_ReturnType)0x01;
  1448   00FAD6  0E01               	movlw	1
  1449   00FAD8  6E3C               	movwf	gpio_pin_write_logic@ret^0,c
  1450                           
  1451                           ;MCAL_layer/GPIO/GPIO.c: 81:     }
  1452   00FADA  EFED  F07D         	goto	l1578
  1453   00FADE                     l1564:
  1454                           
  1455                           ;MCAL_layer/GPIO/GPIO.c: 85:                 ((*((volatile uint8 *)(lat_registers[pin_co
      +                          nfig->port]))) |= (0x01 << pin_config->pin));
  1456   00FADE  C033  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  1457   00FAE2  C034  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  1458   00FAE6  30DF               	rrcf	223,w,c
  1459   00FAE8  32E8               	rrcf	wreg,f,c
  1460   00FAEA  32E8               	rrcf	wreg,f,c
  1461   00FAEC  0B07               	andlw	7
  1462   00FAEE  6E36               	movwf	??_gpio_pin_write_logic^0,c
  1463   00FAF0  0E01               	movlw	1
  1464   00FAF2  6E37               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1465   00FAF4  2A36               	incf	??_gpio_pin_write_logic^0,f,c
  1466   00FAF6  EF7F  F07D         	goto	u834
  1467   00FAFA                     u835:
  1468   00FAFA  90D8               	bcf	status,0,c
  1469   00FAFC  3637               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1470   00FAFE                     u834:
  1471   00FAFE  2E36               	decfsz	??_gpio_pin_write_logic^0,f,c
  1472   00FB00  EF7D  F07D         	goto	u835
  1473   00FB04  C033  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  1474   00FB08  C034  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  1475   00FB0C  50DF               	movf	223,w,c
  1476   00FB0E  0B07               	andlw	7
  1477   00FB10  6E38               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1478   00FB12  5038               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1479   00FB14  0D02               	mullw	2
  1480   00FB16  0E01               	movlw	low _lat_registers
  1481   00FB18  24F3               	addwf	243,w,c
  1482   00FB1A  6ED9               	movwf	fsr2l,c
  1483   00FB1C  0E00               	movlw	high _lat_registers
  1484   00FB1E  20F4               	addwfc	prodh,w,c
  1485   00FB20  6EDA               	movwf	fsr2h,c
  1486   00FB22  CFDE F039          	movff	postinc2,??_gpio_pin_write_logic+3
  1487   00FB26  CFDD F03A          	movff	postdec2,??_gpio_pin_write_logic+4
  1488   00FB2A  C039  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1489   00FB2E  C03A  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1490   00FB32  5037               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1491   00FB34  12DF               	iorwf	indf2,f,c
  1492   00FB36                     
  1493                           ;MCAL_layer/GPIO/GPIO.c: 86:                 pin_config->logic = GPIO_HIGH;
  1494   00FB36  C033  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  1495   00FB3A  C034  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  1496   00FB3E  8EDF               	bsf	indf2,7,c
  1497                           
  1498                           ;MCAL_layer/GPIO/GPIO.c: 87:                 break;
  1499   00FB40  EFED  F07D         	goto	l1578
  1500   00FB44                     l1568:
  1501                           
  1502                           ;MCAL_layer/GPIO/GPIO.c: 89:                 ((*((volatile uint8 *)(lat_registers[pin_co
      +                          nfig->port]))) &= (~(0x01 << pin_config->pin)));
  1503   00FB44  C033  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  1504   00FB48  C034  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  1505   00FB4C  30DF               	rrcf	223,w,c
  1506   00FB4E  32E8               	rrcf	wreg,f,c
  1507   00FB50  32E8               	rrcf	wreg,f,c
  1508   00FB52  0B07               	andlw	7
  1509   00FB54  6E36               	movwf	??_gpio_pin_write_logic^0,c
  1510   00FB56  0E01               	movlw	1
  1511   00FB58  6E37               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1512   00FB5A  2A36               	incf	??_gpio_pin_write_logic^0,f,c
  1513   00FB5C  EFB2  F07D         	goto	u844
  1514   00FB60                     u845:
  1515   00FB60  90D8               	bcf	status,0,c
  1516   00FB62  3637               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1517   00FB64                     u844:
  1518   00FB64  2E36               	decfsz	??_gpio_pin_write_logic^0,f,c
  1519   00FB66  EFB0  F07D         	goto	u845
  1520   00FB6A  5037               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1521   00FB6C  0AFF               	xorlw	255
  1522   00FB6E  6E38               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1523   00FB70  C033  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  1524   00FB74  C034  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  1525   00FB78  50DF               	movf	223,w,c
  1526   00FB7A  0B07               	andlw	7
  1527   00FB7C  6E39               	movwf	(??_gpio_pin_write_logic+3)^0,c
  1528   00FB7E  5039               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  1529   00FB80  0D02               	mullw	2
  1530   00FB82  0E01               	movlw	low _lat_registers
  1531   00FB84  24F3               	addwf	243,w,c
  1532   00FB86  6ED9               	movwf	fsr2l,c
  1533   00FB88  0E00               	movlw	high _lat_registers
  1534   00FB8A  20F4               	addwfc	prodh,w,c
  1535   00FB8C  6EDA               	movwf	fsr2h,c
  1536   00FB8E  CFDE F03A          	movff	postinc2,??_gpio_pin_write_logic+4
  1537   00FB92  CFDD F03B          	movff	postdec2,??_gpio_pin_write_logic+5
  1538   00FB96  C03A  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  1539   00FB9A  C03B  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  1540   00FB9E  5038               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1541   00FBA0  16DF               	andwf	indf2,f,c
  1542   00FBA2                     
  1543                           ;MCAL_layer/GPIO/GPIO.c: 90:                 pin_config->logic = GPIO_LOW;
  1544   00FBA2  C033  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  1545   00FBA6  C034  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  1546   00FBAA  9EDF               	bcf	indf2,7,c
  1547                           
  1548                           ;MCAL_layer/GPIO/GPIO.c: 91:                 break;
  1549   00FBAC  EFED  F07D         	goto	l1578
  1550   00FBB0                     l1576:
  1551   00FBB0  5035               	movf	gpio_pin_write_logic@logic^0,w,c
  1552   00FBB2  6E36               	movwf	??_gpio_pin_write_logic^0,c
  1553   00FBB4  6A37               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1554                           
  1555                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1556                           ; Switch size 1, requested type "simple"
  1557                           ; Number of cases is 1, Range of values is 0 to 0
  1558                           ; switch strategies available:
  1559                           ; Name         Instructions Cycles
  1560                           ; simple_byte            4     3 (average)
  1561                           ;	Chosen strategy is simple_byte
  1562   00FBB6  5037               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1563   00FBB8  0A00               	xorlw	0	; case 0
  1564   00FBBA  B4D8               	btfsc	status,2,c
  1565   00FBBC  EFE2  F07D         	goto	l1870
  1566   00FBC0  EF6B  F07D         	goto	l1562
  1567   00FBC4                     l1870:
  1568                           
  1569                           ; Switch size 1, requested type "simple"
  1570                           ; Number of cases is 2, Range of values is 0 to 1
  1571                           ; switch strategies available:
  1572                           ; Name         Instructions Cycles
  1573                           ; simple_byte            7     4 (average)
  1574                           ;	Chosen strategy is simple_byte
  1575   00FBC4  5036               	movf	??_gpio_pin_write_logic^0,w,c
  1576   00FBC6  0A00               	xorlw	0	; case 0
  1577   00FBC8  B4D8               	btfsc	status,2,c
  1578   00FBCA  EFA2  F07D         	goto	l1568
  1579   00FBCE  0A01               	xorlw	1	; case 1
  1580   00FBD0  B4D8               	btfsc	status,2,c
  1581   00FBD2  EF6F  F07D         	goto	l1564
  1582   00FBD6  EF6B  F07D         	goto	l1562
  1583   00FBDA                     l1578:
  1584                           
  1585                           ;MCAL_layer/GPIO/GPIO.c: 98:     return ret;
  1586   00FBDA  503C               	movf	gpio_pin_write_logic@ret^0,w,c
  1587   00FBDC  0012               	return		;funcret
  1588   00FBDE                     __end_of_gpio_pin_write_logic:
  1589                           	callstack 0
  1590                           
  1591 ;; *************** function _SVS_print *****************
  1592 ;; Defined at:
  1593 ;;		line 71 in file "ECU_layer/7_SEGMENTS/7_SEGMENTS.c"
  1594 ;; Parameters:    Size  Location     Type
  1595 ;;  Seven_SEG       2   10[COMRAM] PTR const struct .
  1596 ;;		 -> seven_seg(14), 
  1597 ;;  data            1   12[COMRAM] enum E2870
  1598 ;; Auto vars:     Size  Location     Type
  1599 ;;  temp            1   14[COMRAM] struct .
  1600 ;;  ret             1    0        unsigned char 
  1601 ;; Return value:  Size  Location     Type
  1602 ;;                  1    wreg      unsigned char 
  1603 ;; Registers used:
  1604 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1605 ;; Tracked objects:
  1606 ;;		On entry : 0/0
  1607 ;;		On exit  : 0/0
  1608 ;;		Unchanged: 0/0
  1609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1610 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1611 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1612 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1613 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1614 ;;Total ram usage:        5 bytes
  1615 ;; Hardware stack levels used: 1
  1616 ;; Hardware stack levels required when called: 1
  1617 ;; This function calls:
  1618 ;;		_gpio_port_high_nibble_write_logic
  1619 ;;		_gpio_port_low_nibble_write_logic
  1620 ;; This function is called by:
  1621 ;;		_SVS_print_pov
  1622 ;; This function uses a non-reentrant model
  1623 ;;
  1624                           
  1625                           	psect	text8
  1626   00FA30                     __ptext8:
  1627                           	callstack 0
  1628   00FA30                     _SVS_print:
  1629                           	callstack 28
  1630   00FA30                     
  1631                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 74:     if(Seven_SEG == ((void*)0)){
  1632   00FA30  503D               	movf	SVS_print@Seven_SEG^0,w,c
  1633   00FA32  103E               	iorwf	(SVS_print@Seven_SEG+1)^0,w,c
  1634   00FA34  A4D8               	btfss	status,2,c
  1635   00FA36  EF1F  F07D         	goto	u891
  1636   00FA3A  EF21  F07D         	goto	u890
  1637   00FA3E                     u891:
  1638   00FA3E  EF23  F07D         	goto	l1624
  1639   00FA42                     u890:
  1640   00FA42                     
  1641                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 76:     }
  1642   00FA42  EF5F  F07D         	goto	l299
  1643   00FA46                     l1624:
  1644                           
  1645                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 78:         pin_config_t temp;;ECU_layer/7_SEGMENTS/
      +                          7_SEGMENTS.c: 79:         temp.port = Seven_SEG->SVS_port;
  1646   00FA46  C03D  FFD9         	movff	SVS_print@Seven_SEG,fsr2l
  1647   00FA4A  C03E  FFDA         	movff	SVS_print@Seven_SEG+1,fsr2h
  1648   00FA4E  50DF               	movf	indf2,w,c
  1649   00FA50  6E40               	movwf	??_SVS_print^0,c
  1650   00FA52  5041               	movf	SVS_print@temp^0,w,c
  1651   00FA54  1840               	xorwf	??_SVS_print^0,w,c
  1652   00FA56  0BF8               	andlw	-8
  1653   00FA58  1840               	xorwf	??_SVS_print^0,w,c
  1654   00FA5A  6E41               	movwf	SVS_print@temp^0,c
  1655   00FA5C                     
  1656                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 80:         temp.direction= GPIO_DIRECTION_OUTPUT;
  1657   00FA5C  9C41               	bcf	SVS_print@temp^0,6,c
  1658                           
  1659                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 82:         if(Seven_SEG->SVS_nibble_state == SVS_LO
      +                          W_NIBBLE){
  1660   00FA5E  EE20 F001          	lfsr	2,1
  1661   00FA62  503D               	movf	SVS_print@Seven_SEG^0,w,c
  1662   00FA64  26D9               	addwf	fsr2l,f,c
  1663   00FA66  503E               	movf	(SVS_print@Seven_SEG+1)^0,w,c
  1664   00FA68  22DA               	addwfc	fsr2h,f,c
  1665   00FA6A  50DF               	movf	indf2,w,c
  1666   00FA6C  A4D8               	btfss	status,2,c
  1667   00FA6E  EF3B  F07D         	goto	u901
  1668   00FA72  EF3D  F07D         	goto	u900
  1669   00FA76                     u901:
  1670   00FA76  EF47  F07D         	goto	l1630
  1671   00FA7A                     u900:
  1672   00FA7A                     
  1673                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 83:             gpio_port_low_nibble_write_logic(&te
      +                          mp, data);
  1674   00FA7A  0E41               	movlw	low SVS_print@temp
  1675   00FA7C  6E33               	movwf	gpio_port_low_nibble_write_logic@pin_config^0,c
  1676   00FA7E  0E00               	movlw	high SVS_print@temp
  1677   00FA80  6E34               	movwf	(gpio_port_low_nibble_write_logic@pin_config+1)^0,c
  1678   00FA82  C03F  F035         	movff	SVS_print@data,gpio_port_low_nibble_write_logic@data
  1679   00FA86  EC52  F07C         	call	_gpio_port_low_nibble_write_logic	;wreg free
  1680                           
  1681                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 84:         }else if(Seven_SEG->SVS_nibble_state == 
      +                          SVS_HIGH_NIBBLE){
  1682   00FA8A  EF5F  F07D         	goto	l299
  1683   00FA8E                     l1630:
  1684   00FA8E  EE20 F001          	lfsr	2,1
  1685   00FA92  503D               	movf	SVS_print@Seven_SEG^0,w,c
  1686   00FA94  26D9               	addwf	fsr2l,f,c
  1687   00FA96  503E               	movf	(SVS_print@Seven_SEG+1)^0,w,c
  1688   00FA98  22DA               	addwfc	fsr2h,f,c
  1689   00FA9A  04DE               	decf	postinc2,w,c
  1690   00FA9C  A4D8               	btfss	status,2,c
  1691   00FA9E  EF53  F07D         	goto	u911
  1692   00FAA2  EF55  F07D         	goto	u910
  1693   00FAA6                     u911:
  1694   00FAA6  EF5F  F07D         	goto	l295
  1695   00FAAA                     u910:
  1696   00FAAA                     
  1697                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 85:             gpio_port_high_nibble_write_logic(&t
      +                          emp, data);
  1698   00FAAA  0E41               	movlw	low SVS_print@temp
  1699   00FAAC  6E33               	movwf	gpio_port_high_nibble_write_logic@pin_config^0,c
  1700   00FAAE  0E00               	movlw	high SVS_print@temp
  1701   00FAB0  6E34               	movwf	(gpio_port_high_nibble_write_logic@pin_config+1)^0,c
  1702   00FAB2  C03F  F035         	movff	SVS_print@data,gpio_port_high_nibble_write_logic@data
  1703   00FAB6  EC10  F07C         	call	_gpio_port_high_nibble_write_logic	;wreg free
  1704   00FABA  EF5F  F07D         	goto	l299
  1705   00FABE                     l295:
  1706   00FABE                     l299:
  1707   00FABE  0012               	return		;funcret
  1708   00FAC0                     __end_of_SVS_print:
  1709                           	callstack 0
  1710                           
  1711 ;; *************** function _gpio_port_low_nibble_write_logic *****************
  1712 ;; Defined at:
  1713 ;;		line 310 in file "MCAL_layer/GPIO/GPIO.c"
  1714 ;; Parameters:    Size  Location     Type
  1715 ;;  pin_config      2    0[COMRAM] PTR struct .
  1716 ;;		 -> SVS_print@temp(1), 
  1717 ;;  data            1    2[COMRAM] unsigned char 
  1718 ;; Auto vars:     Size  Location     Type
  1719 ;;  ret             1    0        unsigned char 
  1720 ;; Return value:  Size  Location     Type
  1721 ;;                  1    wreg      unsigned char 
  1722 ;; Registers used:
  1723 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1724 ;; Tracked objects:
  1725 ;;		On entry : 0/0
  1726 ;;		On exit  : 0/0
  1727 ;;		Unchanged: 0/0
  1728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1729 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1731 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1732 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1733 ;;Total ram usage:       10 bytes
  1734 ;; Hardware stack levels used: 1
  1735 ;; This function calls:
  1736 ;;		Nothing
  1737 ;; This function is called by:
  1738 ;;		_SVS_print
  1739 ;; This function uses a non-reentrant model
  1740 ;;
  1741                           
  1742                           	psect	text9
  1743   00F8A4                     __ptext9:
  1744                           	callstack 0
  1745   00F8A4                     _gpio_port_low_nibble_write_logic:
  1746                           	callstack 28
  1747   00F8A4                     
  1748                           ;MCAL_layer/GPIO/GPIO.c: 312:     if(pin_config == ((void*)0)){
  1749   00F8A4  5033               	movf	gpio_port_low_nibble_write_logic@pin_config^0,w,c
  1750   00F8A6  1034               	iorwf	(gpio_port_low_nibble_write_logic@pin_config+1)^0,w,c
  1751   00F8A8  A4D8               	btfss	status,2,c
  1752   00F8AA  EF59  F07C         	goto	u791
  1753   00F8AE  EF5B  F07C         	goto	u790
  1754   00F8B2                     u791:
  1755   00F8B2  EF5D  F07C         	goto	l1534
  1756   00F8B6                     u790:
  1757   00F8B6                     
  1758                           ;MCAL_layer/GPIO/GPIO.c: 314:     }
  1759   00F8B6  EF93  F07C         	goto	l154
  1760   00F8BA                     l1534:
  1761                           
  1762                           ;MCAL_layer/GPIO/GPIO.c: 316:         ((*((volatile uint8 *)(lat_registers[pin_config->p
      +                          ort]))) = (((*((volatile uint8 *)(lat_registers[pin_config->port])))&0xF0)|(data&0x0F)))
      +                          ;
  1763   00F8BA  C033  FFD9         	movff	gpio_port_low_nibble_write_logic@pin_config,fsr2l
  1764   00F8BE  C034  FFDA         	movff	gpio_port_low_nibble_write_logic@pin_config+1,fsr2h
  1765   00F8C2  50DF               	movf	223,w,c
  1766   00F8C4  0B07               	andlw	7
  1767   00F8C6  6E36               	movwf	??_gpio_port_low_nibble_write_logic^0,c
  1768   00F8C8  5036               	movf	??_gpio_port_low_nibble_write_logic^0,w,c
  1769   00F8CA  0D02               	mullw	2
  1770   00F8CC  0E01               	movlw	low _lat_registers
  1771   00F8CE  24F3               	addwf	243,w,c
  1772   00F8D0  6ED9               	movwf	fsr2l,c
  1773   00F8D2  0E00               	movlw	high _lat_registers
  1774   00F8D4  20F4               	addwfc	prodh,w,c
  1775   00F8D6  6EDA               	movwf	fsr2h,c
  1776   00F8D8  CFDE F037          	movff	postinc2,??_gpio_port_low_nibble_write_logic+1
  1777   00F8DC  CFDD F038          	movff	postdec2,??_gpio_port_low_nibble_write_logic+2
  1778   00F8E0  C037  FFD9         	movff	??_gpio_port_low_nibble_write_logic+1,fsr2l
  1779   00F8E4  C038  FFDA         	movff	??_gpio_port_low_nibble_write_logic+2,fsr2h
  1780   00F8E8  C035  F039         	movff	gpio_port_low_nibble_write_logic@data,??_gpio_port_low_nibble_write_logic+3
  1781   00F8EC  0E0F               	movlw	15
  1782   00F8EE  1639               	andwf	(??_gpio_port_low_nibble_write_logic+3)^0,f,c
  1783   00F8F0  C033  FFE1         	movff	gpio_port_low_nibble_write_logic@pin_config,fsr1l
  1784   00F8F4  C034  FFE2         	movff	gpio_port_low_nibble_write_logic@pin_config+1,fsr1h
  1785   00F8F8  50E7               	movf	231,w,c
  1786   00F8FA  0B07               	andlw	7
  1787   00F8FC  6E3A               	movwf	(??_gpio_port_low_nibble_write_logic+4)^0,c
  1788   00F8FE  503A               	movf	(??_gpio_port_low_nibble_write_logic+4)^0,w,c
  1789   00F900  0D02               	mullw	2
  1790   00F902  0E01               	movlw	low _lat_registers
  1791   00F904  24F3               	addwf	243,w,c
  1792   00F906  6EE1               	movwf	fsr1l,c
  1793   00F908  0E00               	movlw	high _lat_registers
  1794   00F90A  20F4               	addwfc	prodh,w,c
  1795   00F90C  6EE2               	movwf	fsr1h,c
  1796   00F90E  CFE6 F03B          	movff	postinc1,??_gpio_port_low_nibble_write_logic+5
  1797   00F912  CFE5 F03C          	movff	postdec1,??_gpio_port_low_nibble_write_logic+6
  1798   00F916  C03B  FFE1         	movff	??_gpio_port_low_nibble_write_logic+5,fsr1l
  1799   00F91A  C03C  FFE2         	movff	??_gpio_port_low_nibble_write_logic+6,fsr1h
  1800   00F91E  50E7               	movf	indf1,w,c
  1801   00F920  0BF0               	andlw	240
  1802   00F922  1039               	iorwf	(??_gpio_port_low_nibble_write_logic+3)^0,w,c
  1803   00F924  6EDF               	movwf	indf2,c
  1804   00F926                     l154:
  1805   00F926  0012               	return		;funcret
  1806   00F928                     __end_of_gpio_port_low_nibble_write_logic:
  1807                           	callstack 0
  1808                           
  1809 ;; *************** function _gpio_port_high_nibble_write_logic *****************
  1810 ;; Defined at:
  1811 ;;		line 331 in file "MCAL_layer/GPIO/GPIO.c"
  1812 ;; Parameters:    Size  Location     Type
  1813 ;;  pin_config      2    0[COMRAM] PTR struct .
  1814 ;;		 -> SVS_print@temp(1), 
  1815 ;;  data            1    2[COMRAM] unsigned char 
  1816 ;; Auto vars:     Size  Location     Type
  1817 ;;  ret             1    0        unsigned char 
  1818 ;; Return value:  Size  Location     Type
  1819 ;;                  1    wreg      unsigned char 
  1820 ;; Registers used:
  1821 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1822 ;; Tracked objects:
  1823 ;;		On entry : 0/0
  1824 ;;		On exit  : 0/0
  1825 ;;		Unchanged: 0/0
  1826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1827 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1829 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1830 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1831 ;;Total ram usage:       10 bytes
  1832 ;; Hardware stack levels used: 1
  1833 ;; This function calls:
  1834 ;;		Nothing
  1835 ;; This function is called by:
  1836 ;;		_SVS_print
  1837 ;; This function uses a non-reentrant model
  1838 ;;
  1839                           
  1840                           	psect	text10
  1841   00F820                     __ptext10:
  1842                           	callstack 0
  1843   00F820                     _gpio_port_high_nibble_write_logic:
  1844                           	callstack 28
  1845   00F820                     
  1846                           ;MCAL_layer/GPIO/GPIO.c: 333:     if(pin_config == ((void*)0)){
  1847   00F820  5033               	movf	gpio_port_high_nibble_write_logic@pin_config^0,w,c
  1848   00F822  1034               	iorwf	(gpio_port_high_nibble_write_logic@pin_config+1)^0,w,c
  1849   00F824  A4D8               	btfss	status,2,c
  1850   00F826  EF17  F07C         	goto	u811
  1851   00F82A  EF19  F07C         	goto	u810
  1852   00F82E                     u811:
  1853   00F82E  EF1B  F07C         	goto	l1554
  1854   00F832                     u810:
  1855   00F832                     
  1856                           ;MCAL_layer/GPIO/GPIO.c: 335:     }
  1857   00F832  EF51  F07C         	goto	l164
  1858   00F836                     l1554:
  1859                           
  1860                           ;MCAL_layer/GPIO/GPIO.c: 337:         ((*((volatile uint8 *)(lat_registers[pin_config->p
      +                          ort]))) = (((*((volatile uint8 *)(lat_registers[pin_config->port])))&0x0F)|(data&0xF0)))
      +                          ;
  1861   00F836  C033  FFD9         	movff	gpio_port_high_nibble_write_logic@pin_config,fsr2l
  1862   00F83A  C034  FFDA         	movff	gpio_port_high_nibble_write_logic@pin_config+1,fsr2h
  1863   00F83E  50DF               	movf	223,w,c
  1864   00F840  0B07               	andlw	7
  1865   00F842  6E36               	movwf	??_gpio_port_high_nibble_write_logic^0,c
  1866   00F844  5036               	movf	??_gpio_port_high_nibble_write_logic^0,w,c
  1867   00F846  0D02               	mullw	2
  1868   00F848  0E01               	movlw	low _lat_registers
  1869   00F84A  24F3               	addwf	243,w,c
  1870   00F84C  6ED9               	movwf	fsr2l,c
  1871   00F84E  0E00               	movlw	high _lat_registers
  1872   00F850  20F4               	addwfc	prodh,w,c
  1873   00F852  6EDA               	movwf	fsr2h,c
  1874   00F854  CFDE F037          	movff	postinc2,??_gpio_port_high_nibble_write_logic+1
  1875   00F858  CFDD F038          	movff	postdec2,??_gpio_port_high_nibble_write_logic+2
  1876   00F85C  C037  FFD9         	movff	??_gpio_port_high_nibble_write_logic+1,fsr2l
  1877   00F860  C038  FFDA         	movff	??_gpio_port_high_nibble_write_logic+2,fsr2h
  1878   00F864  C035  F039         	movff	gpio_port_high_nibble_write_logic@data,??_gpio_port_high_nibble_write_logic+3
  1879   00F868  0EF0               	movlw	240
  1880   00F86A  1639               	andwf	(??_gpio_port_high_nibble_write_logic+3)^0,f,c
  1881   00F86C  C033  FFE1         	movff	gpio_port_high_nibble_write_logic@pin_config,fsr1l
  1882   00F870  C034  FFE2         	movff	gpio_port_high_nibble_write_logic@pin_config+1,fsr1h
  1883   00F874  50E7               	movf	231,w,c
  1884   00F876  0B07               	andlw	7
  1885   00F878  6E3A               	movwf	(??_gpio_port_high_nibble_write_logic+4)^0,c
  1886   00F87A  503A               	movf	(??_gpio_port_high_nibble_write_logic+4)^0,w,c
  1887   00F87C  0D02               	mullw	2
  1888   00F87E  0E01               	movlw	low _lat_registers
  1889   00F880  24F3               	addwf	243,w,c
  1890   00F882  6EE1               	movwf	fsr1l,c
  1891   00F884  0E00               	movlw	high _lat_registers
  1892   00F886  20F4               	addwfc	prodh,w,c
  1893   00F888  6EE2               	movwf	fsr1h,c
  1894   00F88A  CFE6 F03B          	movff	postinc1,??_gpio_port_high_nibble_write_logic+5
  1895   00F88E  CFE5 F03C          	movff	postdec1,??_gpio_port_high_nibble_write_logic+6
  1896   00F892  C03B  FFE1         	movff	??_gpio_port_high_nibble_write_logic+5,fsr1l
  1897   00F896  C03C  FFE2         	movff	??_gpio_port_high_nibble_write_logic+6,fsr1h
  1898   00F89A  50E7               	movf	indf1,w,c
  1899   00F89C  0B0F               	andlw	15
  1900   00F89E  1039               	iorwf	(??_gpio_port_high_nibble_write_logic+3)^0,w,c
  1901   00F8A0  6EDF               	movwf	indf2,c
  1902   00F8A2                     l164:
  1903   00F8A2  0012               	return		;funcret
  1904   00F8A4                     __end_of_gpio_port_high_nibble_write_logic:
  1905                           	callstack 0
  1906   000000                     
  1907                           	psect	rparam
  1908   000000                     
  1909                           	psect	idloc
  1910                           
  1911                           ;Config register IDLOC0 @ 0x200000
  1912                           ;	unspecified, using default values
  1913   200000                     	org	2097152
  1914   200000  FF                 	db	255
  1915                           
  1916                           ;Config register IDLOC1 @ 0x200001
  1917                           ;	unspecified, using default values
  1918   200001                     	org	2097153
  1919   200001  FF                 	db	255
  1920                           
  1921                           ;Config register IDLOC2 @ 0x200002
  1922                           ;	unspecified, using default values
  1923   200002                     	org	2097154
  1924   200002  FF                 	db	255
  1925                           
  1926                           ;Config register IDLOC3 @ 0x200003
  1927                           ;	unspecified, using default values
  1928   200003                     	org	2097155
  1929   200003  FF                 	db	255
  1930                           
  1931                           ;Config register IDLOC4 @ 0x200004
  1932                           ;	unspecified, using default values
  1933   200004                     	org	2097156
  1934   200004  FF                 	db	255
  1935                           
  1936                           ;Config register IDLOC5 @ 0x200005
  1937                           ;	unspecified, using default values
  1938   200005                     	org	2097157
  1939   200005  FF                 	db	255
  1940                           
  1941                           ;Config register IDLOC6 @ 0x200006
  1942                           ;	unspecified, using default values
  1943   200006                     	org	2097158
  1944   200006  FF                 	db	255
  1945                           
  1946                           ;Config register IDLOC7 @ 0x200007
  1947                           ;	unspecified, using default values
  1948   200007                     	org	2097159
  1949   200007  FF                 	db	255
  1950                           
  1951                           	psect	config
  1952                           
  1953                           ; Padding undefined space
  1954   300000                     	org	3145728
  1955   300000  FF                 	db	255
  1956                           
  1957                           ;Config register CONFIG1H @ 0x300001
  1958                           ;	Oscillator Selection bits
  1959                           ;	OSC = HS, HS oscillator
  1960                           ;	Fail-Safe Clock Monitor Enable bit
  1961                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1962                           ;	Internal/External Oscillator Switchover bit
  1963                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1964   300001                     	org	3145729
  1965   300001  02                 	db	2
  1966                           
  1967                           ;Config register CONFIG2L @ 0x300002
  1968                           ;	Power-up Timer Enable bit
  1969                           ;	PWRT = OFF, PWRT disabled
  1970                           ;	Brown-out Reset Enable bits
  1971                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1972                           ;	Brown Out Reset Voltage bits
  1973                           ;	BORV = 1, 
  1974   300002                     	org	3145730
  1975   300002  09                 	db	9
  1976                           
  1977                           ;Config register CONFIG2H @ 0x300003
  1978                           ;	Watchdog Timer Enable bit
  1979                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1980                           ;	Watchdog Timer Postscale Select bits
  1981                           ;	WDTPS = 32768, 1:32768
  1982   300003                     	org	3145731
  1983   300003  1E                 	db	30
  1984                           
  1985                           ; Padding undefined space
  1986   300004                     	org	3145732
  1987   300004  FF                 	db	255
  1988                           
  1989                           ;Config register CONFIG3H @ 0x300005
  1990                           ;	CCP2 MUX bit
  1991                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1992                           ;	PORTB A/D Enable bit
  1993                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1994                           ;	Low-Power Timer1 Oscillator Enable bit
  1995                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1996                           ;	MCLR Pin Enable bit
  1997                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1998   300005                     	org	3145733
  1999   300005  81                 	db	129
  2000                           
  2001                           ;Config register CONFIG4L @ 0x300006
  2002                           ;	Stack Full/Underflow Reset Enable bit
  2003                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2004                           ;	Single-Supply ICSP Enable bit
  2005                           ;	LVP = OFF, Single-Supply ICSP disabled
  2006                           ;	Extended Instruction Set Enable bit
  2007                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2008                           ;	Background Debugger Enable bit
  2009                           ;	DEBUG = 0x1, unprogrammed default
  2010   300006                     	org	3145734
  2011   300006  81                 	db	129
  2012                           
  2013                           ; Padding undefined space
  2014   300007                     	org	3145735
  2015   300007  FF                 	db	255
  2016                           
  2017                           ;Config register CONFIG5L @ 0x300008
  2018                           ;	Code Protection bit
  2019                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2020                           ;	Code Protection bit
  2021                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2022                           ;	Code Protection bit
  2023                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2024                           ;	Code Protection bit
  2025                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2026   300008                     	org	3145736
  2027   300008  0F                 	db	15
  2028                           
  2029                           ;Config register CONFIG5H @ 0x300009
  2030                           ;	Boot Block Code Protection bit
  2031                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2032                           ;	Data EEPROM Code Protection bit
  2033                           ;	CPD = OFF, Data EEPROM not code-protected
  2034   300009                     	org	3145737
  2035   300009  C0                 	db	192
  2036                           
  2037                           ;Config register CONFIG6L @ 0x30000A
  2038                           ;	Write Protection bit
  2039                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2040                           ;	Write Protection bit
  2041                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2042                           ;	Write Protection bit
  2043                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2044                           ;	Write Protection bit
  2045                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2046   30000A                     	org	3145738
  2047   30000A  0F                 	db	15
  2048                           
  2049                           ;Config register CONFIG6H @ 0x30000B
  2050                           ;	Configuration Register Write Protection bit
  2051                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2052                           ;	Boot Block Write Protection bit
  2053                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2054                           ;	Data EEPROM Write Protection bit
  2055                           ;	WRTD = OFF, Data EEPROM not write-protected
  2056   30000B                     	org	3145739
  2057   30000B  E0                 	db	224
  2058                           
  2059                           ;Config register CONFIG7L @ 0x30000C
  2060                           ;	Table Read Protection bit
  2061                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2062                           ;	Table Read Protection bit
  2063                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2064                           ;	Table Read Protection bit
  2065                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2066                           ;	Table Read Protection bit
  2067                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2068   30000C                     	org	3145740
  2069   30000C  0F                 	db	15
  2070                           
  2071                           ;Config register CONFIG7H @ 0x30000D
  2072                           ;	Boot Block Table Read Protection bit
  2073                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2074   30000D                     	org	3145741
  2075   30000D  40                 	db	64
  2076                           tosu	equ	0xFFF
  2077                           tosh	equ	0xFFE
  2078                           tosl	equ	0xFFD
  2079                           stkptr	equ	0xFFC
  2080                           pclatu	equ	0xFFB
  2081                           pclath	equ	0xFFA
  2082                           pcl	equ	0xFF9
  2083                           tblptru	equ	0xFF8
  2084                           tblptrh	equ	0xFF7
  2085                           tblptrl	equ	0xFF6
  2086                           tablat	equ	0xFF5
  2087                           prodh	equ	0xFF4
  2088                           prodl	equ	0xFF3
  2089                           indf0	equ	0xFEF
  2090                           postinc0	equ	0xFEE
  2091                           postdec0	equ	0xFED
  2092                           preinc0	equ	0xFEC
  2093                           plusw0	equ	0xFEB
  2094                           fsr0h	equ	0xFEA
  2095                           fsr0l	equ	0xFE9
  2096                           wreg	equ	0xFE8
  2097                           indf1	equ	0xFE7
  2098                           postinc1	equ	0xFE6
  2099                           postdec1	equ	0xFE5
  2100                           preinc1	equ	0xFE4
  2101                           plusw1	equ	0xFE3
  2102                           fsr1h	equ	0xFE2
  2103                           fsr1l	equ	0xFE1
  2104                           bsr	equ	0xFE0
  2105                           indf2	equ	0xFDF
  2106                           postinc2	equ	0xFDE
  2107                           postdec2	equ	0xFDD
  2108                           preinc2	equ	0xFDC
  2109                           plusw2	equ	0xFDB
  2110                           fsr2h	equ	0xFDA
  2111                           fsr2l	equ	0xFD9
  2112                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        50
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     42      97
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    SVS_print_pov@data	PTR unsigned char  size(2) Largest target is 6
		 -> main@data(COMRAM[6]), 

    SVS_print_pov@Seven_SEG	PTR struct . size(2) Largest target is 14
		 -> seven_seg(COMRAM[14]), 

    SVS_print@Seven_SEG	PTR const struct . size(2) Largest target is 14
		 -> seven_seg(COMRAM[14]), 

    SVS_initialize@Seven_SEG	PTR const struct . size(2) Largest target is 14
		 -> seven_seg(COMRAM[14]), 

    gpio_port_high_nibble_write_logic@pin_config	PTR struct . size(2) Largest target is 1
		 -> SVS_print@temp(COMRAM[1]), 

    gpio_port_high_nibble_direction_initialize@pin_config	PTR struct . size(2) Largest target is 1
		 -> SVS_initialize@temp(COMRAM[1]), 

    gpio_port_low_nibble_write_logic@pin_config	PTR struct . size(2) Largest target is 1
		 -> SVS_print@temp(COMRAM[1]), 

    gpio_port_low_nibble_direction_initialize@pin_config	PTR struct . size(2) Largest target is 1
		 -> SVS_initialize@temp(COMRAM[1]), 

    gpio_pin_write_logic@pin_config	PTR struct . size(2) Largest target is 1
		 -> SVS_print_pov@temp(COMRAM[1]), led_turn_off@temp(COMRAM[1]), led_turn_on@temp(COMRAM[1]), led_intialize@temp(COMRAM[1]), 

    gpio_pin_direction_initialize@pin_config	PTR const struct . size(2) Largest target is 1
		 -> SVS_initialize@temp(COMRAM[1]), led_intialize@temp(COMRAM[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATB(BITBIGSFRlh[1]), 
		 -> LATA(BITBIGSFRll[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), 
		 -> PORTA(BITBIGSFRll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRhl[1]), TRISD(BITBIGSFRhl[1]), TRISC(BITBIGSFRhl[1]), TRISB(BITBIGSFRhl[1]), 
		 -> TRISA(BITBIGSFRll[1]), 


Critical Paths under _main in COMRAM

    _main->_SVS_print_pov
    _appliction_intialize->_SVS_initialize
    _SVS_initialize->_gpio_port_high_nibble_direction_initialize
    _SVS_initialize->_gpio_port_low_nibble_direction_initialize
    _SVS_print_pov->_SVS_print
    _SVS_print->_gpio_port_high_nibble_write_logic
    _SVS_print->_gpio_port_low_nibble_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0    5569
                                             32 COMRAM    10    10      0
                      _SVS_print_pov
               _appliction_intialize
 ---------------------------------------------------------------------------------
 (1) _appliction_intialize                                 0     0      0    1716
                     _SVS_initialize
 ---------------------------------------------------------------------------------
 (2) _SVS_initialize                                      11     9      2    1716
                                             10 COMRAM    10     8      2
      _gpio_pin_direction_initialize
_gpio_port_high_nibble_direction_ini
_gpio_port_low_nibble_direction_init
 ---------------------------------------------------------------------------------
 (3) _gpio_port_low_nibble_direction_initialize           11     8      3     248
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (3) _gpio_port_high_nibble_direction_initialize          11     8      3     248
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_initialize                        9     7      2     831
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (1) _SVS_print_pov                                       18    14      4    3783
                                             15 COMRAM    17    13      4
                          _SVS_print
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                10     7      3    2329
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (2) _SVS_print                                            6     3      3     838
                                             10 COMRAM     5     2      3
  _gpio_port_high_nibble_write_logic
   _gpio_port_low_nibble_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_port_low_nibble_write_logic                    11     8      3     248
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (3) _gpio_port_high_nibble_write_logic                   11     8      3     248
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SVS_print_pov
     _SVS_print
       _gpio_port_high_nibble_write_logic
       _gpio_port_low_nibble_write_logic
     _gpio_pin_write_logic
   _appliction_intialize
     _SVS_initialize
       _gpio_pin_direction_initialize
       _gpio_port_high_nibble_direction_initialize
       _gpio_port_low_nibble_direction_initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      41        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     2A      61       1       76.4%
BITBIGSFRhh         3D      0       0      37        0.0%
BITBIGSFRhl         2A      0       0      38        0.0%
BITBIGSFRlh          4      0       0      39        0.0%
BITBIGSFRll          4      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      61      26        0.0%
DATA                 0      0      61       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Mar 04 11:37:14 2023

                                                  l81 FE54  
                                                  l76 FE52  
                                                  l98 FBDC  
                                      _SVS_initialize FBDE  
                                                 l310 FFFE  
                                                 l154 F926  
                                                 l164 F8A2  
                                                 l149 FA2E  
                                                 l159 F9AA  
                                                 l291 FD0C  
                                                 l195 F746  
                                                 l295 FABE  
                                                 l299 FABE  
                                                 u710 FD24  
                                                 u711 FD20  
                                                 u720 FD46  
                                                 u800 F93A  
                                                 u721 FD42  
                                                 u801 F936  
                                                 u810 F832  
                                                 u730 FD64  
                                                 u811 F82E  
                                                 u731 FD60  
                                                 u900 FA7A  
                                                 u820 FAD6  
                                                 u740 FD82  
                                                 u901 FA76  
                                                 u821 FAD2  
                                                 u741 FD7E  
                                                 u910 FAAA  
                                                 u911 FAA6  
                                                 u920 FE68  
                                                 u760 FDFA  
                                                 u921 FE64  
                                                 u761 FDF6  
                                                 u834 FAFE  
                                                 u930 FF16  
                                                 u754 FDA2  
                                                 u850 FBF0  
                                                 u835 FAFA  
                                                 u931 FF12  
                                                 u755 FD9E  
                                                 u851 FBEC  
                                                 u844 FB64  
                                                 u940 FFEC  
                                                 u780 F9BE  
                                                 u860 FC28  
                                                 u845 FB60  
                                                 u941 FFE8  
                                                 u781 F9BA  
                                                 u861 FC24  
                                                 u790 F8B6  
                                                 u950 FFFE  
                                                 u774 FE1A  
                                                 u870 FC58  
                                                 u791 F8B2  
                                                 u951 FFFA  
                                                 u775 FE16  
                                                 u871 FC54  
                                                 u880 FD0C  
                                                 u881 FD08  
                                                 u890 FA42  
                                                 u891 FA3E  
                                                 _ret 005D  
                                                 prod 000FF3  
                                                 wreg 000FE8  
                                                l1500 FD24  
                                                l1510 FDE4  
                                                l1502 FD46  
                                                l1512 FDFA  
                                                l1504 FD64  
                                                l1520 F9AC  
                                                l1600 FC58  
                                                l1530 F8A4  
                                                l1506 FD6C  
                                                l1522 F9BE  
                                                l1610 FC72  
                                                l1602 FC68  
                                                l1532 F8B6  
                                                l1620 FA30  
                                                l1508 FD82  
                                                l1540 F928  
                                                l1524 F9C2  
                                                l1612 FCE0  
                                                l1604 FC70  
                                                l1550 F820  
                                                l1534 F8BA  
                                                l1630 FA8E  
                                                l1622 FA42  
                                                l1542 F93A  
                                                l1518 F9AC  
                                                l1614 FCEC  
                                                l1552 F832  
                                                l1528 F8A4  
                                                l1632 FAAA  
                                                l1624 FA46  
                                                l1560 FAC4  
                                                l1640 FE56  
                                                l1544 F93E  
                                                l1616 FCF0  
                                                l1554 F836  
                                                l1626 FA5C  
                                                l1618 FA30  
                                                l1570 FBA2  
                                                l1562 FAD6  
                                                l1642 FE56  
                                                l1538 F928  
                                                l1548 F820  
                                                l1628 FA7A  
                                                l1564 FADE  
                                                l1660 FEE6  
                                                l1652 FE70  
                                                l1644 FE68  
                                                l1636 F732  
                                                l1566 FB36  
                                                l1558 FAC0  
                                                l1670 FF90  
                                                l1662 FEF6  
                                                l1646 FE6C  
                                                l1590 FBF0  
                                                l1638 F73A  
                                                l1750 F7B2  
                                                l1568 FB44  
                                                l1576 FBB0  
                                                l1680 FFEC  
                                                l1672 FFAC  
                                                l1664 FEFA  
                                                l1496 FD0E  
                                                l1592 FBF4  
                                                l1760 F7E0  
                                                l1752 F7C4  
                                                l1578 FBDA  
                                                l1682 FFEE  
                                                l1666 FF16  
                                                l1658 FE78  
                                                l1498 FD12  
                                                l1594 FC0A  
                                                l1586 FBDE  
                                                l1762 F7F8  
                                                l1668 FF80  
                                                l1596 FC28  
                                                l1588 FBDE  
                                                l1764 F7FC  
                                                l1748 F7AE  
                                                l1870 FBC4  
                                                l1678 FFBC  
                                                l1598 FC3C  
                                                l1758 F7CC  
                                                u1011 F7BC  
                                                u1020 F818  
                                                u1021 F814  
                                                _LATA 000F89  
                                                _LATB 000F8A  
                                                _LATC 000F8B  
                                                _LATD 000F8C  
                                                u1177 F7EA  
                                                _LATE 000F8D  
                                                _main F7AE  
                                                fsr1h 000FE2  
                                                fsr2h 000FDA  
                                                indf1 000FE7  
                                                indf2 000FDF  
                                                fsr1l 000FE1  
                                                fsr2l 000FD9  
                                                prodh 000FF4  
                                                prodl 000FF3  
                                                start 0000  
                                        ___param_bank 000000  
                                _gpio_pin_write_logic FAC0  
                               __end_of_SVS_print_pov 0000  
                              __end_of_SVS_initialize FD0E  
                                               ?_main 0033  
                                               _PORTA 000F80  
                                               _PORTB 000F81  
                                               _PORTC 000F82  
                                               _PORTD 000F83  
                                               _PORTE 000F84  
                                               _TRISA 000F92  
                                               _TRISB 000F93  
                                               _TRISC 000F94  
                                               _TRISD 000F95  
                                               _TRISE 000F96  
                        __end_of_appliction_intialize F748  
                                               main@i 005B  
                                               tablat 000FF5  
                                               plusw1 000FE3  
                                               plusw2 000FDB  
                                               status 000FD8  
                      ?_gpio_pin_direction_initialize 0033  
                                     __initialization F77A  
                                        __end_of_main F820  
                               ?_gpio_pin_write_logic 0033  
                                     ?_SVS_initialize 003D  
                                       _lat_registers 0001  
                                              ??_main 0053  
                                       __activetblptr 000002  
                                    led_turn_on@F2895 0060  
                                              _ADCON0 000FC2  
                                              _ADCON1 000FC1  
   __end_of_gpio_port_low_nibble_direction_initialize FA30  
         ??_gpio_port_low_nibble_direction_initialize 0036  
          ?_gpio_port_low_nibble_direction_initialize 0033  
           _gpio_port_low_nibble_direction_initialize F9AC  
                                              isa$std 000001  
  __end_of_gpio_port_high_nibble_direction_initialize F9AC  
        ??_gpio_port_high_nibble_direction_initialize 0036  
         ?_gpio_port_high_nibble_direction_initialize 0033  
          _gpio_port_high_nibble_direction_initialize F928  
                                        __pdataCOMRAM 0001  
                                              tblptrh 000FF7  
                                              tblptrl 000FF6  
                                              tblptru 000FF8  
                                          __accesstop 0080  
                             __end_of__initialization F7A4  
                                   __end_of_SVS_print FAC0  
                                       ___rparam_used 000001  
      gpio_port_high_nibble_direction_initialize@data 0035  
       gpio_port_low_nibble_direction_initialize@data 0035  
                              ??_gpio_pin_write_logic 0036  
                                      __pcstackCOMRAM 0033  
                                  SVS_initialize@temp 0046  
                                _appliction_intialize F732  
                                  SVS_print@Seven_SEG 003D  
         gpio_port_high_nibble_write_logic@pin_config 0033  
                               ?_appliction_intialize 0033  
                                   led_turn_off@F2900 005F  
                                     led_toggle@F2905 005E  
                                       SVS_print@data 003F  
                                       SVS_print@temp 0041  
                                      _tris_registers 0015  
                                             __Hparam 0000  
                                    ??_SVS_initialize 003F  
                                             __Lparam 0000  
                                             __pcinit F77A  
                                             __ramtop 1000  
                                             __ptext0 F7AE  
                                             __ptext1 F732  
                                             __ptext2 FBDE  
                                             __ptext3 F9AC  
                                             __ptext4 F928  
                                             __ptext5 FD0E  
                                             __ptext6 FE56  
                                             __ptext7 FAC0  
                                             __ptext8 FA30  
                                             __ptext9 F8A4  
                     ??_gpio_pin_direction_initialize 0035  
                                end_of_initialization F7A4  
                                       __Lmediumconst 0000  
                          SVS_print_pov@svs_counter_2 004F  
                              ??_appliction_intialize 0047  
                                             postdec1 000FE5  
                                             postdec2 000FDD  
                                             postinc0 000FEE  
                                             postinc1 000FE6  
                                             postinc2 000FDE  
          gpio_port_low_nibble_write_logic@pin_config 0033  
                                           _SVS_print FA30  
                                       _SVS_print_pov FE56  
                                       __pidataCOMRAM F748  
                                 start_initialization F77A  
                            SVS_print_pov@svs_counter 0052  
               __end_of_gpio_pin_direction_initialize FE56  
                       _gpio_pin_direction_initialize FD0E  
                             SVS_initialize@Seven_SEG 003D  
                                          ?_SVS_print 003D  
                                      ?_SVS_print_pov 0042  
                           SVS_initialize@svs_counter 0044  
                                         __pbssCOMRAM 005D  
                gpio_port_low_nibble_write_logic@data 0035  
            __end_of_gpio_port_low_nibble_write_logic F928  
                  ??_gpio_port_low_nibble_write_logic 0036  
                   ?_gpio_port_low_nibble_write_logic 0033  
                    _gpio_port_low_nibble_write_logic F8A4  
                      gpio_pin_write_logic@pin_config 0033  
                           gpio_pin_write_logic@logic 0035  
                                      SVS_print_pov@l 004B  
                                         ??_SVS_print 0040  
                                     ??_SVS_print_pov 0046  
                                           _seven_seg 0025  
                                           main@F2986 001F  
                    gpio_pin_direction_initialize@ret 003B  
gpio_port_high_nibble_direction_initialize@pin_config 0033  
 gpio_port_low_nibble_direction_initialize@pin_config 0033  
             gpio_pin_direction_initialize@pin_config 0033  
                             gpio_pin_write_logic@ret 003C  
                                           copy_data0 F78E  
                                            __Hrparam 0000  
                                            __Lrparam 0000  
                                  led_intialize@F2890 0061  
                                            __ptext10 F820  
                                   SVS_print_pov@data 0044  
                                   SVS_print_pov@temp 0051  
                                            isa$xinst 000000  
                                            main@data 0055  
                        __end_of_gpio_pin_write_logic FBDE  
               gpio_port_high_nibble_write_logic@data 0035  
                                      _port_registers 000B  
                              SVS_print_pov@Seven_SEG 0042  
           __end_of_gpio_port_high_nibble_write_logic F8A4  
                 ??_gpio_port_high_nibble_write_logic 0036  
                  ?_gpio_port_high_nibble_write_logic 0033  
                   _gpio_port_high_nibble_write_logic F820  
