

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Mar 11 22:15:23 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    25   000000                     
    26                           ; Version 2.40
    27                           ; Generated 17/11/2021 GMT
    28                           ; 
    29                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F4620 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61   000000                     
    62                           	psect	idataCOMRAM
    63   00F6C2                     __pidataCOMRAM:
    64                           	callstack 0
    65                           
    66                           ;initializer for _lat_registers
    67   00F6C2  89                 	db	137
    68   00F6C3  0F                 	db	15
    69   00F6C4  8A                 	db	138
    70   00F6C5  0F                 	db	15
    71   00F6C6  8B                 	db	139
    72   00F6C7  0F                 	db	15
    73   00F6C8  8C                 	db	140
    74   00F6C9  0F                 	db	15
    75   00F6CA  8D                 	db	141
    76   00F6CB  0F                 	db	15
    77                           
    78                           ;initializer for _port_registers
    79   00F6CC  80                 	db	128
    80   00F6CD  0F                 	db	15
    81   00F6CE  81                 	db	129
    82   00F6CF  0F                 	db	15
    83   00F6D0  82                 	db	130
    84   00F6D1  0F                 	db	15
    85   00F6D2  83                 	db	131
    86   00F6D3  0F                 	db	15
    87   00F6D4  84                 	db	132
    88   00F6D5  0F                 	db	15
    89                           
    90                           ;initializer for _tris_registers
    91   00F6D6  92                 	db	146
    92   00F6D7  0F                 	db	15
    93   00F6D8  93                 	db	147
    94   00F6D9  0F                 	db	15
    95   00F6DA  94                 	db	148
    96   00F6DB  0F                 	db	15
    97   00F6DC  95                 	db	149
    98   00F6DD  0F                 	db	15
    99   00F6DE  96                 	db	150
   100   00F6DF  0F                 	db	15
   101                           
   102                           ;initializer for main@F2986
   103   00F6E0  01                 	db	1
   104   00F6E1  02                 	db	2
   105   00F6E2  03                 	db	3
   106   00F6E3  04                 	db	4
   107   00F6E4  05                 	db	5
   108   00F6E5  06                 	db	6
   109                           
   110                           ;initializer for _seven_seg
   111   00F6E6  03                 	db	3
   112   00F6E7  00                 	db	0
   113   00F6E8  02                 	db	2
   114   00F6E9  06                 	db	6
   115   00F6EA  02                 	db	2
   116   00F6EB  07                 	db	7
   117   00F6EC  03                 	db	3
   118   00F6ED  04                 	db	4
   119   00F6EE  03                 	db	3
   120   00F6EF  05                 	db	5
   121   00F6F0  03                 	db	3
   122   00F6F1  06                 	db	6
   123   00F6F2  03                 	db	3
   124   00F6F3  07                 	db	7
   125   000000                     _LATA	set	3977
   126   000000                     _PORTE	set	3972
   127   000000                     _PORTD	set	3971
   128   000000                     _PORTC	set	3970
   129   000000                     _PORTB	set	3969
   130   000000                     _PORTA	set	3968
   131   000000                     _TRISA	set	3986
   132   000000                     _ADCON1	set	4033
   133   000000                     _ADCON0	set	4034
   134   000000                     _TRISE	set	3990
   135   000000                     _TRISD	set	3989
   136   000000                     _TRISC	set	3988
   137   000000                     _TRISB	set	3987
   138   000000                     _LATE	set	3981
   139   000000                     _LATD	set	3980
   140   000000                     _LATC	set	3979
   141   000000                     _LATB	set	3978
   142                           
   143                           ; #config settings
   144                           
   145                           	psect	cinit
   146   00F6F4                     __pcinit:
   147                           	callstack 0
   148   00F6F4                     start_initialization:
   149                           	callstack 0
   150   00F6F4                     __initialization:
   151                           	callstack 0
   152                           
   153                           ; Initialize objects allocated to COMRAM (50 bytes)
   154                           ; load TBLPTR registers with __pidataCOMRAM
   155   00F6F4  0EC2               	movlw	low __pidataCOMRAM
   156   00F6F6  6EF6               	movwf	tblptrl,c
   157   00F6F8  0EF6               	movlw	high __pidataCOMRAM
   158   00F6FA  6EF7               	movwf	tblptrh,c
   159   00F6FC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   160   00F6FE  6EF8               	movwf	tblptru,c
   161   00F700  EE00  F001         	lfsr	0,__pdataCOMRAM
   162   00F704  EE10 F032          	lfsr	1,50
   163   00F708                     copy_data0:
   164   00F708  0009               	tblrd		*+
   165   00F70A  CFF5 FFEE          	movff	tablat,postinc0
   166   00F70E  50E5               	movf	postdec1,w,c
   167   00F710  50E1               	movf	fsr1l,w,c
   168   00F712  E1FA               	bnz	copy_data0
   169                           
   170                           ; Clear objects allocated to COMRAM (5 bytes)
   171   00F714  6A5E               	clrf	(__pbssCOMRAM+4)& (0+255),c
   172   00F716  6A5D               	clrf	(__pbssCOMRAM+3)& (0+255),c
   173   00F718  6A5C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   174   00F71A  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   175   00F71C  6A5A               	clrf	__pbssCOMRAM& (0+255),c
   176   00F71E                     end_of_initialization:
   177                           	callstack 0
   178   00F71E                     __end_of__initialization:
   179                           	callstack 0
   180   00F71E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   181   00F720  6EF8               	movwf	tblptru,c
   182   00F722  0100               	movlb	0
   183   00F724  EFE4  F07C         	goto	_main	;jump to C main() function
   184                           
   185                           	psect	bssCOMRAM
   186   00005A                     __pbssCOMRAM:
   187                           	callstack 0
   188   00005A                     _ret:
   189                           	callstack 0
   190   00005A                     	ds	1
   191   00005B                     led_toggle@F2905:
   192                           	callstack 0
   193   00005B                     	ds	1
   194   00005C                     led_turn_off@F2900:
   195                           	callstack 0
   196   00005C                     	ds	1
   197   00005D                     led_turn_on@F2895:
   198                           	callstack 0
   199   00005D                     	ds	1
   200   00005E                     led_intialize@F2890:
   201                           	callstack 0
   202   00005E                     	ds	1
   203                           
   204                           	psect	dataCOMRAM
   205   000001                     __pdataCOMRAM:
   206                           	callstack 0
   207   000001                     _lat_registers:
   208                           	callstack 0
   209   000001                     	ds	10
   210   00000B                     _port_registers:
   211                           	callstack 0
   212   00000B                     	ds	10
   213   000015                     _tris_registers:
   214                           	callstack 0
   215   000015                     	ds	10
   216   00001F                     main@F2986:
   217                           	callstack 0
   218   00001F                     	ds	6
   219   000025                     _seven_seg:
   220                           	callstack 0
   221   000025                     	ds	14
   222                           
   223                           	psect	cstackCOMRAM
   224   000033                     __pcstackCOMRAM:
   225                           	callstack 0
   226   000033                     gpio_pin_direction_initialize@pin_config:
   227                           	callstack 0
   228   000033                     gpio_pin_write_logic@pin_config:
   229                           	callstack 0
   230   000033                     gpio_port_low_nibble_direction_initialize@pin_config:
   231                           	callstack 0
   232   000033                     gpio_port_low_nibble_write_logic@pin_config:
   233                           	callstack 0
   234   000033                     gpio_port_high_nibble_direction_initialize@pin_config:
   235                           	callstack 0
   236   000033                     gpio_port_high_nibble_write_logic@pin_config:
   237                           	callstack 0
   238                           
   239                           ; 2 bytes @ 0x0
   240   000033                     	ds	2
   241   000035                     ??_gpio_pin_direction_initialize:
   242   000035                     gpio_pin_write_logic@logic:
   243                           	callstack 0
   244   000035                     gpio_port_low_nibble_direction_initialize@data:
   245                           	callstack 0
   246   000035                     gpio_port_low_nibble_write_logic@data:
   247                           	callstack 0
   248   000035                     gpio_port_high_nibble_direction_initialize@data:
   249                           	callstack 0
   250   000035                     gpio_port_high_nibble_write_logic@data:
   251                           	callstack 0
   252                           
   253                           ; 1 bytes @ 0x2
   254   000035                     	ds	1
   255   000036                     ??_gpio_port_low_nibble_direction_initialize:
   256   000036                     ??_gpio_port_high_nibble_direction_initialize:
   257   000036                     ??_gpio_port_low_nibble_write_logic:
   258   000036                     ??_gpio_port_high_nibble_write_logic:
   259   000036                     ??_gpio_pin_write_logic:
   260                           
   261                           ; 1 bytes @ 0x3
   262   000036                     	ds	5
   263   00003B                     gpio_pin_direction_initialize@ret:
   264                           	callstack 0
   265                           
   266                           ; 1 bytes @ 0x8
   267   00003B                     	ds	1
   268   00003C                     gpio_pin_write_logic@ret:
   269                           	callstack 0
   270                           
   271                           ; 1 bytes @ 0x9
   272   00003C                     	ds	1
   273   00003D                     SVS_initialize@Seven_SEG:
   274                           	callstack 0
   275   00003D                     SVS_print@Seven_SEG:
   276                           	callstack 0
   277                           
   278                           ; 2 bytes @ 0xA
   279   00003D                     	ds	2
   280   00003F                     ??_SVS_initialize:
   281   00003F                     SVS_print@data:
   282                           	callstack 0
   283                           
   284                           ; 1 bytes @ 0xC
   285   00003F                     	ds	1
   286   000040                     ??_SVS_print:
   287                           
   288                           ; 1 bytes @ 0xD
   289   000040                     	ds	1
   290   000041                     SVS_print@temp:
   291                           	callstack 0
   292                           
   293                           ; 1 bytes @ 0xE
   294   000041                     	ds	1
   295   000042                     SVS_print_pov@Seven_SEG:
   296                           	callstack 0
   297                           
   298                           ; 2 bytes @ 0xF
   299   000042                     	ds	2
   300   000044                     SVS_initialize@svs_counter:
   301                           	callstack 0
   302   000044                     SVS_print_pov@data:
   303                           	callstack 0
   304                           
   305                           ; 2 bytes @ 0x11
   306   000044                     	ds	2
   307   000046                     ??_SVS_print_pov:
   308   000046                     SVS_initialize@temp:
   309                           	callstack 0
   310                           
   311                           ; 1 bytes @ 0x13
   312   000046                     	ds	1
   313   000047                     
   314                           ; 1 bytes @ 0x14
   315   000047                     	ds	4
   316   00004B                     SVS_print_pov@l:
   317                           	callstack 0
   318                           
   319                           ; 4 bytes @ 0x18
   320   00004B                     	ds	4
   321   00004F                     SVS_print_pov@svs_counter_2:
   322                           	callstack 0
   323                           
   324                           ; 1 bytes @ 0x1C
   325   00004F                     	ds	1
   326   000050                     SVS_print_pov@temp:
   327                           	callstack 0
   328                           
   329                           ; 1 bytes @ 0x1D
   330   000050                     	ds	1
   331   000051                     SVS_print_pov@svs_counter:
   332                           	callstack 0
   333                           
   334                           ; 1 bytes @ 0x1E
   335   000051                     	ds	1
   336   000052                     ??_main:
   337                           
   338                           ; 1 bytes @ 0x1F
   339   000052                     	ds	1
   340   000053                     main@data:
   341                           	callstack 0
   342                           
   343                           ; 6 bytes @ 0x20
   344   000053                     	ds	6
   345   000059                     main@counter:
   346                           	callstack 0
   347                           
   348                           ; 1 bytes @ 0x26
   349   000059                     	ds	1
   350                           
   351 ;;
   352 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   353 ;;
   354 ;; *************** function _main *****************
   355 ;; Defined at:
   356 ;;		line 80 in file "main.c"
   357 ;; Parameters:    Size  Location     Type
   358 ;;		None
   359 ;; Auto vars:     Size  Location     Type
   360 ;;  counter         1   38[COMRAM] unsigned char 
   361 ;;  data            6   32[COMRAM] unsigned char [6]
   362 ;; Return value:  Size  Location     Type
   363 ;;                  2  300[None  ] int 
   364 ;; Registers used:
   365 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   366 ;; Tracked objects:
   367 ;;		On entry : 0/0
   368 ;;		On exit  : 0/0
   369 ;;		Unchanged: 0/0
   370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   372 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   373 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   374 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   375 ;;Total ram usage:        8 bytes
   376 ;; Hardware stack levels required when called: 3
   377 ;; This function calls:
   378 ;;		_SVS_print_pov
   379 ;;		_appliction_intialize
   380 ;; This function is called by:
   381 ;;		Startup code after reset
   382 ;; This function uses a non-reentrant model
   383 ;;
   384                           
   385                           	psect	text0
   386   00F9C8                     __ptext0:
   387                           	callstack 0
   388   00F9C8                     _main:
   389                           	callstack 28
   390   00F9C8                     
   391                           ;main.c: 82:     appliction_intialize();
   392   00F9C8  EC56  F07B         	call	_appliction_intialize	;wreg free
   393   00F9CC                     
   394                           ;main.c: 83:     uint8 data[6 ]= {1,2,3,4,5,6};
   395   00F9CC  EE20  F01F         	lfsr	2,main@F2986
   396   00F9D0  EE10  F053         	lfsr	1,main@data
   397   00F9D4  0E05               	movlw	5
   398   00F9D6                     u1181:
   399   00F9D6  CFDB FFE3          	movff	plusw2,plusw1
   400   00F9DA  06E8               	decf	wreg,f,c
   401   00F9DC  E2FC               	bc	u1181
   402   00F9DE                     l1874:
   403                           
   404                           ;main.c: 102:             for(uint8 counter = 0; counter<6 ; counter++){
   405   00F9DE  0E00               	movlw	0
   406   00F9E0  6E59               	movwf	main@counter^0,c
   407   00F9E2                     l1880:
   408                           
   409                           ;main.c: 103:                 data[counter]++;
   410   00F9E2  0E53               	movlw	low main@data
   411   00F9E4  2459               	addwf	main@counter^0,w,c
   412   00F9E6  6ED9               	movwf	fsr2l,c
   413   00F9E8  6ADA               	clrf	fsr2h,c
   414   00F9EA  0E00               	movlw	high main@data
   415   00F9EC  22DA               	addwfc	fsr2h,f,c
   416   00F9EE  2ADF               	incf	indf2,f,c
   417                           
   418                           ;main.c: 104:                 if(data[counter]>9){
   419   00F9F0  0E53               	movlw	low main@data
   420   00F9F2  2459               	addwf	main@counter^0,w,c
   421   00F9F4  6ED9               	movwf	fsr2l,c
   422   00F9F6  6ADA               	clrf	fsr2h,c
   423   00F9F8  0E00               	movlw	high main@data
   424   00F9FA  22DA               	addwfc	fsr2h,f,c
   425   00F9FC  0E09               	movlw	9
   426   00F9FE  64DF               	cpfsgt	indf2,c
   427   00FA00  EF04  F07D         	goto	u1191
   428   00FA04  EF06  F07D         	goto	u1190
   429   00FA08                     u1191:
   430   00FA08  EF0E  F07D         	goto	l1884
   431   00FA0C                     u1190:
   432   00FA0C                     
   433                           ;main.c: 105:                     data[counter]=0;
   434   00FA0C  0E53               	movlw	low main@data
   435   00FA0E  2459               	addwf	main@counter^0,w,c
   436   00FA10  6ED9               	movwf	fsr2l,c
   437   00FA12  6ADA               	clrf	fsr2h,c
   438   00FA14  0E00               	movlw	high main@data
   439   00FA16  22DA               	addwfc	fsr2h,f,c
   440   00FA18  0E00               	movlw	0
   441   00FA1A  6EDF               	movwf	indf2,c
   442   00FA1C                     l1884:
   443                           
   444                           ;main.c: 107:                 SVS_print_pov(&seven_seg, data);
   445   00FA1C  0E25               	movlw	low _seven_seg
   446   00FA1E  6E42               	movwf	SVS_print_pov@Seven_SEG^0,c
   447   00FA20  0E00               	movlw	high _seven_seg
   448   00FA22  6E43               	movwf	(SVS_print_pov@Seven_SEG+1)^0,c
   449   00FA24  0E53               	movlw	low main@data
   450   00FA26  6E44               	movwf	SVS_print_pov@data^0,c
   451   00FA28  0E00               	movlw	high main@data
   452   00FA2A  6E45               	movwf	(SVS_print_pov@data+1)^0,c
   453   00FA2C  ECF8  F07E         	call	_SVS_print_pov	;wreg free
   454   00FA30                     
   455                           ;main.c: 108:                 _delay((unsigned long)((30)*(16000000ul/4000.0)));
   456   00FA30  0E9C               	movlw	156
   457   00FA32  6E52               	movwf	??_main^0,c
   458   00FA34  0ED7               	movlw	215
   459   00FA36                     u1217:
   460   00FA36  2EE8               	decfsz	wreg,f,c
   461   00FA38  D7FE               	bra	u1217
   462   00FA3A  2E52               	decfsz	??_main^0,f,c
   463   00FA3C  D7FC               	bra	u1217
   464   00FA3E  F000               	nop	
   465   00FA40                     
   466                           ;main.c: 109:             }
   467   00FA40  2A59               	incf	main@counter^0,f,c
   468   00FA42  0E05               	movlw	5
   469   00FA44  6459               	cpfsgt	main@counter^0,c
   470   00FA46  EF27  F07D         	goto	u1201
   471   00FA4A  EF29  F07D         	goto	u1200
   472   00FA4E                     u1201:
   473   00FA4E  EFF1  F07C         	goto	l1880
   474   00FA52                     u1200:
   475   00FA52  EFEF  F07C         	goto	l1874
   476   00FA56  EF00  F000         	goto	start
   477   00FA5A                     __end_of_main:
   478                           	callstack 0
   479                           
   480 ;; *************** function _appliction_intialize *****************
   481 ;; Defined at:
   482 ;;		line 118 in file "main.c"
   483 ;; Parameters:    Size  Location     Type
   484 ;;		None
   485 ;; Auto vars:     Size  Location     Type
   486 ;;		None
   487 ;; Return value:  Size  Location     Type
   488 ;;                  1    wreg      void 
   489 ;; Registers used:
   490 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   491 ;; Tracked objects:
   492 ;;		On entry : 0/0
   493 ;;		On exit  : 0/0
   494 ;;		Unchanged: 0/0
   495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   500 ;;Total ram usage:        0 bytes
   501 ;; Hardware stack levels used: 1
   502 ;; Hardware stack levels required when called: 2
   503 ;; This function calls:
   504 ;;		_SVS_initialize
   505 ;; This function is called by:
   506 ;;		_main
   507 ;; This function uses a non-reentrant model
   508 ;;
   509                           
   510                           	psect	text1
   511   00F6AC                     __ptext1:
   512                           	callstack 0
   513   00F6AC                     _appliction_intialize:
   514                           	callstack 28
   515   00F6AC                     
   516                           ;main.c: 119:     ADCON0 = 0x00;
   517   00F6AC  0E00               	movlw	0
   518   00F6AE  6EC2               	movwf	194,c	;volatile
   519                           
   520                           ;main.c: 120:     ADCON1 = 0x0F;
   521   00F6B0  0E0F               	movlw	15
   522   00F6B2  6EC1               	movwf	193,c	;volatile
   523   00F6B4                     
   524                           ;main.c: 130:     SVS_initialize(&seven_seg);
   525   00F6B4  0E25               	movlw	low _seven_seg
   526   00F6B6  6E3D               	movwf	SVS_initialize@Seven_SEG^0,c
   527   00F6B8  0E00               	movlw	high _seven_seg
   528   00F6BA  6E3E               	movwf	(SVS_initialize@Seven_SEG+1)^0,c
   529   00F6BC  ECBC  F07D         	call	_SVS_initialize	;wreg free
   530   00F6C0  0012               	return		;funcret
   531   00F6C2                     __end_of_appliction_intialize:
   532                           	callstack 0
   533                           
   534 ;; *************** function _SVS_initialize *****************
   535 ;; Defined at:
   536 ;;		line 38 in file "ECU_layer/7_SEGMENTS/7_SEGMENTS.c"
   537 ;; Parameters:    Size  Location     Type
   538 ;;  Seven_SEG       2   10[COMRAM] PTR const struct .
   539 ;;		 -> seven_seg(14), 
   540 ;; Auto vars:     Size  Location     Type
   541 ;;  svs_counter     2   17[COMRAM] int 
   542 ;;  temp            1   19[COMRAM] struct .
   543 ;;  ret             1    0        unsigned char 
   544 ;; Return value:  Size  Location     Type
   545 ;;                  1    wreg      unsigned char 
   546 ;; Registers used:
   547 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   548 ;; Tracked objects:
   549 ;;		On entry : 0/0
   550 ;;		On exit  : 0/0
   551 ;;		Unchanged: 0/0
   552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   553 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   554 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   555 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   556 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   557 ;;Total ram usage:       10 bytes
   558 ;; Hardware stack levels used: 1
   559 ;; Hardware stack levels required when called: 1
   560 ;; This function calls:
   561 ;;		_gpio_pin_direction_initialize
   562 ;;		_gpio_port_high_nibble_direction_initialize
   563 ;;		_gpio_port_low_nibble_direction_initialize
   564 ;; This function is called by:
   565 ;;		_appliction_intialize
   566 ;; This function uses a non-reentrant model
   567 ;;
   568                           
   569                           	psect	text2
   570   00FB78                     __ptext2:
   571                           	callstack 0
   572   00FB78                     _SVS_initialize:
   573                           	callstack 28
   574   00FB78                     
   575                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 41:     if(Seven_SEG == ((void*)0)){
   576   00FB78  503D               	movf	SVS_initialize@Seven_SEG^0,w,c
   577   00FB7A  103E               	iorwf	(SVS_initialize@Seven_SEG+1)^0,w,c
   578   00FB7C  A4D8               	btfss	status,2,c
   579   00FB7E  EFC3  F07D         	goto	u841
   580   00FB82  EFC5  F07D         	goto	u840
   581   00FB86                     u841:
   582   00FB86  EFC7  F07D         	goto	l1578
   583   00FB8A                     u840:
   584   00FB8A                     
   585                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 43:     }
   586   00FB8A  EF53  F07E         	goto	l22
   587   00FB8E                     l1578:
   588                           
   589                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 45:         pin_config_t temp;;ECU_layer/7_SEGMENTS/
      +                          7_SEGMENTS.c: 46:         temp.port = Seven_SEG->SVS_port;
   590   00FB8E  C03D  FFD9         	movff	SVS_initialize@Seven_SEG,fsr2l
   591   00FB92  C03E  FFDA         	movff	SVS_initialize@Seven_SEG+1,fsr2h
   592   00FB96  50DF               	movf	indf2,w,c
   593   00FB98  6E3F               	movwf	??_SVS_initialize^0,c
   594   00FB9A  5046               	movf	SVS_initialize@temp^0,w,c
   595   00FB9C  183F               	xorwf	??_SVS_initialize^0,w,c
   596   00FB9E  0BF8               	andlw	-8
   597   00FBA0  183F               	xorwf	??_SVS_initialize^0,w,c
   598   00FBA2  6E46               	movwf	SVS_initialize@temp^0,c
   599   00FBA4                     
   600                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 47:         temp.direction= GPIO_DIRECTION_OUTPUT;
   601   00FBA4  9C46               	bcf	SVS_initialize@temp^0,6,c
   602                           
   603                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 49:         if(Seven_SEG->SVS_nibble_state == SVS_LO
      +                          W_NIBBLE){
   604   00FBA6  EE20 F001          	lfsr	2,1
   605   00FBAA  503D               	movf	SVS_initialize@Seven_SEG^0,w,c
   606   00FBAC  26D9               	addwf	fsr2l,f,c
   607   00FBAE  503E               	movf	(SVS_initialize@Seven_SEG+1)^0,w,c
   608   00FBB0  22DA               	addwfc	fsr2h,f,c
   609   00FBB2  50DF               	movf	indf2,w,c
   610   00FBB4  A4D8               	btfss	status,2,c
   611   00FBB6  EFDF  F07D         	goto	u851
   612   00FBBA  EFE1  F07D         	goto	u850
   613   00FBBE                     u851:
   614   00FBBE  EFEB  F07D         	goto	l1584
   615   00FBC2                     u850:
   616   00FBC2                     
   617                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 50:             gpio_port_low_nibble_direction_initi
      +                          alize(&temp, 0xF0);
   618   00FBC2  0E46               	movlw	low SVS_initialize@temp
   619   00FBC4  6E33               	movwf	gpio_port_low_nibble_direction_initialize@pin_config^0,c
   620   00FBC6  0E00               	movlw	high SVS_initialize@temp
   621   00FBC8  6E34               	movwf	(gpio_port_low_nibble_direction_initialize@pin_config+1)^0,c
   622   00FBCA  0EF0               	movlw	240
   623   00FBCC  6E35               	movwf	gpio_port_low_nibble_direction_initialize@data^0,c
   624   00FBCE  EC5A  F07C         	call	_gpio_port_low_nibble_direction_initialize	;wreg free
   625                           
   626                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 51:         }else if(Seven_SEG->SVS_nibble_state == 
      +                          SVS_HIGH_NIBBLE){
   627   00FBD2  EF01  F07E         	goto	l1588
   628   00FBD6                     l1584:
   629   00FBD6  EE20 F001          	lfsr	2,1
   630   00FBDA  503D               	movf	SVS_initialize@Seven_SEG^0,w,c
   631   00FBDC  26D9               	addwf	fsr2l,f,c
   632   00FBDE  503E               	movf	(SVS_initialize@Seven_SEG+1)^0,w,c
   633   00FBE0  22DA               	addwfc	fsr2h,f,c
   634   00FBE2  04DE               	decf	postinc2,w,c
   635   00FBE4  A4D8               	btfss	status,2,c
   636   00FBE6  EFF7  F07D         	goto	u861
   637   00FBEA  EFF9  F07D         	goto	u860
   638   00FBEE                     u861:
   639   00FBEE  EF01  F07E         	goto	l1588
   640   00FBF2                     u860:
   641   00FBF2                     
   642                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 52:             gpio_port_high_nibble_direction_init
      +                          ialize(&temp, 0x0F);
   643   00FBF2  0E46               	movlw	low SVS_initialize@temp
   644   00FBF4  6E33               	movwf	gpio_port_high_nibble_direction_initialize@pin_config^0,c
   645   00FBF6  0E00               	movlw	high SVS_initialize@temp
   646   00FBF8  6E34               	movwf	(gpio_port_high_nibble_direction_initialize@pin_config+1)^0,c
   647   00FBFA  0E0F               	movlw	15
   648   00FBFC  6E35               	movwf	gpio_port_high_nibble_direction_initialize@data^0,c
   649   00FBFE  EC18  F07C         	call	_gpio_port_high_nibble_direction_initialize	;wreg free
   650   00FC02                     l1588:
   651                           
   652                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 56:         int svs_counter = 0;
   653   00FC02  0E00               	movlw	0
   654   00FC04  6E45               	movwf	(SVS_initialize@svs_counter+1)^0,c
   655   00FC06  0E00               	movlw	0
   656   00FC08  6E44               	movwf	SVS_initialize@svs_counter^0,c
   657   00FC0A                     
   658                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 58:         temp.direction = GPIO_DIRECTION_OUTPUT;
   659   00FC0A  9C46               	bcf	SVS_initialize@temp^0,6,c
   660   00FC0C                     l1596:
   661                           
   662                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 60:                 temp.port = Seven_SEG->SVS_EN_PI
      +                          NS[svs_counter].SVS_en_port;
   663   00FC0C  C044  F03F         	movff	SVS_initialize@svs_counter,??_SVS_initialize
   664   00FC10  C045  F040         	movff	SVS_initialize@svs_counter+1,??_SVS_initialize+1
   665   00FC14  90D8               	bcf	status,0,c
   666   00FC16  363F               	rlcf	??_SVS_initialize^0,f,c
   667   00FC18  3640               	rlcf	(??_SVS_initialize+1)^0,f,c
   668   00FC1A  503F               	movf	??_SVS_initialize^0,w,c
   669   00FC1C  243D               	addwf	SVS_initialize@Seven_SEG^0,w,c
   670   00FC1E  6E41               	movwf	(??_SVS_initialize+2)^0,c
   671   00FC20  5040               	movf	(??_SVS_initialize+1)^0,w,c
   672   00FC22  203E               	addwfc	(SVS_initialize@Seven_SEG+1)^0,w,c
   673   00FC24  6E42               	movwf	(??_SVS_initialize+3)^0,c
   674   00FC26  0E02               	movlw	2
   675   00FC28  2441               	addwf	(??_SVS_initialize+2)^0,w,c
   676   00FC2A  6ED9               	movwf	fsr2l,c
   677   00FC2C  0E00               	movlw	0
   678   00FC2E  2042               	addwfc	(??_SVS_initialize+3)^0,w,c
   679   00FC30  6EDA               	movwf	fsr2h,c
   680   00FC32  50DF               	movf	indf2,w,c
   681   00FC34  6E43               	movwf	(??_SVS_initialize+4)^0,c
   682   00FC36  5046               	movf	SVS_initialize@temp^0,w,c
   683   00FC38  1843               	xorwf	(??_SVS_initialize+4)^0,w,c
   684   00FC3A  0BF8               	andlw	-8
   685   00FC3C  1843               	xorwf	(??_SVS_initialize+4)^0,w,c
   686   00FC3E  6E46               	movwf	SVS_initialize@temp^0,c
   687                           
   688                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 61:                 temp.pin = Seven_SEG->SVS_EN_PIN
      +                          S[svs_counter].SVS_en_pin;
   689   00FC40  C044  F03F         	movff	SVS_initialize@svs_counter,??_SVS_initialize
   690   00FC44  C045  F040         	movff	SVS_initialize@svs_counter+1,??_SVS_initialize+1
   691   00FC48  90D8               	bcf	status,0,c
   692   00FC4A  363F               	rlcf	??_SVS_initialize^0,f,c
   693   00FC4C  3640               	rlcf	(??_SVS_initialize+1)^0,f,c
   694   00FC4E  503F               	movf	??_SVS_initialize^0,w,c
   695   00FC50  243D               	addwf	SVS_initialize@Seven_SEG^0,w,c
   696   00FC52  6E41               	movwf	(??_SVS_initialize+2)^0,c
   697   00FC54  5040               	movf	(??_SVS_initialize+1)^0,w,c
   698   00FC56  203E               	addwfc	(SVS_initialize@Seven_SEG+1)^0,w,c
   699   00FC58  6E42               	movwf	(??_SVS_initialize+3)^0,c
   700   00FC5A  0E03               	movlw	3
   701   00FC5C  2441               	addwf	(??_SVS_initialize+2)^0,w,c
   702   00FC5E  6ED9               	movwf	fsr2l,c
   703   00FC60  0E00               	movlw	0
   704   00FC62  2042               	addwfc	(??_SVS_initialize+3)^0,w,c
   705   00FC64  6EDA               	movwf	fsr2h,c
   706   00FC66  50DF               	movf	indf2,w,c
   707   00FC68  6E43               	movwf	(??_SVS_initialize+4)^0,c
   708   00FC6A  4643               	rlncf	(??_SVS_initialize+4)^0,f,c
   709   00FC6C  4643               	rlncf	(??_SVS_initialize+4)^0,f,c
   710   00FC6E  4643               	rlncf	(??_SVS_initialize+4)^0,f,c
   711   00FC70  5046               	movf	SVS_initialize@temp^0,w,c
   712   00FC72  1843               	xorwf	(??_SVS_initialize+4)^0,w,c
   713   00FC74  0BC7               	andlw	-57
   714   00FC76  1843               	xorwf	(??_SVS_initialize+4)^0,w,c
   715   00FC78  6E46               	movwf	SVS_initialize@temp^0,c
   716   00FC7A                     
   717                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 62:                 gpio_pin_direction_initialize(&t
      +                          emp);
   718   00FC7A  0E46               	movlw	low SVS_initialize@temp
   719   00FC7C  6E33               	movwf	gpio_pin_direction_initialize@pin_config^0,c
   720   00FC7E  0E00               	movlw	high SVS_initialize@temp
   721   00FC80  6E34               	movwf	(gpio_pin_direction_initialize@pin_config+1)^0,c
   722   00FC82  EC54  F07E         	call	_gpio_pin_direction_initialize	;wreg free
   723   00FC86                     
   724                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 64:         }
   725   00FC86  4A44               	infsnz	SVS_initialize@svs_counter^0,f,c
   726   00FC88  2A45               	incf	(SVS_initialize@svs_counter+1)^0,f,c
   727   00FC8A  BE45               	btfsc	(SVS_initialize@svs_counter+1)^0,7,c
   728   00FC8C  EF51  F07E         	goto	u871
   729   00FC90  5045               	movf	(SVS_initialize@svs_counter+1)^0,w,c
   730   00FC92  E109               	bnz	u870
   731   00FC94  0E06               	movlw	6
   732   00FC96  5C44               	subwf	SVS_initialize@svs_counter^0,w,c
   733   00FC98  A0D8               	btfss	status,0,c
   734   00FC9A  EF51  F07E         	goto	u871
   735   00FC9E  EF53  F07E         	goto	u870
   736   00FCA2                     u871:
   737   00FCA2  EF06  F07E         	goto	l1596
   738   00FCA6                     u870:
   739   00FCA6                     l22:
   740   00FCA6  0012               	return		;funcret
   741   00FCA8                     __end_of_SVS_initialize:
   742                           	callstack 0
   743                           
   744 ;; *************** function _gpio_port_low_nibble_direction_initialize *****************
   745 ;; Defined at:
   746 ;;		line 299 in file "MCAL_layer/GPIO/GPIO.c"
   747 ;; Parameters:    Size  Location     Type
   748 ;;  pin_config      2    0[COMRAM] PTR struct .
   749 ;;		 -> SVS_initialize@temp(1), 
   750 ;;  data            1    2[COMRAM] unsigned char 
   751 ;; Auto vars:     Size  Location     Type
   752 ;;  ret             1    0        unsigned char 
   753 ;; Return value:  Size  Location     Type
   754 ;;                  1    wreg      unsigned char 
   755 ;; Registers used:
   756 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   757 ;; Tracked objects:
   758 ;;		On entry : 0/0
   759 ;;		On exit  : 0/0
   760 ;;		Unchanged: 0/0
   761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   762 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   764 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   765 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   766 ;;Total ram usage:       10 bytes
   767 ;; Hardware stack levels used: 1
   768 ;; This function calls:
   769 ;;		Nothing
   770 ;; This function is called by:
   771 ;;		_SVS_initialize
   772 ;; This function uses a non-reentrant model
   773 ;;
   774                           
   775                           	psect	text3
   776   00F8B4                     __ptext3:
   777                           	callstack 0
   778   00F8B4                     _gpio_port_low_nibble_direction_initialize:
   779                           	callstack 28
   780   00F8B4                     
   781                           ;MCAL_layer/GPIO/GPIO.c: 301:     if(pin_config == ((void*)0)){
   782   00F8B4  5033               	movf	gpio_port_low_nibble_direction_initialize@pin_config^0,w,c
   783   00F8B6  1034               	iorwf	(gpio_port_low_nibble_direction_initialize@pin_config+1)^0,w,c
   784   00F8B8  A4D8               	btfss	status,2,c
   785   00F8BA  EF61  F07C         	goto	u731
   786   00F8BE  EF63  F07C         	goto	u730
   787   00F8C2                     u731:
   788   00F8C2  EF65  F07C         	goto	l1516
   789   00F8C6                     u730:
   790   00F8C6                     
   791                           ;MCAL_layer/GPIO/GPIO.c: 303:     }
   792   00F8C6  EF9B  F07C         	goto	l265
   793   00F8CA                     l1516:
   794                           
   795                           ;MCAL_layer/GPIO/GPIO.c: 305:         ((*((volatile uint8 *)(tris_registers[pin_config->
      +                          port]))) = (((*((volatile uint8 *)(tris_registers[pin_config->port])))&0xF0)|(data&0x0F)
      +                          ));
   796   00F8CA  C033  FFD9         	movff	gpio_port_low_nibble_direction_initialize@pin_config,fsr2l
   797   00F8CE  C034  FFDA         	movff	gpio_port_low_nibble_direction_initialize@pin_config+1,fsr2h
   798   00F8D2  50DF               	movf	223,w,c
   799   00F8D4  0B07               	andlw	7
   800   00F8D6  6E36               	movwf	??_gpio_port_low_nibble_direction_initialize^0,c
   801   00F8D8  5036               	movf	??_gpio_port_low_nibble_direction_initialize^0,w,c
   802   00F8DA  0D02               	mullw	2
   803   00F8DC  0E15               	movlw	low _tris_registers
   804   00F8DE  24F3               	addwf	243,w,c
   805   00F8E0  6ED9               	movwf	fsr2l,c
   806   00F8E2  0E00               	movlw	high _tris_registers
   807   00F8E4  20F4               	addwfc	prodh,w,c
   808   00F8E6  6EDA               	movwf	fsr2h,c
   809   00F8E8  CFDE F037          	movff	postinc2,??_gpio_port_low_nibble_direction_initialize+1
   810   00F8EC  CFDD F038          	movff	postdec2,??_gpio_port_low_nibble_direction_initialize+2
   811   00F8F0  C037  FFD9         	movff	??_gpio_port_low_nibble_direction_initialize+1,fsr2l
   812   00F8F4  C038  FFDA         	movff	??_gpio_port_low_nibble_direction_initialize+2,fsr2h
   813   00F8F8  C035  F039         	movff	gpio_port_low_nibble_direction_initialize@data,??_gpio_port_low_nibble_direction_
      +                          initialize+3
   814   00F8FC  0E0F               	movlw	15
   815   00F8FE  1639               	andwf	(??_gpio_port_low_nibble_direction_initialize+3)^0,f,c
   816   00F900  C033  FFE1         	movff	gpio_port_low_nibble_direction_initialize@pin_config,fsr1l
   817   00F904  C034  FFE2         	movff	gpio_port_low_nibble_direction_initialize@pin_config+1,fsr1h
   818   00F908  50E7               	movf	231,w,c
   819   00F90A  0B07               	andlw	7
   820   00F90C  6E3A               	movwf	(??_gpio_port_low_nibble_direction_initialize+4)^0,c
   821   00F90E  503A               	movf	(??_gpio_port_low_nibble_direction_initialize+4)^0,w,c
   822   00F910  0D02               	mullw	2
   823   00F912  0E15               	movlw	low _tris_registers
   824   00F914  24F3               	addwf	243,w,c
   825   00F916  6EE1               	movwf	fsr1l,c
   826   00F918  0E00               	movlw	high _tris_registers
   827   00F91A  20F4               	addwfc	prodh,w,c
   828   00F91C  6EE2               	movwf	fsr1h,c
   829   00F91E  CFE6 F03B          	movff	postinc1,??_gpio_port_low_nibble_direction_initialize+5
   830   00F922  CFE5 F03C          	movff	postdec1,??_gpio_port_low_nibble_direction_initialize+6
   831   00F926  C03B  FFE1         	movff	??_gpio_port_low_nibble_direction_initialize+5,fsr1l
   832   00F92A  C03C  FFE2         	movff	??_gpio_port_low_nibble_direction_initialize+6,fsr1h
   833   00F92E  50E7               	movf	indf1,w,c
   834   00F930  0BF0               	andlw	240
   835   00F932  1039               	iorwf	(??_gpio_port_low_nibble_direction_initialize+3)^0,w,c
   836   00F934  6EDF               	movwf	indf2,c
   837   00F936                     l265:
   838   00F936  0012               	return		;funcret
   839   00F938                     __end_of_gpio_port_low_nibble_direction_initialize:
   840                           	callstack 0
   841                           
   842 ;; *************** function _gpio_port_high_nibble_direction_initialize *****************
   843 ;; Defined at:
   844 ;;		line 320 in file "MCAL_layer/GPIO/GPIO.c"
   845 ;; Parameters:    Size  Location     Type
   846 ;;  pin_config      2    0[COMRAM] PTR struct .
   847 ;;		 -> SVS_initialize@temp(1), 
   848 ;;  data            1    2[COMRAM] unsigned char 
   849 ;; Auto vars:     Size  Location     Type
   850 ;;  ret             1    0        unsigned char 
   851 ;; Return value:  Size  Location     Type
   852 ;;                  1    wreg      unsigned char 
   853 ;; Registers used:
   854 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   855 ;; Tracked objects:
   856 ;;		On entry : 0/0
   857 ;;		On exit  : 0/0
   858 ;;		Unchanged: 0/0
   859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   860 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   862 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   863 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   864 ;;Total ram usage:       10 bytes
   865 ;; Hardware stack levels used: 1
   866 ;; This function calls:
   867 ;;		Nothing
   868 ;; This function is called by:
   869 ;;		_SVS_initialize
   870 ;; This function uses a non-reentrant model
   871 ;;
   872                           
   873                           	psect	text4
   874   00F830                     __ptext4:
   875                           	callstack 0
   876   00F830                     _gpio_port_high_nibble_direction_initialize:
   877                           	callstack 28
   878   00F830                     
   879                           ;MCAL_layer/GPIO/GPIO.c: 322:     if(pin_config == ((void*)0)){
   880   00F830  5033               	movf	gpio_port_high_nibble_direction_initialize@pin_config^0,w,c
   881   00F832  1034               	iorwf	(gpio_port_high_nibble_direction_initialize@pin_config+1)^0,w,c
   882   00F834  A4D8               	btfss	status,2,c
   883   00F836  EF1F  F07C         	goto	u741
   884   00F83A  EF21  F07C         	goto	u740
   885   00F83E                     u741:
   886   00F83E  EF23  F07C         	goto	l1526
   887   00F842                     u740:
   888   00F842                     
   889                           ;MCAL_layer/GPIO/GPIO.c: 324:     }
   890   00F842  EF59  F07C         	goto	l275
   891   00F846                     l1526:
   892                           
   893                           ;MCAL_layer/GPIO/GPIO.c: 326:         ((*((volatile uint8 *)(tris_registers[pin_config->
      +                          port]))) = (((*((volatile uint8 *)(tris_registers[pin_config->port])))&0x0F)|(data&0xF0)
      +                          ));
   894   00F846  C033  FFD9         	movff	gpio_port_high_nibble_direction_initialize@pin_config,fsr2l
   895   00F84A  C034  FFDA         	movff	gpio_port_high_nibble_direction_initialize@pin_config+1,fsr2h
   896   00F84E  50DF               	movf	223,w,c
   897   00F850  0B07               	andlw	7
   898   00F852  6E36               	movwf	??_gpio_port_high_nibble_direction_initialize^0,c
   899   00F854  5036               	movf	??_gpio_port_high_nibble_direction_initialize^0,w,c
   900   00F856  0D02               	mullw	2
   901   00F858  0E15               	movlw	low _tris_registers
   902   00F85A  24F3               	addwf	243,w,c
   903   00F85C  6ED9               	movwf	fsr2l,c
   904   00F85E  0E00               	movlw	high _tris_registers
   905   00F860  20F4               	addwfc	prodh,w,c
   906   00F862  6EDA               	movwf	fsr2h,c
   907   00F864  CFDE F037          	movff	postinc2,??_gpio_port_high_nibble_direction_initialize+1
   908   00F868  CFDD F038          	movff	postdec2,??_gpio_port_high_nibble_direction_initialize+2
   909   00F86C  C037  FFD9         	movff	??_gpio_port_high_nibble_direction_initialize+1,fsr2l
   910   00F870  C038  FFDA         	movff	??_gpio_port_high_nibble_direction_initialize+2,fsr2h
   911   00F874  C035  F039         	movff	gpio_port_high_nibble_direction_initialize@data,??_gpio_port_high_nibble_directio
      +                          n_initialize+3
   912   00F878  0EF0               	movlw	240
   913   00F87A  1639               	andwf	(??_gpio_port_high_nibble_direction_initialize+3)^0,f,c
   914   00F87C  C033  FFE1         	movff	gpio_port_high_nibble_direction_initialize@pin_config,fsr1l
   915   00F880  C034  FFE2         	movff	gpio_port_high_nibble_direction_initialize@pin_config+1,fsr1h
   916   00F884  50E7               	movf	231,w,c
   917   00F886  0B07               	andlw	7
   918   00F888  6E3A               	movwf	(??_gpio_port_high_nibble_direction_initialize+4)^0,c
   919   00F88A  503A               	movf	(??_gpio_port_high_nibble_direction_initialize+4)^0,w,c
   920   00F88C  0D02               	mullw	2
   921   00F88E  0E15               	movlw	low _tris_registers
   922   00F890  24F3               	addwf	243,w,c
   923   00F892  6EE1               	movwf	fsr1l,c
   924   00F894  0E00               	movlw	high _tris_registers
   925   00F896  20F4               	addwfc	prodh,w,c
   926   00F898  6EE2               	movwf	fsr1h,c
   927   00F89A  CFE6 F03B          	movff	postinc1,??_gpio_port_high_nibble_direction_initialize+5
   928   00F89E  CFE5 F03C          	movff	postdec1,??_gpio_port_high_nibble_direction_initialize+6
   929   00F8A2  C03B  FFE1         	movff	??_gpio_port_high_nibble_direction_initialize+5,fsr1l
   930   00F8A6  C03C  FFE2         	movff	??_gpio_port_high_nibble_direction_initialize+6,fsr1h
   931   00F8AA  50E7               	movf	indf1,w,c
   932   00F8AC  0B0F               	andlw	15
   933   00F8AE  1039               	iorwf	(??_gpio_port_high_nibble_direction_initialize+3)^0,w,c
   934   00F8B0  6EDF               	movwf	indf2,c
   935   00F8B2                     l275:
   936   00F8B2  0012               	return		;funcret
   937   00F8B4                     __end_of_gpio_port_high_nibble_direction_initialize:
   938                           	callstack 0
   939                           
   940 ;; *************** function _gpio_pin_direction_initialize *****************
   941 ;; Defined at:
   942 ;;		line 16 in file "MCAL_layer/GPIO/GPIO.c"
   943 ;; Parameters:    Size  Location     Type
   944 ;;  pin_config      2    0[COMRAM] PTR const struct .
   945 ;;		 -> led_intialize@temp(1), SVS_initialize@temp(1), 
   946 ;; Auto vars:     Size  Location     Type
   947 ;;  ret             1    8[COMRAM] unsigned char 
   948 ;; Return value:  Size  Location     Type
   949 ;;                  1    wreg      unsigned char 
   950 ;; Registers used:
   951 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   952 ;; Tracked objects:
   953 ;;		On entry : 0/0
   954 ;;		On exit  : 0/0
   955 ;;		Unchanged: 0/0
   956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   957 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   958 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   959 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   960 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   961 ;;Total ram usage:        9 bytes
   962 ;; Hardware stack levels used: 1
   963 ;; This function calls:
   964 ;;		Nothing
   965 ;; This function is called by:
   966 ;;		_SVS_initialize
   967 ;;		_motor_initialize
   968 ;;		_relay_initialize
   969 ;;		_led_intialize
   970 ;;		_button_initializa
   971 ;;		_gpio_pin_initialize
   972 ;; This function uses a non-reentrant model
   973 ;;
   974                           
   975                           	psect	text5
   976   00FCA8                     __ptext5:
   977                           	callstack 0
   978   00FCA8                     _gpio_pin_direction_initialize:
   979                           	callstack 28
   980   00FCA8                     
   981                           ;MCAL_layer/GPIO/GPIO.c: 17:     Std_ReturnType ret = (Std_ReturnType)0x00;
   982   00FCA8  0E00               	movlw	0
   983   00FCAA  6E3B               	movwf	gpio_pin_direction_initialize@ret^0,c
   984   00FCAC                     
   985                           ;MCAL_layer/GPIO/GPIO.c: 18:     if(pin_config == ((void*)0) || pin_config->pin > 8 -1 |
      +                          | pin_config->port > 5 -1){
   986   00FCAC  5033               	movf	gpio_pin_direction_initialize@pin_config^0,w,c
   987   00FCAE  1034               	iorwf	(gpio_pin_direction_initialize@pin_config+1)^0,w,c
   988   00FCB0  B4D8               	btfsc	status,2,c
   989   00FCB2  EF5D  F07E         	goto	u751
   990   00FCB6  EF5F  F07E         	goto	u750
   991   00FCBA                     u751:
   992   00FCBA  EF7F  F07E         	goto	l1538
   993   00FCBE                     u750:
   994   00FCBE  C033  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
   995   00FCC2  C034  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
   996   00FCC6  30DF               	rrcf	223,w,c
   997   00FCC8  32E8               	rrcf	wreg,f,c
   998   00FCCA  32E8               	rrcf	wreg,f,c
   999   00FCCC  0B07               	andlw	7
  1000   00FCCE  6E35               	movwf	??_gpio_pin_direction_initialize^0,c
  1001   00FCD0  0E08               	movlw	8
  1002   00FCD2  6035               	cpfslt	??_gpio_pin_direction_initialize^0,c
  1003   00FCD4  EF6E  F07E         	goto	u761
  1004   00FCD8  EF70  F07E         	goto	u760
  1005   00FCDC                     u761:
  1006   00FCDC  EF7F  F07E         	goto	l1538
  1007   00FCE0                     u760:
  1008   00FCE0  C033  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  1009   00FCE4  C034  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  1010   00FCE8  50DF               	movf	223,w,c
  1011   00FCEA  0B07               	andlw	7
  1012   00FCEC  6E35               	movwf	??_gpio_pin_direction_initialize^0,c
  1013   00FCEE  0E04               	movlw	4
  1014   00FCF0  6435               	cpfsgt	??_gpio_pin_direction_initialize^0,c
  1015   00FCF2  EF7D  F07E         	goto	u771
  1016   00FCF6  EF7F  F07E         	goto	u770
  1017   00FCFA                     u771:
  1018   00FCFA  EF83  F07E         	goto	l1540
  1019   00FCFE                     u770:
  1020   00FCFE                     l1538:
  1021                           
  1022                           ;MCAL_layer/GPIO/GPIO.c: 19:         ret =(Std_ReturnType)0x01;
  1023   00FCFE  0E01               	movlw	1
  1024   00FD00  6E3B               	movwf	gpio_pin_direction_initialize@ret^0,c
  1025                           
  1026                           ;MCAL_layer/GPIO/GPIO.c: 20:     }
  1027   00FD02  EFF6  F07E         	goto	l192
  1028   00FD06                     l1540:
  1029                           
  1030                           ;MCAL_layer/GPIO/GPIO.c: 22:         if(pin_config->direction == GPIO_DIRECTION_OUTPUT){
  1031   00FD06  C033  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  1032   00FD0A  C034  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  1033   00FD0E  BCDF               	btfsc	indf2,6,c
  1034   00FD10  EF8C  F07E         	goto	u781
  1035   00FD14  EF8E  F07E         	goto	u780
  1036   00FD18                     u781:
  1037   00FD18  EFBF  F07E         	goto	l1544
  1038   00FD1C                     u780:
  1039   00FD1C                     
  1040                           ;MCAL_layer/GPIO/GPIO.c: 23:         ((*((volatile uint8 *)(tris_registers[pin_config->p
      +                          ort]))) &= (~(0x01 << pin_config->pin)));
  1041   00FD1C  C033  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  1042   00FD20  C034  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  1043   00FD24  30DF               	rrcf	223,w,c
  1044   00FD26  32E8               	rrcf	wreg,f,c
  1045   00FD28  32E8               	rrcf	wreg,f,c
  1046   00FD2A  0B07               	andlw	7
  1047   00FD2C  6E35               	movwf	??_gpio_pin_direction_initialize^0,c
  1048   00FD2E  0E01               	movlw	1
  1049   00FD30  6E36               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  1050   00FD32  2A35               	incf	??_gpio_pin_direction_initialize^0,f,c
  1051   00FD34  EF9E  F07E         	goto	u794
  1052   00FD38                     u795:
  1053   00FD38  90D8               	bcf	status,0,c
  1054   00FD3A  3636               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  1055   00FD3C                     u794:
  1056   00FD3C  2E35               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  1057   00FD3E  EF9C  F07E         	goto	u795
  1058   00FD42  5036               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1059   00FD44  0AFF               	xorlw	255
  1060   00FD46  6E37               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  1061   00FD48  C033  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  1062   00FD4C  C034  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  1063   00FD50  50DF               	movf	223,w,c
  1064   00FD52  0B07               	andlw	7
  1065   00FD54  6E38               	movwf	(??_gpio_pin_direction_initialize+3)^0,c
  1066   00FD56  5038               	movf	(??_gpio_pin_direction_initialize+3)^0,w,c
  1067   00FD58  0D02               	mullw	2
  1068   00FD5A  0E15               	movlw	low _tris_registers
  1069   00FD5C  24F3               	addwf	243,w,c
  1070   00FD5E  6ED9               	movwf	fsr2l,c
  1071   00FD60  0E00               	movlw	high _tris_registers
  1072   00FD62  20F4               	addwfc	prodh,w,c
  1073   00FD64  6EDA               	movwf	fsr2h,c
  1074   00FD66  CFDE F039          	movff	postinc2,??_gpio_pin_direction_initialize+4
  1075   00FD6A  CFDD F03A          	movff	postdec2,??_gpio_pin_direction_initialize+5
  1076   00FD6E  C039  FFD9         	movff	??_gpio_pin_direction_initialize+4,fsr2l
  1077   00FD72  C03A  FFDA         	movff	??_gpio_pin_direction_initialize+5,fsr2h
  1078   00FD76  5037               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  1079   00FD78  16DF               	andwf	indf2,f,c
  1080                           
  1081                           ;MCAL_layer/GPIO/GPIO.c: 25:         }
  1082   00FD7A  EFF6  F07E         	goto	l192
  1083   00FD7E                     l1544:
  1084   00FD7E  C033  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  1085   00FD82  C034  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  1086   00FD86  ACDF               	btfss	indf2,6,c
  1087   00FD88  EFC8  F07E         	goto	u801
  1088   00FD8C  EFCA  F07E         	goto	u800
  1089   00FD90                     u801:
  1090   00FD90  EF7F  F07E         	goto	l1538
  1091   00FD94                     u800:
  1092   00FD94                     
  1093                           ;MCAL_layer/GPIO/GPIO.c: 27:             ((*((volatile uint8 *)(tris_registers[pin_confi
      +                          g->port]))) |= (0x01 << pin_config->pin));
  1094   00FD94  C033  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  1095   00FD98  C034  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  1096   00FD9C  30DF               	rrcf	223,w,c
  1097   00FD9E  32E8               	rrcf	wreg,f,c
  1098   00FDA0  32E8               	rrcf	wreg,f,c
  1099   00FDA2  0B07               	andlw	7
  1100   00FDA4  6E35               	movwf	??_gpio_pin_direction_initialize^0,c
  1101   00FDA6  0E01               	movlw	1
  1102   00FDA8  6E36               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  1103   00FDAA  2A35               	incf	??_gpio_pin_direction_initialize^0,f,c
  1104   00FDAC  EFDA  F07E         	goto	u814
  1105   00FDB0                     u815:
  1106   00FDB0  90D8               	bcf	status,0,c
  1107   00FDB2  3636               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  1108   00FDB4                     u814:
  1109   00FDB4  2E35               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  1110   00FDB6  EFD8  F07E         	goto	u815
  1111   00FDBA  C033  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  1112   00FDBE  C034  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  1113   00FDC2  50DF               	movf	223,w,c
  1114   00FDC4  0B07               	andlw	7
  1115   00FDC6  6E37               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  1116   00FDC8  5037               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  1117   00FDCA  0D02               	mullw	2
  1118   00FDCC  0E15               	movlw	low _tris_registers
  1119   00FDCE  24F3               	addwf	243,w,c
  1120   00FDD0  6ED9               	movwf	fsr2l,c
  1121   00FDD2  0E00               	movlw	high _tris_registers
  1122   00FDD4  20F4               	addwfc	prodh,w,c
  1123   00FDD6  6EDA               	movwf	fsr2h,c
  1124   00FDD8  CFDE F038          	movff	postinc2,??_gpio_pin_direction_initialize+3
  1125   00FDDC  CFDD F039          	movff	postdec2,??_gpio_pin_direction_initialize+4
  1126   00FDE0  C038  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  1127   00FDE4  C039  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  1128   00FDE8  5036               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1129   00FDEA  12DF               	iorwf	indf2,f,c
  1130   00FDEC                     l192:
  1131                           
  1132                           ;MCAL_layer/GPIO/GPIO.c: 34:     return ret;
  1133   00FDEC  503B               	movf	gpio_pin_direction_initialize@ret^0,w,c
  1134   00FDEE  0012               	return		;funcret
  1135   00FDF0                     __end_of_gpio_pin_direction_initialize:
  1136                           	callstack 0
  1137                           
  1138 ;; *************** function _SVS_print_pov *****************
  1139 ;; Defined at:
  1140 ;;		line 92 in file "ECU_layer/7_SEGMENTS/7_SEGMENTS.c"
  1141 ;; Parameters:    Size  Location     Type
  1142 ;;  Seven_SEG       2   15[COMRAM] PTR struct .
  1143 ;;		 -> seven_seg(14), 
  1144 ;;  data            2   17[COMRAM] PTR unsigned char 
  1145 ;;		 -> main@data(6), 
  1146 ;; Auto vars:     Size  Location     Type
  1147 ;;  l               4   24[COMRAM] long 
  1148 ;;  svs_counter_    1   28[COMRAM] unsigned char 
  1149 ;;  svs_counter     1   30[COMRAM] unsigned char 
  1150 ;;  temp            1   29[COMRAM] struct .
  1151 ;;  ret             1    0        unsigned char 
  1152 ;; Return value:  Size  Location     Type
  1153 ;;                  1    wreg      unsigned char 
  1154 ;; Registers used:
  1155 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1156 ;; Tracked objects:
  1157 ;;		On entry : 0/0
  1158 ;;		On exit  : 0/0
  1159 ;;		Unchanged: 0/0
  1160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1161 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1162 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1163 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1164 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1165 ;;Total ram usage:       16 bytes
  1166 ;; Hardware stack levels used: 1
  1167 ;; Hardware stack levels required when called: 2
  1168 ;; This function calls:
  1169 ;;		_SVS_print
  1170 ;;		_gpio_pin_write_logic
  1171 ;; This function is called by:
  1172 ;;		_main
  1173 ;; This function uses a non-reentrant model
  1174 ;;
  1175                           
  1176                           	psect	text6
  1177   00FDF0                     __ptext6:
  1178                           	callstack 0
  1179   00FDF0                     _SVS_print_pov:
  1180                           	callstack 28
  1181   00FDF0                     
  1182                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 95:         if(Seven_SEG == ((void*)0)){
  1183   00FDF0  5042               	movf	SVS_print_pov@Seven_SEG^0,w,c
  1184   00FDF2  1043               	iorwf	(SVS_print_pov@Seven_SEG+1)^0,w,c
  1185   00FDF4  A4D8               	btfss	status,2,c
  1186   00FDF6  EFFF  F07E         	goto	u941
  1187   00FDFA  EF01  F07F         	goto	u940
  1188   00FDFE                     u941:
  1189   00FDFE  EF03  F07F         	goto	l1656
  1190   00FE02                     u940:
  1191   00FE02                     
  1192                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 97:         }
  1193   00FE02  EFFF  F07F         	goto	l42
  1194   00FE06                     l1656:
  1195                           
  1196                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 100:             pin_config_t temp ;;ECU_layer/7_SEG
      +                          MENTS/7_SEGMENTS.c: 101:             for(uint8 svs_counter_2 = 0 ;svs_counter_2<6; svs_c
      +                          ounter_2++){
  1197   00FE06  0E00               	movlw	0
  1198   00FE08  6E4F               	movwf	SVS_print_pov@svs_counter_2^0,c
  1199   00FE0A                     l1662:
  1200                           
  1201                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 103:                 temp.port = Seven_SEG->SVS_EN_P
      +                          INS[svs_counter_2].SVS_en_port;
  1202   00FE0A  504F               	movf	SVS_print_pov@svs_counter_2^0,w,c
  1203   00FE0C  0D02               	mullw	2
  1204   00FE0E  CFF3 F046          	movff	prodl,??_SVS_print_pov
  1205   00FE12  CFF4 F047          	movff	prodh,??_SVS_print_pov+1
  1206   00FE16  5046               	movf	??_SVS_print_pov^0,w,c
  1207   00FE18  2442               	addwf	SVS_print_pov@Seven_SEG^0,w,c
  1208   00FE1A  6E48               	movwf	(??_SVS_print_pov+2)^0,c
  1209   00FE1C  5047               	movf	(??_SVS_print_pov+1)^0,w,c
  1210   00FE1E  2043               	addwfc	(SVS_print_pov@Seven_SEG+1)^0,w,c
  1211   00FE20  6E49               	movwf	(??_SVS_print_pov+3)^0,c
  1212   00FE22  0E02               	movlw	2
  1213   00FE24  2448               	addwf	(??_SVS_print_pov+2)^0,w,c
  1214   00FE26  6ED9               	movwf	fsr2l,c
  1215   00FE28  0E00               	movlw	0
  1216   00FE2A  2049               	addwfc	(??_SVS_print_pov+3)^0,w,c
  1217   00FE2C  6EDA               	movwf	fsr2h,c
  1218   00FE2E  50DF               	movf	indf2,w,c
  1219   00FE30  6E4A               	movwf	(??_SVS_print_pov+4)^0,c
  1220   00FE32  5050               	movf	SVS_print_pov@temp^0,w,c
  1221   00FE34  184A               	xorwf	(??_SVS_print_pov+4)^0,w,c
  1222   00FE36  0BF8               	andlw	-8
  1223   00FE38  184A               	xorwf	(??_SVS_print_pov+4)^0,w,c
  1224   00FE3A  6E50               	movwf	SVS_print_pov@temp^0,c
  1225                           
  1226                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 104:                 temp.pin = Seven_SEG->SVS_EN_PI
      +                          NS[svs_counter_2].SVS_en_pin;
  1227   00FE3C  504F               	movf	SVS_print_pov@svs_counter_2^0,w,c
  1228   00FE3E  0D02               	mullw	2
  1229   00FE40  CFF3 F046          	movff	prodl,??_SVS_print_pov
  1230   00FE44  CFF4 F047          	movff	prodh,??_SVS_print_pov+1
  1231   00FE48  5046               	movf	??_SVS_print_pov^0,w,c
  1232   00FE4A  2442               	addwf	SVS_print_pov@Seven_SEG^0,w,c
  1233   00FE4C  6E48               	movwf	(??_SVS_print_pov+2)^0,c
  1234   00FE4E  5047               	movf	(??_SVS_print_pov+1)^0,w,c
  1235   00FE50  2043               	addwfc	(SVS_print_pov@Seven_SEG+1)^0,w,c
  1236   00FE52  6E49               	movwf	(??_SVS_print_pov+3)^0,c
  1237   00FE54  0E03               	movlw	3
  1238   00FE56  2448               	addwf	(??_SVS_print_pov+2)^0,w,c
  1239   00FE58  6ED9               	movwf	fsr2l,c
  1240   00FE5A  0E00               	movlw	0
  1241   00FE5C  2049               	addwfc	(??_SVS_print_pov+3)^0,w,c
  1242   00FE5E  6EDA               	movwf	fsr2h,c
  1243   00FE60  50DF               	movf	indf2,w,c
  1244   00FE62  6E4A               	movwf	(??_SVS_print_pov+4)^0,c
  1245   00FE64  464A               	rlncf	(??_SVS_print_pov+4)^0,f,c
  1246   00FE66  464A               	rlncf	(??_SVS_print_pov+4)^0,f,c
  1247   00FE68  464A               	rlncf	(??_SVS_print_pov+4)^0,f,c
  1248   00FE6A  5050               	movf	SVS_print_pov@temp^0,w,c
  1249   00FE6C  184A               	xorwf	(??_SVS_print_pov+4)^0,w,c
  1250   00FE6E  0BC7               	andlw	-57
  1251   00FE70  184A               	xorwf	(??_SVS_print_pov+4)^0,w,c
  1252   00FE72  6E50               	movwf	SVS_print_pov@temp^0,c
  1253   00FE74                     
  1254                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 105:                 gpio_pin_write_logic( &temp, GP
      +                          IO_HIGH);
  1255   00FE74  0E50               	movlw	low SVS_print_pov@temp
  1256   00FE76  6E33               	movwf	gpio_pin_write_logic@pin_config^0,c
  1257   00FE78  0E00               	movlw	high SVS_print_pov@temp
  1258   00FE7A  6E34               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  1259   00FE7C  0E01               	movlw	1
  1260   00FE7E  6E35               	movwf	gpio_pin_write_logic@logic^0,c
  1261   00FE80  EC2D  F07D         	call	_gpio_pin_write_logic	;wreg free
  1262   00FE84                     
  1263                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 106:             }
  1264   00FE84  2A4F               	incf	SVS_print_pov@svs_counter_2^0,f,c
  1265   00FE86  0E05               	movlw	5
  1266   00FE88  644F               	cpfsgt	SVS_print_pov@svs_counter_2^0,c
  1267   00FE8A  EF49  F07F         	goto	u951
  1268   00FE8E  EF4B  F07F         	goto	u950
  1269   00FE92                     u951:
  1270   00FE92  EF05  F07F         	goto	l1662
  1271   00FE96                     u950:
  1272   00FE96                     
  1273                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 107:             uint8 svs_counter = 0;
  1274   00FE96  0E00               	movlw	0
  1275   00FE98  6E51               	movwf	SVS_print_pov@svs_counter^0,c
  1276   00FE9A                     l1676:
  1277                           
  1278                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 109:                 if(svs_counter != 0){
  1279   00FE9A  5051               	movf	SVS_print_pov@svs_counter^0,w,c
  1280   00FE9C  B4D8               	btfsc	status,2,c
  1281   00FE9E  EF53  F07F         	goto	u961
  1282   00FEA2  EF55  F07F         	goto	u960
  1283   00FEA6                     u961:
  1284   00FEA6  EF8C  F07F         	goto	l1682
  1285   00FEAA                     u960:
  1286   00FEAA                     
  1287                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 110:                     temp.port = Seven_SEG->SVS_
      +                          EN_PINS[svs_counter-1].SVS_en_port;
  1288   00FEAA  5051               	movf	SVS_print_pov@svs_counter^0,w,c
  1289   00FEAC  6E46               	movwf	??_SVS_print_pov^0,c
  1290   00FEAE  6A47               	clrf	(??_SVS_print_pov+1)^0,c
  1291   00FEB0  90D8               	bcf	status,0,c
  1292   00FEB2  3646               	rlcf	??_SVS_print_pov^0,f,c
  1293   00FEB4  3647               	rlcf	(??_SVS_print_pov+1)^0,f,c
  1294   00FEB6  5046               	movf	??_SVS_print_pov^0,w,c
  1295   00FEB8  2442               	addwf	SVS_print_pov@Seven_SEG^0,w,c
  1296   00FEBA  6ED9               	movwf	fsr2l,c
  1297   00FEBC  5047               	movf	(??_SVS_print_pov+1)^0,w,c
  1298   00FEBE  2043               	addwfc	(SVS_print_pov@Seven_SEG+1)^0,w,c
  1299   00FEC0  6EDA               	movwf	fsr2h,c
  1300   00FEC2  50DF               	movf	indf2,w,c
  1301   00FEC4  6E48               	movwf	(??_SVS_print_pov+2)^0,c
  1302   00FEC6  5050               	movf	SVS_print_pov@temp^0,w,c
  1303   00FEC8  1848               	xorwf	(??_SVS_print_pov+2)^0,w,c
  1304   00FECA  0BF8               	andlw	-8
  1305   00FECC  1848               	xorwf	(??_SVS_print_pov+2)^0,w,c
  1306   00FECE  6E50               	movwf	SVS_print_pov@temp^0,c
  1307                           
  1308                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 111:                     temp.pin = Seven_SEG->SVS_E
      +                          N_PINS[svs_counter-1].SVS_en_pin;
  1309   00FED0  5051               	movf	SVS_print_pov@svs_counter^0,w,c
  1310   00FED2  6E46               	movwf	??_SVS_print_pov^0,c
  1311   00FED4  6A47               	clrf	(??_SVS_print_pov+1)^0,c
  1312   00FED6  90D8               	bcf	status,0,c
  1313   00FED8  3646               	rlcf	??_SVS_print_pov^0,f,c
  1314   00FEDA  3647               	rlcf	(??_SVS_print_pov+1)^0,f,c
  1315   00FEDC  5046               	movf	??_SVS_print_pov^0,w,c
  1316   00FEDE  2442               	addwf	SVS_print_pov@Seven_SEG^0,w,c
  1317   00FEE0  6E48               	movwf	(??_SVS_print_pov+2)^0,c
  1318   00FEE2  5047               	movf	(??_SVS_print_pov+1)^0,w,c
  1319   00FEE4  2043               	addwfc	(SVS_print_pov@Seven_SEG+1)^0,w,c
  1320   00FEE6  6E49               	movwf	(??_SVS_print_pov+3)^0,c
  1321   00FEE8  0E01               	movlw	1
  1322   00FEEA  2448               	addwf	(??_SVS_print_pov+2)^0,w,c
  1323   00FEEC  6ED9               	movwf	fsr2l,c
  1324   00FEEE  0E00               	movlw	0
  1325   00FEF0  2049               	addwfc	(??_SVS_print_pov+3)^0,w,c
  1326   00FEF2  6EDA               	movwf	fsr2h,c
  1327   00FEF4  50DF               	movf	indf2,w,c
  1328   00FEF6  6E4A               	movwf	(??_SVS_print_pov+4)^0,c
  1329   00FEF8  464A               	rlncf	(??_SVS_print_pov+4)^0,f,c
  1330   00FEFA  464A               	rlncf	(??_SVS_print_pov+4)^0,f,c
  1331   00FEFC  464A               	rlncf	(??_SVS_print_pov+4)^0,f,c
  1332   00FEFE  5050               	movf	SVS_print_pov@temp^0,w,c
  1333   00FF00  184A               	xorwf	(??_SVS_print_pov+4)^0,w,c
  1334   00FF02  0BC7               	andlw	-57
  1335   00FF04  184A               	xorwf	(??_SVS_print_pov+4)^0,w,c
  1336   00FF06  6E50               	movwf	SVS_print_pov@temp^0,c
  1337   00FF08                     
  1338                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 112:                     gpio_pin_write_logic( &temp
      +                          , GPIO_HIGH);
  1339   00FF08  0E50               	movlw	low SVS_print_pov@temp
  1340   00FF0A  6E33               	movwf	gpio_pin_write_logic@pin_config^0,c
  1341   00FF0C  0E00               	movlw	high SVS_print_pov@temp
  1342   00FF0E  6E34               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  1343   00FF10  0E01               	movlw	1
  1344   00FF12  6E35               	movwf	gpio_pin_write_logic@logic^0,c
  1345   00FF14  EC2D  F07D         	call	_gpio_pin_write_logic	;wreg free
  1346   00FF18                     l1682:
  1347                           
  1348                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 114:                 temp.port = Seven_SEG->SVS_EN_P
      +                          INS[svs_counter].SVS_en_port;
  1349   00FF18  5051               	movf	SVS_print_pov@svs_counter^0,w,c
  1350   00FF1A  0D02               	mullw	2
  1351   00FF1C  CFF3 F046          	movff	prodl,??_SVS_print_pov
  1352   00FF20  CFF4 F047          	movff	prodh,??_SVS_print_pov+1
  1353   00FF24  5046               	movf	??_SVS_print_pov^0,w,c
  1354   00FF26  2442               	addwf	SVS_print_pov@Seven_SEG^0,w,c
  1355   00FF28  6E48               	movwf	(??_SVS_print_pov+2)^0,c
  1356   00FF2A  5047               	movf	(??_SVS_print_pov+1)^0,w,c
  1357   00FF2C  2043               	addwfc	(SVS_print_pov@Seven_SEG+1)^0,w,c
  1358   00FF2E  6E49               	movwf	(??_SVS_print_pov+3)^0,c
  1359   00FF30  0E02               	movlw	2
  1360   00FF32  2448               	addwf	(??_SVS_print_pov+2)^0,w,c
  1361   00FF34  6ED9               	movwf	fsr2l,c
  1362   00FF36  0E00               	movlw	0
  1363   00FF38  2049               	addwfc	(??_SVS_print_pov+3)^0,w,c
  1364   00FF3A  6EDA               	movwf	fsr2h,c
  1365   00FF3C  50DF               	movf	indf2,w,c
  1366   00FF3E  6E4A               	movwf	(??_SVS_print_pov+4)^0,c
  1367   00FF40  5050               	movf	SVS_print_pov@temp^0,w,c
  1368   00FF42  184A               	xorwf	(??_SVS_print_pov+4)^0,w,c
  1369   00FF44  0BF8               	andlw	-8
  1370   00FF46  184A               	xorwf	(??_SVS_print_pov+4)^0,w,c
  1371   00FF48  6E50               	movwf	SVS_print_pov@temp^0,c
  1372   00FF4A                     
  1373                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 115:                 temp.pin = Seven_SEG->SVS_EN_PI
      +                          NS[svs_counter].SVS_en_pin;
  1374   00FF4A  5051               	movf	SVS_print_pov@svs_counter^0,w,c
  1375   00FF4C  0D02               	mullw	2
  1376   00FF4E  CFF3 F046          	movff	prodl,??_SVS_print_pov
  1377   00FF52  CFF4 F047          	movff	prodh,??_SVS_print_pov+1
  1378   00FF56  5046               	movf	??_SVS_print_pov^0,w,c
  1379   00FF58  2442               	addwf	SVS_print_pov@Seven_SEG^0,w,c
  1380   00FF5A  6E48               	movwf	(??_SVS_print_pov+2)^0,c
  1381   00FF5C  5047               	movf	(??_SVS_print_pov+1)^0,w,c
  1382   00FF5E  2043               	addwfc	(SVS_print_pov@Seven_SEG+1)^0,w,c
  1383   00FF60  6E49               	movwf	(??_SVS_print_pov+3)^0,c
  1384   00FF62  0E03               	movlw	3
  1385   00FF64  2448               	addwf	(??_SVS_print_pov+2)^0,w,c
  1386   00FF66  6ED9               	movwf	fsr2l,c
  1387   00FF68  0E00               	movlw	0
  1388   00FF6A  2049               	addwfc	(??_SVS_print_pov+3)^0,w,c
  1389   00FF6C  6EDA               	movwf	fsr2h,c
  1390   00FF6E  50DF               	movf	indf2,w,c
  1391   00FF70  6E4A               	movwf	(??_SVS_print_pov+4)^0,c
  1392   00FF72  464A               	rlncf	(??_SVS_print_pov+4)^0,f,c
  1393   00FF74  464A               	rlncf	(??_SVS_print_pov+4)^0,f,c
  1394   00FF76  464A               	rlncf	(??_SVS_print_pov+4)^0,f,c
  1395   00FF78  5050               	movf	SVS_print_pov@temp^0,w,c
  1396   00FF7A  184A               	xorwf	(??_SVS_print_pov+4)^0,w,c
  1397   00FF7C  0BC7               	andlw	-57
  1398   00FF7E  184A               	xorwf	(??_SVS_print_pov+4)^0,w,c
  1399   00FF80  6E50               	movwf	SVS_print_pov@temp^0,c
  1400   00FF82                     
  1401                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 116:                 gpio_pin_write_logic( &temp, GP
      +                          IO_LOW);
  1402   00FF82  0E50               	movlw	low SVS_print_pov@temp
  1403   00FF84  6E33               	movwf	gpio_pin_write_logic@pin_config^0,c
  1404   00FF86  0E00               	movlw	high SVS_print_pov@temp
  1405   00FF88  6E34               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  1406   00FF8A  0E00               	movlw	0
  1407   00FF8C  6E35               	movwf	gpio_pin_write_logic@logic^0,c
  1408   00FF8E  EC2D  F07D         	call	_gpio_pin_write_logic	;wreg free
  1409   00FF92                     
  1410                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 117:                 SVS_print(Seven_SEG, data[svs_c
      +                          ounter]);
  1411   00FF92  C042  F03D         	movff	SVS_print_pov@Seven_SEG,SVS_print@Seven_SEG
  1412   00FF96  C043  F03E         	movff	SVS_print_pov@Seven_SEG+1,SVS_print@Seven_SEG+1
  1413   00FF9A  5051               	movf	SVS_print_pov@svs_counter^0,w,c
  1414   00FF9C  2444               	addwf	SVS_print_pov@data^0,w,c
  1415   00FF9E  6ED9               	movwf	fsr2l,c
  1416   00FFA0  0E00               	movlw	0
  1417   00FFA2  2045               	addwfc	(SVS_print_pov@data+1)^0,w,c
  1418   00FFA4  6EDA               	movwf	fsr2h,c
  1419   00FFA6  50DF               	movf	indf2,w,c
  1420   00FFA8  6E3F               	movwf	SVS_print@data^0,c
  1421   00FFAA  EC9C  F07C         	call	_SVS_print	;wreg free
  1422   00FFAE                     
  1423                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 118:                 for(long l =0; l<=500;l++);
  1424   00FFAE  0E00               	movlw	0
  1425   00FFB0  6E4B               	movwf	SVS_print_pov@l^0,c
  1426   00FFB2  0E00               	movlw	0
  1427   00FFB4  6E4C               	movwf	(SVS_print_pov@l+1)^0,c
  1428   00FFB6  0E00               	movlw	0
  1429   00FFB8  6E4D               	movwf	(SVS_print_pov@l+2)^0,c
  1430   00FFBA  0E00               	movlw	0
  1431   00FFBC  6E4E               	movwf	(SVS_print_pov@l+3)^0,c
  1432   00FFBE                     l1696:
  1433   00FFBE  0E01               	movlw	1
  1434   00FFC0  264B               	addwf	SVS_print_pov@l^0,f,c
  1435   00FFC2  0E00               	movlw	0
  1436   00FFC4  224C               	addwfc	(SVS_print_pov@l+1)^0,f,c
  1437   00FFC6  224D               	addwfc	(SVS_print_pov@l+2)^0,f,c
  1438   00FFC8  224E               	addwfc	(SVS_print_pov@l+3)^0,f,c
  1439   00FFCA  BE4E               	btfsc	(SVS_print_pov@l+3)^0,7,c
  1440   00FFCC  EFF4  F07F         	goto	u971
  1441   00FFD0  504E               	movf	(SVS_print_pov@l+3)^0,w,c
  1442   00FFD2  104D               	iorwf	(SVS_print_pov@l+2)^0,w,c
  1443   00FFD4  E10B               	bnz	u970
  1444   00FFD6  0EF5               	movlw	245
  1445   00FFD8  5C4B               	subwf	SVS_print_pov@l^0,w,c
  1446   00FFDA  0E01               	movlw	1
  1447   00FFDC  584C               	subwfb	(SVS_print_pov@l+1)^0,w,c
  1448   00FFDE  A0D8               	btfss	status,0,c
  1449   00FFE0  EFF4  F07F         	goto	u971
  1450   00FFE4  EFF6  F07F         	goto	u970
  1451   00FFE8                     u971:
  1452   00FFE8  EFDF  F07F         	goto	l1696
  1453   00FFEC                     u970:
  1454   00FFEC                     
  1455                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 119:             }
  1456   00FFEC  2A51               	incf	SVS_print_pov@svs_counter^0,f,c
  1457   00FFEE  0E05               	movlw	5
  1458   00FFF0  6451               	cpfsgt	SVS_print_pov@svs_counter^0,c
  1459   00FFF2  EFFD  F07F         	goto	u981
  1460   00FFF6  EFFF  F07F         	goto	u980
  1461   00FFFA                     u981:
  1462   00FFFA  EF4D  F07F         	goto	l1676
  1463   00FFFE                     u980:
  1464   00FFFE                     l42:
  1465   00FFFE  0012               	return		;funcret
  1466   010000                     __end_of_SVS_print_pov:
  1467                           	callstack 0
  1468                           
  1469 ;; *************** function _gpio_pin_write_logic *****************
  1470 ;; Defined at:
  1471 ;;		line 75 in file "MCAL_layer/GPIO/GPIO.c"
  1472 ;; Parameters:    Size  Location     Type
  1473 ;;  pin_config      2    0[COMRAM] PTR struct .
  1474 ;;		 -> led_turn_off@temp(1), led_turn_on@temp(1), led_intialize@temp(1), SVS_print_pov@temp(1), 
  1475 ;;  logic           1    2[COMRAM] enum E2798
  1476 ;; Auto vars:     Size  Location     Type
  1477 ;;  ret             1    9[COMRAM] unsigned char 
  1478 ;; Return value:  Size  Location     Type
  1479 ;;                  1    wreg      unsigned char 
  1480 ;; Registers used:
  1481 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1482 ;; Tracked objects:
  1483 ;;		On entry : 0/0
  1484 ;;		On exit  : 0/0
  1485 ;;		Unchanged: 0/0
  1486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1487 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1488 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1489 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1490 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1491 ;;Total ram usage:       10 bytes
  1492 ;; Hardware stack levels used: 1
  1493 ;; This function calls:
  1494 ;;		Nothing
  1495 ;; This function is called by:
  1496 ;;		_SVS_print_pov
  1497 ;;		_motor_turn_on
  1498 ;;		_motor_stop
  1499 ;;		_relay_turn_on
  1500 ;;		_relay_turn_off
  1501 ;;		_led_intialize
  1502 ;;		_led_turn_on
  1503 ;;		_led_turn_off
  1504 ;;		_gpio_pin_initialize
  1505 ;; This function uses a non-reentrant model
  1506 ;;
  1507                           
  1508                           	psect	text7
  1509   00FA5A                     __ptext7:
  1510                           	callstack 0
  1511   00FA5A                     _gpio_pin_write_logic:
  1512                           	callstack 29
  1513   00FA5A                     
  1514                           ;MCAL_layer/GPIO/GPIO.c: 77:     Std_ReturnType ret = (Std_ReturnType)0x00;
  1515   00FA5A  0E00               	movlw	0
  1516   00FA5C  6E3C               	movwf	gpio_pin_write_logic@ret^0,c
  1517   00FA5E                     
  1518                           ;MCAL_layer/GPIO/GPIO.c: 79:     if(pin_config == ((void*)0)){
  1519   00FA5E  5033               	movf	gpio_pin_write_logic@pin_config^0,w,c
  1520   00FA60  1034               	iorwf	(gpio_pin_write_logic@pin_config+1)^0,w,c
  1521   00FA62  A4D8               	btfss	status,2,c
  1522   00FA64  EF36  F07D         	goto	u911
  1523   00FA68  EF38  F07D         	goto	u910
  1524   00FA6C                     u911:
  1525   00FA6C  EFA5  F07D         	goto	l1640
  1526   00FA70                     u910:
  1527   00FA70                     l1626:
  1528                           
  1529                           ;MCAL_layer/GPIO/GPIO.c: 80:         ret =(Std_ReturnType)0x01;
  1530   00FA70  0E01               	movlw	1
  1531   00FA72  6E3C               	movwf	gpio_pin_write_logic@ret^0,c
  1532                           
  1533                           ;MCAL_layer/GPIO/GPIO.c: 81:     }
  1534   00FA74  EFBA  F07D         	goto	l1642
  1535   00FA78                     l1628:
  1536                           
  1537                           ;MCAL_layer/GPIO/GPIO.c: 85:                 ((*((volatile uint8 *)(lat_registers[pin_co
      +                          nfig->port]))) |= (0x01 << pin_config->pin));
  1538   00FA78  C033  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  1539   00FA7C  C034  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  1540   00FA80  30DF               	rrcf	223,w,c
  1541   00FA82  32E8               	rrcf	wreg,f,c
  1542   00FA84  32E8               	rrcf	wreg,f,c
  1543   00FA86  0B07               	andlw	7
  1544   00FA88  6E36               	movwf	??_gpio_pin_write_logic^0,c
  1545   00FA8A  0E01               	movlw	1
  1546   00FA8C  6E37               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1547   00FA8E  2A36               	incf	??_gpio_pin_write_logic^0,f,c
  1548   00FA90  EF4C  F07D         	goto	u924
  1549   00FA94                     u925:
  1550   00FA94  90D8               	bcf	status,0,c
  1551   00FA96  3637               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1552   00FA98                     u924:
  1553   00FA98  2E36               	decfsz	??_gpio_pin_write_logic^0,f,c
  1554   00FA9A  EF4A  F07D         	goto	u925
  1555   00FA9E  C033  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  1556   00FAA2  C034  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  1557   00FAA6  50DF               	movf	223,w,c
  1558   00FAA8  0B07               	andlw	7
  1559   00FAAA  6E38               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1560   00FAAC  5038               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1561   00FAAE  0D02               	mullw	2
  1562   00FAB0  0E01               	movlw	low _lat_registers
  1563   00FAB2  24F3               	addwf	243,w,c
  1564   00FAB4  6ED9               	movwf	fsr2l,c
  1565   00FAB6  0E00               	movlw	high _lat_registers
  1566   00FAB8  20F4               	addwfc	prodh,w,c
  1567   00FABA  6EDA               	movwf	fsr2h,c
  1568   00FABC  CFDE F039          	movff	postinc2,??_gpio_pin_write_logic+3
  1569   00FAC0  CFDD F03A          	movff	postdec2,??_gpio_pin_write_logic+4
  1570   00FAC4  C039  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1571   00FAC8  C03A  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1572   00FACC  5037               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1573   00FACE  12DF               	iorwf	indf2,f,c
  1574   00FAD0                     
  1575                           ;MCAL_layer/GPIO/GPIO.c: 86:                 pin_config->logic = GPIO_HIGH;
  1576   00FAD0  C033  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  1577   00FAD4  C034  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  1578   00FAD8  8EDF               	bsf	indf2,7,c
  1579                           
  1580                           ;MCAL_layer/GPIO/GPIO.c: 87:                 break;
  1581   00FADA  EFBA  F07D         	goto	l1642
  1582   00FADE                     l1632:
  1583                           
  1584                           ;MCAL_layer/GPIO/GPIO.c: 89:                 ((*((volatile uint8 *)(lat_registers[pin_co
      +                          nfig->port]))) &= (~(0x01 << pin_config->pin)));
  1585   00FADE  C033  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  1586   00FAE2  C034  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  1587   00FAE6  30DF               	rrcf	223,w,c
  1588   00FAE8  32E8               	rrcf	wreg,f,c
  1589   00FAEA  32E8               	rrcf	wreg,f,c
  1590   00FAEC  0B07               	andlw	7
  1591   00FAEE  6E36               	movwf	??_gpio_pin_write_logic^0,c
  1592   00FAF0  0E01               	movlw	1
  1593   00FAF2  6E37               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1594   00FAF4  2A36               	incf	??_gpio_pin_write_logic^0,f,c
  1595   00FAF6  EF7F  F07D         	goto	u934
  1596   00FAFA                     u935:
  1597   00FAFA  90D8               	bcf	status,0,c
  1598   00FAFC  3637               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1599   00FAFE                     u934:
  1600   00FAFE  2E36               	decfsz	??_gpio_pin_write_logic^0,f,c
  1601   00FB00  EF7D  F07D         	goto	u935
  1602   00FB04  5037               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1603   00FB06  0AFF               	xorlw	255
  1604   00FB08  6E38               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1605   00FB0A  C033  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  1606   00FB0E  C034  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  1607   00FB12  50DF               	movf	223,w,c
  1608   00FB14  0B07               	andlw	7
  1609   00FB16  6E39               	movwf	(??_gpio_pin_write_logic+3)^0,c
  1610   00FB18  5039               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  1611   00FB1A  0D02               	mullw	2
  1612   00FB1C  0E01               	movlw	low _lat_registers
  1613   00FB1E  24F3               	addwf	243,w,c
  1614   00FB20  6ED9               	movwf	fsr2l,c
  1615   00FB22  0E00               	movlw	high _lat_registers
  1616   00FB24  20F4               	addwfc	prodh,w,c
  1617   00FB26  6EDA               	movwf	fsr2h,c
  1618   00FB28  CFDE F03A          	movff	postinc2,??_gpio_pin_write_logic+4
  1619   00FB2C  CFDD F03B          	movff	postdec2,??_gpio_pin_write_logic+5
  1620   00FB30  C03A  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  1621   00FB34  C03B  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  1622   00FB38  5038               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1623   00FB3A  16DF               	andwf	indf2,f,c
  1624   00FB3C                     
  1625                           ;MCAL_layer/GPIO/GPIO.c: 90:                 pin_config->logic = GPIO_LOW;
  1626   00FB3C  C033  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  1627   00FB40  C034  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  1628   00FB44  9EDF               	bcf	indf2,7,c
  1629                           
  1630                           ;MCAL_layer/GPIO/GPIO.c: 91:                 break;
  1631   00FB46  EFBA  F07D         	goto	l1642
  1632   00FB4A                     l1640:
  1633   00FB4A  5035               	movf	gpio_pin_write_logic@logic^0,w,c
  1634   00FB4C  6E36               	movwf	??_gpio_pin_write_logic^0,c
  1635   00FB4E  6A37               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1636                           
  1637                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1638                           ; Switch size 1, requested type "simple"
  1639                           ; Number of cases is 1, Range of values is 0 to 0
  1640                           ; switch strategies available:
  1641                           ; Name         Instructions Cycles
  1642                           ; simple_byte            4     3 (average)
  1643                           ;	Chosen strategy is simple_byte
  1644   00FB50  5037               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1645   00FB52  0A00               	xorlw	0	; case 0
  1646   00FB54  B4D8               	btfsc	status,2,c
  1647   00FB56  EFAF  F07D         	goto	l1896
  1648   00FB5A  EF38  F07D         	goto	l1626
  1649   00FB5E                     l1896:
  1650                           
  1651                           ; Switch size 1, requested type "simple"
  1652                           ; Number of cases is 2, Range of values is 0 to 1
  1653                           ; switch strategies available:
  1654                           ; Name         Instructions Cycles
  1655                           ; simple_byte            7     4 (average)
  1656                           ;	Chosen strategy is simple_byte
  1657   00FB5E  5036               	movf	??_gpio_pin_write_logic^0,w,c
  1658   00FB60  0A00               	xorlw	0	; case 0
  1659   00FB62  B4D8               	btfsc	status,2,c
  1660   00FB64  EF6F  F07D         	goto	l1632
  1661   00FB68  0A01               	xorlw	1	; case 1
  1662   00FB6A  B4D8               	btfsc	status,2,c
  1663   00FB6C  EF3C  F07D         	goto	l1628
  1664   00FB70  EF38  F07D         	goto	l1626
  1665   00FB74                     l1642:
  1666                           
  1667                           ;MCAL_layer/GPIO/GPIO.c: 98:     return ret;
  1668   00FB74  503C               	movf	gpio_pin_write_logic@ret^0,w,c
  1669   00FB76  0012               	return		;funcret
  1670   00FB78                     __end_of_gpio_pin_write_logic:
  1671                           	callstack 0
  1672                           
  1673 ;; *************** function _SVS_print *****************
  1674 ;; Defined at:
  1675 ;;		line 71 in file "ECU_layer/7_SEGMENTS/7_SEGMENTS.c"
  1676 ;; Parameters:    Size  Location     Type
  1677 ;;  Seven_SEG       2   10[COMRAM] PTR const struct .
  1678 ;;		 -> seven_seg(14), 
  1679 ;;  data            1   12[COMRAM] enum E2870
  1680 ;; Auto vars:     Size  Location     Type
  1681 ;;  temp            1   14[COMRAM] struct .
  1682 ;;  ret             1    0        unsigned char 
  1683 ;; Return value:  Size  Location     Type
  1684 ;;                  1    wreg      unsigned char 
  1685 ;; Registers used:
  1686 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1687 ;; Tracked objects:
  1688 ;;		On entry : 0/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1692 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1693 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1694 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1695 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1696 ;;Total ram usage:        5 bytes
  1697 ;; Hardware stack levels used: 1
  1698 ;; Hardware stack levels required when called: 1
  1699 ;; This function calls:
  1700 ;;		_gpio_port_high_nibble_write_logic
  1701 ;;		_gpio_port_low_nibble_write_logic
  1702 ;; This function is called by:
  1703 ;;		_SVS_print_pov
  1704 ;; This function uses a non-reentrant model
  1705 ;;
  1706                           
  1707                           	psect	text8
  1708   00F938                     __ptext8:
  1709                           	callstack 0
  1710   00F938                     _SVS_print:
  1711                           	callstack 28
  1712   00F938                     
  1713                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 74:     if(Seven_SEG == ((void*)0)){
  1714   00F938  503D               	movf	SVS_print@Seven_SEG^0,w,c
  1715   00F93A  103E               	iorwf	(SVS_print@Seven_SEG+1)^0,w,c
  1716   00F93C  A4D8               	btfss	status,2,c
  1717   00F93E  EFA3  F07C         	goto	u881
  1718   00F942  EFA5  F07C         	goto	u880
  1719   00F946                     u881:
  1720   00F946  EFA7  F07C         	goto	l1610
  1721   00F94A                     u880:
  1722   00F94A                     
  1723                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 76:     }
  1724   00F94A  EFE3  F07C         	goto	l30
  1725   00F94E                     l1610:
  1726                           
  1727                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 78:         pin_config_t temp;;ECU_layer/7_SEGMENTS/
      +                          7_SEGMENTS.c: 79:         temp.port = Seven_SEG->SVS_port;
  1728   00F94E  C03D  FFD9         	movff	SVS_print@Seven_SEG,fsr2l
  1729   00F952  C03E  FFDA         	movff	SVS_print@Seven_SEG+1,fsr2h
  1730   00F956  50DF               	movf	indf2,w,c
  1731   00F958  6E40               	movwf	??_SVS_print^0,c
  1732   00F95A  5041               	movf	SVS_print@temp^0,w,c
  1733   00F95C  1840               	xorwf	??_SVS_print^0,w,c
  1734   00F95E  0BF8               	andlw	-8
  1735   00F960  1840               	xorwf	??_SVS_print^0,w,c
  1736   00F962  6E41               	movwf	SVS_print@temp^0,c
  1737   00F964                     
  1738                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 80:         temp.direction= GPIO_DIRECTION_OUTPUT;
  1739   00F964  9C41               	bcf	SVS_print@temp^0,6,c
  1740                           
  1741                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 82:         if(Seven_SEG->SVS_nibble_state == SVS_LO
      +                          W_NIBBLE){
  1742   00F966  EE20 F001          	lfsr	2,1
  1743   00F96A  503D               	movf	SVS_print@Seven_SEG^0,w,c
  1744   00F96C  26D9               	addwf	fsr2l,f,c
  1745   00F96E  503E               	movf	(SVS_print@Seven_SEG+1)^0,w,c
  1746   00F970  22DA               	addwfc	fsr2h,f,c
  1747   00F972  50DF               	movf	indf2,w,c
  1748   00F974  A4D8               	btfss	status,2,c
  1749   00F976  EFBF  F07C         	goto	u891
  1750   00F97A  EFC1  F07C         	goto	u890
  1751   00F97E                     u891:
  1752   00F97E  EFCB  F07C         	goto	l1616
  1753   00F982                     u890:
  1754   00F982                     
  1755                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 83:             gpio_port_low_nibble_write_logic(&te
      +                          mp, data);
  1756   00F982  0E41               	movlw	low SVS_print@temp
  1757   00F984  6E33               	movwf	gpio_port_low_nibble_write_logic@pin_config^0,c
  1758   00F986  0E00               	movlw	high SVS_print@temp
  1759   00F988  6E34               	movwf	(gpio_port_low_nibble_write_logic@pin_config+1)^0,c
  1760   00F98A  C03F  F035         	movff	SVS_print@data,gpio_port_low_nibble_write_logic@data
  1761   00F98E  ECD6  F07B         	call	_gpio_port_low_nibble_write_logic	;wreg free
  1762                           
  1763                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 84:         }else if(Seven_SEG->SVS_nibble_state == 
      +                          SVS_HIGH_NIBBLE){
  1764   00F992  EFE3  F07C         	goto	l30
  1765   00F996                     l1616:
  1766   00F996  EE20 F001          	lfsr	2,1
  1767   00F99A  503D               	movf	SVS_print@Seven_SEG^0,w,c
  1768   00F99C  26D9               	addwf	fsr2l,f,c
  1769   00F99E  503E               	movf	(SVS_print@Seven_SEG+1)^0,w,c
  1770   00F9A0  22DA               	addwfc	fsr2h,f,c
  1771   00F9A2  04DE               	decf	postinc2,w,c
  1772   00F9A4  A4D8               	btfss	status,2,c
  1773   00F9A6  EFD7  F07C         	goto	u901
  1774   00F9AA  EFD9  F07C         	goto	u900
  1775   00F9AE                     u901:
  1776   00F9AE  EFE3  F07C         	goto	l26
  1777   00F9B2                     u900:
  1778   00F9B2                     
  1779                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 85:             gpio_port_high_nibble_write_logic(&t
      +                          emp, data);
  1780   00F9B2  0E41               	movlw	low SVS_print@temp
  1781   00F9B4  6E33               	movwf	gpio_port_high_nibble_write_logic@pin_config^0,c
  1782   00F9B6  0E00               	movlw	high SVS_print@temp
  1783   00F9B8  6E34               	movwf	(gpio_port_high_nibble_write_logic@pin_config+1)^0,c
  1784   00F9BA  C03F  F035         	movff	SVS_print@data,gpio_port_high_nibble_write_logic@data
  1785   00F9BE  EC94  F07B         	call	_gpio_port_high_nibble_write_logic	;wreg free
  1786   00F9C2  EFE3  F07C         	goto	l30
  1787   00F9C6                     l26:
  1788   00F9C6                     l30:
  1789   00F9C6  0012               	return		;funcret
  1790   00F9C8                     __end_of_SVS_print:
  1791                           	callstack 0
  1792                           
  1793 ;; *************** function _gpio_port_low_nibble_write_logic *****************
  1794 ;; Defined at:
  1795 ;;		line 310 in file "MCAL_layer/GPIO/GPIO.c"
  1796 ;; Parameters:    Size  Location     Type
  1797 ;;  pin_config      2    0[COMRAM] PTR struct .
  1798 ;;		 -> SVS_print@temp(1), 
  1799 ;;  data            1    2[COMRAM] unsigned char 
  1800 ;; Auto vars:     Size  Location     Type
  1801 ;;  ret             1    0        unsigned char 
  1802 ;; Return value:  Size  Location     Type
  1803 ;;                  1    wreg      unsigned char 
  1804 ;; Registers used:
  1805 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1806 ;; Tracked objects:
  1807 ;;		On entry : 0/0
  1808 ;;		On exit  : 0/0
  1809 ;;		Unchanged: 0/0
  1810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1811 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1813 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1814 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1815 ;;Total ram usage:       10 bytes
  1816 ;; Hardware stack levels used: 1
  1817 ;; This function calls:
  1818 ;;		Nothing
  1819 ;; This function is called by:
  1820 ;;		_SVS_print
  1821 ;; This function uses a non-reentrant model
  1822 ;;
  1823                           
  1824                           	psect	text9
  1825   00F7AC                     __ptext9:
  1826                           	callstack 0
  1827   00F7AC                     _gpio_port_low_nibble_write_logic:
  1828                           	callstack 28
  1829   00F7AC                     
  1830                           ;MCAL_layer/GPIO/GPIO.c: 312:     if(pin_config == ((void*)0)){
  1831   00F7AC  5033               	movf	gpio_port_low_nibble_write_logic@pin_config^0,w,c
  1832   00F7AE  1034               	iorwf	(gpio_port_low_nibble_write_logic@pin_config+1)^0,w,c
  1833   00F7B0  A4D8               	btfss	status,2,c
  1834   00F7B2  EFDD  F07B         	goto	u821
  1835   00F7B6  EFDF  F07B         	goto	u820
  1836   00F7BA                     u821:
  1837   00F7BA  EFE1  F07B         	goto	l1558
  1838   00F7BE                     u820:
  1839   00F7BE                     
  1840                           ;MCAL_layer/GPIO/GPIO.c: 314:     }
  1841   00F7BE  EF17  F07C         	goto	l270
  1842   00F7C2                     l1558:
  1843                           
  1844                           ;MCAL_layer/GPIO/GPIO.c: 316:         ((*((volatile uint8 *)(lat_registers[pin_config->p
      +                          ort]))) = (((*((volatile uint8 *)(lat_registers[pin_config->port])))&0xF0)|(data&0x0F)))
      +                          ;
  1845   00F7C2  C033  FFD9         	movff	gpio_port_low_nibble_write_logic@pin_config,fsr2l
  1846   00F7C6  C034  FFDA         	movff	gpio_port_low_nibble_write_logic@pin_config+1,fsr2h
  1847   00F7CA  50DF               	movf	223,w,c
  1848   00F7CC  0B07               	andlw	7
  1849   00F7CE  6E36               	movwf	??_gpio_port_low_nibble_write_logic^0,c
  1850   00F7D0  5036               	movf	??_gpio_port_low_nibble_write_logic^0,w,c
  1851   00F7D2  0D02               	mullw	2
  1852   00F7D4  0E01               	movlw	low _lat_registers
  1853   00F7D6  24F3               	addwf	243,w,c
  1854   00F7D8  6ED9               	movwf	fsr2l,c
  1855   00F7DA  0E00               	movlw	high _lat_registers
  1856   00F7DC  20F4               	addwfc	prodh,w,c
  1857   00F7DE  6EDA               	movwf	fsr2h,c
  1858   00F7E0  CFDE F037          	movff	postinc2,??_gpio_port_low_nibble_write_logic+1
  1859   00F7E4  CFDD F038          	movff	postdec2,??_gpio_port_low_nibble_write_logic+2
  1860   00F7E8  C037  FFD9         	movff	??_gpio_port_low_nibble_write_logic+1,fsr2l
  1861   00F7EC  C038  FFDA         	movff	??_gpio_port_low_nibble_write_logic+2,fsr2h
  1862   00F7F0  C035  F039         	movff	gpio_port_low_nibble_write_logic@data,??_gpio_port_low_nibble_write_logic+3
  1863   00F7F4  0E0F               	movlw	15
  1864   00F7F6  1639               	andwf	(??_gpio_port_low_nibble_write_logic+3)^0,f,c
  1865   00F7F8  C033  FFE1         	movff	gpio_port_low_nibble_write_logic@pin_config,fsr1l
  1866   00F7FC  C034  FFE2         	movff	gpio_port_low_nibble_write_logic@pin_config+1,fsr1h
  1867   00F800  50E7               	movf	231,w,c
  1868   00F802  0B07               	andlw	7
  1869   00F804  6E3A               	movwf	(??_gpio_port_low_nibble_write_logic+4)^0,c
  1870   00F806  503A               	movf	(??_gpio_port_low_nibble_write_logic+4)^0,w,c
  1871   00F808  0D02               	mullw	2
  1872   00F80A  0E01               	movlw	low _lat_registers
  1873   00F80C  24F3               	addwf	243,w,c
  1874   00F80E  6EE1               	movwf	fsr1l,c
  1875   00F810  0E00               	movlw	high _lat_registers
  1876   00F812  20F4               	addwfc	prodh,w,c
  1877   00F814  6EE2               	movwf	fsr1h,c
  1878   00F816  CFE6 F03B          	movff	postinc1,??_gpio_port_low_nibble_write_logic+5
  1879   00F81A  CFE5 F03C          	movff	postdec1,??_gpio_port_low_nibble_write_logic+6
  1880   00F81E  C03B  FFE1         	movff	??_gpio_port_low_nibble_write_logic+5,fsr1l
  1881   00F822  C03C  FFE2         	movff	??_gpio_port_low_nibble_write_logic+6,fsr1h
  1882   00F826  50E7               	movf	indf1,w,c
  1883   00F828  0BF0               	andlw	240
  1884   00F82A  1039               	iorwf	(??_gpio_port_low_nibble_write_logic+3)^0,w,c
  1885   00F82C  6EDF               	movwf	indf2,c
  1886   00F82E                     l270:
  1887   00F82E  0012               	return		;funcret
  1888   00F830                     __end_of_gpio_port_low_nibble_write_logic:
  1889                           	callstack 0
  1890                           
  1891 ;; *************** function _gpio_port_high_nibble_write_logic *****************
  1892 ;; Defined at:
  1893 ;;		line 331 in file "MCAL_layer/GPIO/GPIO.c"
  1894 ;; Parameters:    Size  Location     Type
  1895 ;;  pin_config      2    0[COMRAM] PTR struct .
  1896 ;;		 -> SVS_print@temp(1), 
  1897 ;;  data            1    2[COMRAM] unsigned char 
  1898 ;; Auto vars:     Size  Location     Type
  1899 ;;  ret             1    0        unsigned char 
  1900 ;; Return value:  Size  Location     Type
  1901 ;;                  1    wreg      unsigned char 
  1902 ;; Registers used:
  1903 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1904 ;; Tracked objects:
  1905 ;;		On entry : 0/0
  1906 ;;		On exit  : 0/0
  1907 ;;		Unchanged: 0/0
  1908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1909 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1911 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1912 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1913 ;;Total ram usage:       10 bytes
  1914 ;; Hardware stack levels used: 1
  1915 ;; This function calls:
  1916 ;;		Nothing
  1917 ;; This function is called by:
  1918 ;;		_SVS_print
  1919 ;; This function uses a non-reentrant model
  1920 ;;
  1921                           
  1922                           	psect	text10
  1923   00F728                     __ptext10:
  1924                           	callstack 0
  1925   00F728                     _gpio_port_high_nibble_write_logic:
  1926                           	callstack 28
  1927   00F728                     
  1928                           ;MCAL_layer/GPIO/GPIO.c: 333:     if(pin_config == ((void*)0)){
  1929   00F728  5033               	movf	gpio_port_high_nibble_write_logic@pin_config^0,w,c
  1930   00F72A  1034               	iorwf	(gpio_port_high_nibble_write_logic@pin_config+1)^0,w,c
  1931   00F72C  A4D8               	btfss	status,2,c
  1932   00F72E  EF9B  F07B         	goto	u831
  1933   00F732  EF9D  F07B         	goto	u830
  1934   00F736                     u831:
  1935   00F736  EF9F  F07B         	goto	l1568
  1936   00F73A                     u830:
  1937   00F73A                     
  1938                           ;MCAL_layer/GPIO/GPIO.c: 335:     }
  1939   00F73A  EFD5  F07B         	goto	l280
  1940   00F73E                     l1568:
  1941                           
  1942                           ;MCAL_layer/GPIO/GPIO.c: 337:         ((*((volatile uint8 *)(lat_registers[pin_config->p
      +                          ort]))) = (((*((volatile uint8 *)(lat_registers[pin_config->port])))&0x0F)|(data&0xF0)))
      +                          ;
  1943   00F73E  C033  FFD9         	movff	gpio_port_high_nibble_write_logic@pin_config,fsr2l
  1944   00F742  C034  FFDA         	movff	gpio_port_high_nibble_write_logic@pin_config+1,fsr2h
  1945   00F746  50DF               	movf	223,w,c
  1946   00F748  0B07               	andlw	7
  1947   00F74A  6E36               	movwf	??_gpio_port_high_nibble_write_logic^0,c
  1948   00F74C  5036               	movf	??_gpio_port_high_nibble_write_logic^0,w,c
  1949   00F74E  0D02               	mullw	2
  1950   00F750  0E01               	movlw	low _lat_registers
  1951   00F752  24F3               	addwf	243,w,c
  1952   00F754  6ED9               	movwf	fsr2l,c
  1953   00F756  0E00               	movlw	high _lat_registers
  1954   00F758  20F4               	addwfc	prodh,w,c
  1955   00F75A  6EDA               	movwf	fsr2h,c
  1956   00F75C  CFDE F037          	movff	postinc2,??_gpio_port_high_nibble_write_logic+1
  1957   00F760  CFDD F038          	movff	postdec2,??_gpio_port_high_nibble_write_logic+2
  1958   00F764  C037  FFD9         	movff	??_gpio_port_high_nibble_write_logic+1,fsr2l
  1959   00F768  C038  FFDA         	movff	??_gpio_port_high_nibble_write_logic+2,fsr2h
  1960   00F76C  C035  F039         	movff	gpio_port_high_nibble_write_logic@data,??_gpio_port_high_nibble_write_logic+3
  1961   00F770  0EF0               	movlw	240
  1962   00F772  1639               	andwf	(??_gpio_port_high_nibble_write_logic+3)^0,f,c
  1963   00F774  C033  FFE1         	movff	gpio_port_high_nibble_write_logic@pin_config,fsr1l
  1964   00F778  C034  FFE2         	movff	gpio_port_high_nibble_write_logic@pin_config+1,fsr1h
  1965   00F77C  50E7               	movf	231,w,c
  1966   00F77E  0B07               	andlw	7
  1967   00F780  6E3A               	movwf	(??_gpio_port_high_nibble_write_logic+4)^0,c
  1968   00F782  503A               	movf	(??_gpio_port_high_nibble_write_logic+4)^0,w,c
  1969   00F784  0D02               	mullw	2
  1970   00F786  0E01               	movlw	low _lat_registers
  1971   00F788  24F3               	addwf	243,w,c
  1972   00F78A  6EE1               	movwf	fsr1l,c
  1973   00F78C  0E00               	movlw	high _lat_registers
  1974   00F78E  20F4               	addwfc	prodh,w,c
  1975   00F790  6EE2               	movwf	fsr1h,c
  1976   00F792  CFE6 F03B          	movff	postinc1,??_gpio_port_high_nibble_write_logic+5
  1977   00F796  CFE5 F03C          	movff	postdec1,??_gpio_port_high_nibble_write_logic+6
  1978   00F79A  C03B  FFE1         	movff	??_gpio_port_high_nibble_write_logic+5,fsr1l
  1979   00F79E  C03C  FFE2         	movff	??_gpio_port_high_nibble_write_logic+6,fsr1h
  1980   00F7A2  50E7               	movf	indf1,w,c
  1981   00F7A4  0B0F               	andlw	15
  1982   00F7A6  1039               	iorwf	(??_gpio_port_high_nibble_write_logic+3)^0,w,c
  1983   00F7A8  6EDF               	movwf	indf2,c
  1984   00F7AA                     l280:
  1985   00F7AA  0012               	return		;funcret
  1986   00F7AC                     __end_of_gpio_port_high_nibble_write_logic:
  1987                           	callstack 0
  1988   000000                     
  1989                           	psect	rparam
  1990   000000                     
  1991                           	psect	idloc
  1992                           
  1993                           ;Config register IDLOC0 @ 0x200000
  1994                           ;	unspecified, using default values
  1995   200000                     	org	2097152
  1996   200000  FF                 	db	255
  1997                           
  1998                           ;Config register IDLOC1 @ 0x200001
  1999                           ;	unspecified, using default values
  2000   200001                     	org	2097153
  2001   200001  FF                 	db	255
  2002                           
  2003                           ;Config register IDLOC2 @ 0x200002
  2004                           ;	unspecified, using default values
  2005   200002                     	org	2097154
  2006   200002  FF                 	db	255
  2007                           
  2008                           ;Config register IDLOC3 @ 0x200003
  2009                           ;	unspecified, using default values
  2010   200003                     	org	2097155
  2011   200003  FF                 	db	255
  2012                           
  2013                           ;Config register IDLOC4 @ 0x200004
  2014                           ;	unspecified, using default values
  2015   200004                     	org	2097156
  2016   200004  FF                 	db	255
  2017                           
  2018                           ;Config register IDLOC5 @ 0x200005
  2019                           ;	unspecified, using default values
  2020   200005                     	org	2097157
  2021   200005  FF                 	db	255
  2022                           
  2023                           ;Config register IDLOC6 @ 0x200006
  2024                           ;	unspecified, using default values
  2025   200006                     	org	2097158
  2026   200006  FF                 	db	255
  2027                           
  2028                           ;Config register IDLOC7 @ 0x200007
  2029                           ;	unspecified, using default values
  2030   200007                     	org	2097159
  2031   200007  FF                 	db	255
  2032                           
  2033                           	psect	config
  2034                           
  2035                           ; Padding undefined space
  2036   300000                     	org	3145728
  2037   300000  FF                 	db	255
  2038                           
  2039                           ;Config register CONFIG1H @ 0x300001
  2040                           ;	Oscillator Selection bits
  2041                           ;	OSC = HS, HS oscillator
  2042                           ;	Fail-Safe Clock Monitor Enable bit
  2043                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2044                           ;	Internal/External Oscillator Switchover bit
  2045                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2046   300001                     	org	3145729
  2047   300001  02                 	db	2
  2048                           
  2049                           ;Config register CONFIG2L @ 0x300002
  2050                           ;	Power-up Timer Enable bit
  2051                           ;	PWRT = OFF, PWRT disabled
  2052                           ;	Brown-out Reset Enable bits
  2053                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2054                           ;	Brown Out Reset Voltage bits
  2055                           ;	BORV = 1, 
  2056   300002                     	org	3145730
  2057   300002  09                 	db	9
  2058                           
  2059                           ;Config register CONFIG2H @ 0x300003
  2060                           ;	Watchdog Timer Enable bit
  2061                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2062                           ;	Watchdog Timer Postscale Select bits
  2063                           ;	WDTPS = 32768, 1:32768
  2064   300003                     	org	3145731
  2065   300003  1E                 	db	30
  2066                           
  2067                           ; Padding undefined space
  2068   300004                     	org	3145732
  2069   300004  FF                 	db	255
  2070                           
  2071                           ;Config register CONFIG3H @ 0x300005
  2072                           ;	CCP2 MUX bit
  2073                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2074                           ;	PORTB A/D Enable bit
  2075                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2076                           ;	Low-Power Timer1 Oscillator Enable bit
  2077                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2078                           ;	MCLR Pin Enable bit
  2079                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2080   300005                     	org	3145733
  2081   300005  81                 	db	129
  2082                           
  2083                           ;Config register CONFIG4L @ 0x300006
  2084                           ;	Stack Full/Underflow Reset Enable bit
  2085                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2086                           ;	Single-Supply ICSP Enable bit
  2087                           ;	LVP = OFF, Single-Supply ICSP disabled
  2088                           ;	Extended Instruction Set Enable bit
  2089                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2090                           ;	Background Debugger Enable bit
  2091                           ;	DEBUG = 0x1, unprogrammed default
  2092   300006                     	org	3145734
  2093   300006  81                 	db	129
  2094                           
  2095                           ; Padding undefined space
  2096   300007                     	org	3145735
  2097   300007  FF                 	db	255
  2098                           
  2099                           ;Config register CONFIG5L @ 0x300008
  2100                           ;	Code Protection bit
  2101                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2102                           ;	Code Protection bit
  2103                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2104                           ;	Code Protection bit
  2105                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2106                           ;	Code Protection bit
  2107                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2108   300008                     	org	3145736
  2109   300008  0F                 	db	15
  2110                           
  2111                           ;Config register CONFIG5H @ 0x300009
  2112                           ;	Boot Block Code Protection bit
  2113                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2114                           ;	Data EEPROM Code Protection bit
  2115                           ;	CPD = OFF, Data EEPROM not code-protected
  2116   300009                     	org	3145737
  2117   300009  C0                 	db	192
  2118                           
  2119                           ;Config register CONFIG6L @ 0x30000A
  2120                           ;	Write Protection bit
  2121                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2122                           ;	Write Protection bit
  2123                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2124                           ;	Write Protection bit
  2125                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2126                           ;	Write Protection bit
  2127                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2128   30000A                     	org	3145738
  2129   30000A  0F                 	db	15
  2130                           
  2131                           ;Config register CONFIG6H @ 0x30000B
  2132                           ;	Configuration Register Write Protection bit
  2133                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2134                           ;	Boot Block Write Protection bit
  2135                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2136                           ;	Data EEPROM Write Protection bit
  2137                           ;	WRTD = OFF, Data EEPROM not write-protected
  2138   30000B                     	org	3145739
  2139   30000B  E0                 	db	224
  2140                           
  2141                           ;Config register CONFIG7L @ 0x30000C
  2142                           ;	Table Read Protection bit
  2143                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2144                           ;	Table Read Protection bit
  2145                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2146                           ;	Table Read Protection bit
  2147                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2148                           ;	Table Read Protection bit
  2149                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2150   30000C                     	org	3145740
  2151   30000C  0F                 	db	15
  2152                           
  2153                           ;Config register CONFIG7H @ 0x30000D
  2154                           ;	Boot Block Table Read Protection bit
  2155                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2156   30000D                     	org	3145741
  2157   30000D  40                 	db	64
  2158                           tosu	equ	0xFFF
  2159                           tosh	equ	0xFFE
  2160                           tosl	equ	0xFFD
  2161                           stkptr	equ	0xFFC
  2162                           pclatu	equ	0xFFB
  2163                           pclath	equ	0xFFA
  2164                           pcl	equ	0xFF9
  2165                           tblptru	equ	0xFF8
  2166                           tblptrh	equ	0xFF7
  2167                           tblptrl	equ	0xFF6
  2168                           tablat	equ	0xFF5
  2169                           prodh	equ	0xFF4
  2170                           prodl	equ	0xFF3
  2171                           indf0	equ	0xFEF
  2172                           postinc0	equ	0xFEE
  2173                           postdec0	equ	0xFED
  2174                           preinc0	equ	0xFEC
  2175                           plusw0	equ	0xFEB
  2176                           fsr0h	equ	0xFEA
  2177                           fsr0l	equ	0xFE9
  2178                           wreg	equ	0xFE8
  2179                           indf1	equ	0xFE7
  2180                           postinc1	equ	0xFE6
  2181                           postdec1	equ	0xFE5
  2182                           preinc1	equ	0xFE4
  2183                           plusw1	equ	0xFE3
  2184                           fsr1h	equ	0xFE2
  2185                           fsr1l	equ	0xFE1
  2186                           bsr	equ	0xFE0
  2187                           indf2	equ	0xFDF
  2188                           postinc2	equ	0xFDE
  2189                           postdec2	equ	0xFDD
  2190                           preinc2	equ	0xFDC
  2191                           plusw2	equ	0xFDB
  2192                           fsr2h	equ	0xFDA
  2193                           fsr2l	equ	0xFD9
  2194                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        50
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     39      94
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    gpio_port_high_nibble_write_logic@pin_config	PTR struct . size(2) Largest target is 1
		 -> SVS_print@temp(COMRAM[1]), 

    gpio_port_high_nibble_direction_initialize@pin_config	PTR struct . size(2) Largest target is 1
		 -> SVS_initialize@temp(COMRAM[1]), 

    gpio_port_low_nibble_write_logic@pin_config	PTR struct . size(2) Largest target is 1
		 -> SVS_print@temp(COMRAM[1]), 

    gpio_port_low_nibble_direction_initialize@pin_config	PTR struct . size(2) Largest target is 1
		 -> SVS_initialize@temp(COMRAM[1]), 

    gpio_pin_write_logic@pin_config	PTR struct . size(2) Largest target is 1
		 -> led_turn_off@temp(COMRAM[1]), led_turn_on@temp(COMRAM[1]), led_intialize@temp(COMRAM[1]), SVS_print_pov@temp(COMRAM[1]), 

    gpio_pin_direction_initialize@pin_config	PTR const struct . size(2) Largest target is 1
		 -> led_intialize@temp(COMRAM[1]), SVS_initialize@temp(COMRAM[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATB(BITBIGSFRlh[1]), 
		 -> LATA(BITBIGSFRll[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), 
		 -> PORTA(BITBIGSFRll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRhl[1]), TRISD(BITBIGSFRhl[1]), TRISC(BITBIGSFRhl[1]), TRISB(BITBIGSFRhl[1]), 
		 -> TRISA(BITBIGSFRll[1]), 

    SVS_print_pov@data	PTR unsigned char  size(2) Largest target is 6
		 -> main@data(COMRAM[6]), 

    SVS_print_pov@Seven_SEG	PTR struct . size(2) Largest target is 14
		 -> seven_seg(COMRAM[14]), 

    SVS_print@Seven_SEG	PTR const struct . size(2) Largest target is 14
		 -> seven_seg(COMRAM[14]), 

    SVS_initialize@Seven_SEG	PTR const struct . size(2) Largest target is 14
		 -> seven_seg(COMRAM[14]), 


Critical Paths under _main in COMRAM

    _main->_SVS_print_pov
    _appliction_intialize->_SVS_initialize
    _SVS_initialize->_gpio_port_high_nibble_direction_initialize
    _SVS_initialize->_gpio_port_low_nibble_direction_initialize
    _SVS_print_pov->_SVS_print
    _SVS_print->_gpio_port_high_nibble_write_logic
    _SVS_print->_gpio_port_low_nibble_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    5992
                                             31 COMRAM     8     8      0
                      _SVS_print_pov
               _appliction_intialize
 ---------------------------------------------------------------------------------
 (1) _appliction_intialize                                 0     0      0    1716
                     _SVS_initialize
 ---------------------------------------------------------------------------------
 (2) _SVS_initialize                                      11     9      2    1716
                                             10 COMRAM    10     8      2
      _gpio_pin_direction_initialize
_gpio_port_high_nibble_direction_ini
_gpio_port_low_nibble_direction_init
 ---------------------------------------------------------------------------------
 (3) _gpio_port_low_nibble_direction_initialize           11     8      3     248
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (3) _gpio_port_high_nibble_direction_initialize          11     8      3     248
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_initialize                        9     7      2     831
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (1) _SVS_print_pov                                       17    13      4    4069
                                             15 COMRAM    16    12      4
                          _SVS_print
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                10     7      3    2481
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (2) _SVS_print                                            6     3      3     838
                                             10 COMRAM     5     2      3
  _gpio_port_high_nibble_write_logic
   _gpio_port_low_nibble_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_port_low_nibble_write_logic                    11     8      3     248
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (3) _gpio_port_high_nibble_write_logic                   11     8      3     248
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SVS_print_pov
     _SVS_print
       _gpio_port_high_nibble_write_logic
       _gpio_port_low_nibble_write_logic
     _gpio_pin_write_logic
   _appliction_intialize
     _SVS_initialize
       _gpio_pin_direction_initialize
       _gpio_port_high_nibble_direction_initialize
       _gpio_port_low_nibble_direction_initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      41        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     27      5E       1       74.0%
BITBIGSFRhh         3D      0       0      37        0.0%
BITBIGSFRhl         2A      0       0      38        0.0%
BITBIGSFRlh          4      0       0      39        0.0%
BITBIGSFRll          4      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5E      26        0.0%
DATA                 0      0      5E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Mar 11 22:15:23 2023

                                                  l30 F9C6  
                                                  l22 FCA6  
                                                  l26 F9C6  
                                                  l42 FFFE  
                                      _SVS_initialize FB78  
                                                 l214 FB76  
                                                 l312 F6C0  
                                                 l270 F82E  
                                                 l280 F7AA  
                                                 l192 FDEC  
                                                 l265 F936  
                                                 l275 F8B2  
                                                 l197 FDEE  
                                                 u800 FD94  
                                                 u801 FD90  
                                                 u730 F8C6  
                                                 u731 F8C2  
                                                 u820 F7BE  
                                                 u900 F9B2  
                                                 u740 F842  
                                                 u821 F7BA  
                                                 u901 F9AE  
                                                 u741 F83E  
                                                 u830 F73A  
                                                 u910 FA70  
                                                 u814 FDB4  
                                                 u750 FCBE  
                                                 u831 F736  
                                                 u911 FA6C  
                                                 u815 FDB0  
                                                 u751 FCBA  
                                                 u760 FCE0  
                                                 u840 FB8A  
                                                 u761 FCDC  
                                                 u841 FB86  
                                                 u770 FCFE  
                                                 u850 FBC2  
                                                 u771 FCFA  
                                                 u851 FBBE  
                                                 u924 FA98  
                                                 u940 FE02  
                                                 u780 FD1C  
                                                 u860 FBF2  
                                                 u925 FA94  
                                                 u941 FDFE  
                                                 u781 FD18  
                                                 u861 FBEE  
                                                 u934 FAFE  
                                                 u950 FE96  
                                                 u870 FCA6  
                                                 u935 FAFA  
                                                 u951 FE92  
                                                 u871 FCA2  
                                                 u880 F94A  
                                                 u960 FEAA  
                                                 u881 F946  
                                                 u961 FEA6  
                                                 u890 F982  
                                                 u970 FFEC  
                                                 u794 FD3C  
                                                 u891 F97E  
                                                 u971 FFE8  
                                                 u795 FD38  
                                                 u980 FFFE  
                                                 u981 FFFA  
                                                 _ret 005A  
                                                 prod 000FF3  
                                                 wreg 000FE8  
                                                l1510 F8B4  
                                                l1520 F830  
                                                l1512 F8B4  
                                                l1600 FC86  
                                                l1610 F94E  
                                                l1530 FCA8  
                                                l1522 F830  
                                                l1514 F8C6  
                                                l1602 FC8A  
                                                l1612 F964  
                                                l1604 F938  
                                                l1700 FFEE  
                                                l1540 FD06  
                                                l1532 FCAC  
                                                l1524 F842  
                                                l1516 F8CA  
                                                l1614 F982  
                                                l1606 F938  
                                                l1630 FAD0  
                                                l1622 FA5A  
                                                l1542 FD1C  
                                                l1534 FCBE  
                                                l1526 F846  
                                                l1702 F6AC  
                                                l1552 F7AC  
                                                l1616 F996  
                                                l1608 F94A  
                                                l1632 FADE  
                                                l1640 FB4A  
                                                l1624 FA5E  
                                                l1544 FD7E  
                                                l1536 FCE0  
                                                l1704 F6B4  
                                                l1562 F728  
                                                l1554 F7AC  
                                                l1618 F9B2  
                                                l1634 FB3C  
                                                l1642 FB74  
                                                l1626 FA70  
                                                l1650 FDF0  
                                                l1546 FD94  
                                                l1538 FCFE  
                                                l1564 F728  
                                                l1556 F7BE  
                                                l1628 FA78  
                                                l1652 FDF0  
                                                l1580 FBA4  
                                                l1572 FB78  
                                                l1566 F73A  
                                                l1558 F7C2  
                                                l1670 FE96  
                                                l1662 FE0A  
                                                l1654 FE02  
                                                l1590 FC0A  
                                                l1582 FBC2  
                                                l1574 FB78  
                                                l1568 F73E  
                                                l1680 FF08  
                                                l1664 FE74  
                                                l1656 FE06  
                                                l1584 FBD6  
                                                l1576 FB8A  
                                                l1690 FFAE  
                                                l1682 FF18  
                                                l1666 FE84  
                                                l1586 FBF2  
                                                l1578 FB8E  
                                                l1684 FF4A  
                                                l1676 FE9A  
                                                l1668 FE86  
                                                l1596 FC0C  
                                                l1588 FC02  
                                                l1686 FF82  
                                                l1678 FEAA  
                                                l1598 FC7A  
                                                l1870 F9C8  
                                                l1696 FFBE  
                                                l1688 FF92  
                                                l1880 F9E2  
                                                l1872 F9CC  
                                                l1698 FFEC  
                                                l1890 FA42  
                                                l1882 FA0C  
                                                l1874 F9DE  
                                                l1884 FA1C  
                                                l1886 FA30  
                                                l1896 FB5E  
                                                l1888 FA40  
                                                u1200 FA52  
                                                u1201 FA4E  
                                                u1217 FA36  
                                                u1181 F9D6  
                                                _LATA 000F89  
                                                u1190 FA0C  
                                                _LATB 000F8A  
                                                u1191 FA08  
                                                _LATC 000F8B  
                                                _LATD 000F8C  
                                                _LATE 000F8D  
                                         main@counter 0059  
                                                _main F9C8  
                                                fsr1h 000FE2  
                                                fsr2h 000FDA  
                                                indf1 000FE7  
                                                indf2 000FDF  
                                                fsr1l 000FE1  
                                                fsr2l 000FD9  
                                                prodh 000FF4  
                                                prodl 000FF3  
                                                start 0000  
                                        ___param_bank 000000  
                                _gpio_pin_write_logic FA5A  
                               __end_of_SVS_print_pov 0000  
                              __end_of_SVS_initialize FCA8  
                                               ?_main 0033  
                                               _PORTA 000F80  
                                               _PORTB 000F81  
                                               _PORTC 000F82  
                                               _PORTD 000F83  
                                               _PORTE 000F84  
                                               _TRISA 000F92  
                                               _TRISB 000F93  
                                               _TRISC 000F94  
                                               _TRISD 000F95  
                                               _TRISE 000F96  
                        __end_of_appliction_intialize F6C2  
                                               tablat 000FF5  
                                               plusw1 000FE3  
                                               plusw2 000FDB  
                                               status 000FD8  
                      ?_gpio_pin_direction_initialize 0033  
                                     __initialization F6F4  
                                        __end_of_main FA5A  
                               ?_gpio_pin_write_logic 0033  
                                     ?_SVS_initialize 003D  
                                       _lat_registers 0001  
                                              ??_main 0052  
                                       __activetblptr 000002  
                                    led_turn_on@F2895 005D  
                                              _ADCON0 000FC2  
                                              _ADCON1 000FC1  
   __end_of_gpio_port_low_nibble_direction_initialize F938  
         ??_gpio_port_low_nibble_direction_initialize 0036  
          ?_gpio_port_low_nibble_direction_initialize 0033  
           _gpio_port_low_nibble_direction_initialize F8B4  
                                              isa$std 000001  
  __end_of_gpio_port_high_nibble_direction_initialize F8B4  
        ??_gpio_port_high_nibble_direction_initialize 0036  
         ?_gpio_port_high_nibble_direction_initialize 0033  
          _gpio_port_high_nibble_direction_initialize F830  
                                        __pdataCOMRAM 0001  
                                              tblptrh 000FF7  
                                              tblptrl 000FF6  
                                              tblptru 000FF8  
                                          __accesstop 0080  
                             __end_of__initialization F71E  
                                   __end_of_SVS_print F9C8  
                                       ___rparam_used 000001  
      gpio_port_high_nibble_direction_initialize@data 0035  
       gpio_port_low_nibble_direction_initialize@data 0035  
                              ??_gpio_pin_write_logic 0036  
                                      __pcstackCOMRAM 0033  
                                  SVS_initialize@temp 0046  
                                _appliction_intialize F6AC  
                                  SVS_print@Seven_SEG 003D  
         gpio_port_high_nibble_write_logic@pin_config 0033  
                               ?_appliction_intialize 0033  
                                   led_turn_off@F2900 005C  
                                     led_toggle@F2905 005B  
                                       SVS_print@data 003F  
                                       SVS_print@temp 0041  
                                      _tris_registers 0015  
                                             __Hparam 0000  
                                    ??_SVS_initialize 003F  
                                             __Lparam 0000  
                                             __pcinit F6F4  
                                             __ramtop 1000  
                                             __ptext0 F9C8  
                                             __ptext1 F6AC  
                                             __ptext2 FB78  
                                             __ptext3 F8B4  
                                             __ptext4 F830  
                                             __ptext5 FCA8  
                                             __ptext6 FDF0  
                                             __ptext7 FA5A  
                                             __ptext8 F938  
                                             __ptext9 F7AC  
                     ??_gpio_pin_direction_initialize 0035  
                                end_of_initialization F71E  
                                       __Lmediumconst 0000  
                          SVS_print_pov@svs_counter_2 004F  
                              ??_appliction_intialize 0047  
                                             postdec1 000FE5  
                                             postdec2 000FDD  
                                             postinc0 000FEE  
                                             postinc1 000FE6  
                                             postinc2 000FDE  
          gpio_port_low_nibble_write_logic@pin_config 0033  
                                           _SVS_print F938  
                                       _SVS_print_pov FDF0  
                                       __pidataCOMRAM F6C2  
                                 start_initialization F6F4  
                            SVS_print_pov@svs_counter 0051  
               __end_of_gpio_pin_direction_initialize FDF0  
                       _gpio_pin_direction_initialize FCA8  
                             SVS_initialize@Seven_SEG 003D  
                                          ?_SVS_print 003D  
                                      ?_SVS_print_pov 0042  
                           SVS_initialize@svs_counter 0044  
                                         __pbssCOMRAM 005A  
                gpio_port_low_nibble_write_logic@data 0035  
            __end_of_gpio_port_low_nibble_write_logic F830  
                  ??_gpio_port_low_nibble_write_logic 0036  
                   ?_gpio_port_low_nibble_write_logic 0033  
                    _gpio_port_low_nibble_write_logic F7AC  
                      gpio_pin_write_logic@pin_config 0033  
                           gpio_pin_write_logic@logic 0035  
                                      SVS_print_pov@l 004B  
                                         ??_SVS_print 0040  
                                     ??_SVS_print_pov 0046  
                                           _seven_seg 0025  
                                           main@F2986 001F  
                    gpio_pin_direction_initialize@ret 003B  
gpio_port_high_nibble_direction_initialize@pin_config 0033  
 gpio_port_low_nibble_direction_initialize@pin_config 0033  
             gpio_pin_direction_initialize@pin_config 0033  
                             gpio_pin_write_logic@ret 003C  
                                           copy_data0 F708  
                                            __Hrparam 0000  
                                            __Lrparam 0000  
                                  led_intialize@F2890 005E  
                                            __ptext10 F728  
                                   SVS_print_pov@data 0044  
                                   SVS_print_pov@temp 0050  
                                            isa$xinst 000000  
                                            main@data 0053  
                        __end_of_gpio_pin_write_logic FB78  
               gpio_port_high_nibble_write_logic@data 0035  
                                      _port_registers 000B  
                              SVS_print_pov@Seven_SEG 0042  
           __end_of_gpio_port_high_nibble_write_logic F7AC  
                 ??_gpio_port_high_nibble_write_logic 0036  
                  ?_gpio_port_high_nibble_write_logic 0033  
                   _gpio_port_high_nibble_write_logic F728  
