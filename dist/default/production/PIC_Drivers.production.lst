

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Mar 12 19:38:04 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    21   000000                     
    22                           ; Version 2.40
    23                           ; Generated 17/11/2021 GMT
    24                           ; 
    25                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F4620 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57   000000                     
    58                           	psect	idataCOMRAM
    59   00F946                     __pidataCOMRAM:
    60                           	callstack 0
    61                           
    62                           ;initializer for _values
    63   00F946  37                 	db	55
    64   00F947  38                 	db	56
    65   00F948  39                 	db	57
    66   00F949  2F                 	db	47
    67   00F94A  34                 	db	52
    68   00F94B  35                 	db	53
    69   00F94C  36                 	db	54
    70   00F94D  2A                 	db	42
    71   00F94E  31                 	db	49
    72   00F94F  32                 	db	50
    73   00F950  33                 	db	51
    74   00F951  2D                 	db	45
    75   00F952  43                 	db	67
    76   00F953  30                 	db	48
    77   00F954  3D                 	db	61
    78   00F955  2B                 	db	43
    79                           
    80                           ;initializer for _lat_registers
    81   00F956  89                 	db	137
    82   00F957  0F                 	db	15
    83   00F958  8A                 	db	138
    84   00F959  0F                 	db	15
    85   00F95A  8B                 	db	139
    86   00F95B  0F                 	db	15
    87   00F95C  8C                 	db	140
    88   00F95D  0F                 	db	15
    89   00F95E  8D                 	db	141
    90   00F95F  0F                 	db	15
    91                           
    92                           ;initializer for _port_registers
    93   00F960  80                 	db	128
    94   00F961  0F                 	db	15
    95   00F962  81                 	db	129
    96   00F963  0F                 	db	15
    97   00F964  82                 	db	130
    98   00F965  0F                 	db	15
    99   00F966  83                 	db	131
   100   00F967  0F                 	db	15
   101   00F968  84                 	db	132
   102   00F969  0F                 	db	15
   103                           
   104                           ;initializer for _tris_registers
   105   00F96A  92                 	db	146
   106   00F96B  0F                 	db	15
   107   00F96C  93                 	db	147
   108   00F96D  0F                 	db	15
   109   00F96E  94                 	db	148
   110   00F96F  0F                 	db	15
   111   00F970  95                 	db	149
   112   00F971  0F                 	db	15
   113   00F972  96                 	db	150
   114   00F973  0F                 	db	15
   115                           
   116                           ;initializer for _keypad
   117   00F974  03                 	db	3
   118   00F975  00                 	db	0
   119   00F976  03                 	db	3
   120   00F977  01                 	db	1
   121   00F978  03                 	db	3
   122   00F979  02                 	db	2
   123   00F97A  03                 	db	3
   124   00F97B  03                 	db	3
   125   00F97C  03                 	db	3
   126   00F97D  04                 	db	4
   127   00F97E  03                 	db	3
   128   00F97F  05                 	db	5
   129   00F980  03                 	db	3
   130   00F981  06                 	db	6
   131   00F982  03                 	db	3
   132   00F983  07                 	db	7
   133   000000                     _LATA	set	3977
   134   000000                     _PORTE	set	3972
   135   000000                     _PORTD	set	3971
   136   000000                     _PORTC	set	3970
   137   000000                     _PORTB	set	3969
   138   000000                     _PORTA	set	3968
   139   000000                     _TRISA	set	3986
   140   000000                     _ADCON1	set	4033
   141   000000                     _ADCON0	set	4034
   142   000000                     _TRISE	set	3990
   143   000000                     _TRISD	set	3989
   144   000000                     _TRISC	set	3988
   145   000000                     _TRISB	set	3987
   146   000000                     _LATE	set	3981
   147   000000                     _LATD	set	3980
   148   000000                     _LATC	set	3979
   149   000000                     _LATB	set	3978
   150                           
   151                           ; #config settings
   152                           
   153                           	psect	cinit
   154   00F910                     __pcinit:
   155                           	callstack 0
   156   00F910                     start_initialization:
   157                           	callstack 0
   158   00F910                     __initialization:
   159                           	callstack 0
   160                           
   161                           ; Initialize objects allocated to COMRAM (62 bytes)
   162                           ; load TBLPTR registers with __pidataCOMRAM
   163   00F910  0E46               	movlw	low __pidataCOMRAM
   164   00F912  6EF6               	movwf	tblptrl,c
   165   00F914  0EF9               	movlw	high __pidataCOMRAM
   166   00F916  6EF7               	movwf	tblptrh,c
   167   00F918  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   168   00F91A  6EF8               	movwf	tblptru,c
   169   00F91C  EE00  F001         	lfsr	0,__pdataCOMRAM
   170   00F920  EE10 F03E          	lfsr	1,62
   171   00F924                     copy_data0:
   172   00F924  0009               	tblrd		*+
   173   00F926  CFF5 FFEE          	movff	tablat,postinc0
   174   00F92A  50E5               	movf	postdec1,w,c
   175   00F92C  50E1               	movf	fsr1l,w,c
   176   00F92E  E1FA               	bnz	copy_data0
   177                           
   178                           ; Clear objects allocated to COMRAM (6 bytes)
   179   00F930  6A5E               	clrf	(__pbssCOMRAM+5)& (0+255),c
   180   00F932  6A5D               	clrf	(__pbssCOMRAM+4)& (0+255),c
   181   00F934  6A5C               	clrf	(__pbssCOMRAM+3)& (0+255),c
   182   00F936  6A5B               	clrf	(__pbssCOMRAM+2)& (0+255),c
   183   00F938  6A5A               	clrf	(__pbssCOMRAM+1)& (0+255),c
   184   00F93A  6A59               	clrf	__pbssCOMRAM& (0+255),c
   185   00F93C                     end_of_initialization:
   186                           	callstack 0
   187   00F93C                     __end_of__initialization:
   188                           	callstack 0
   189   00F93C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   190   00F93E  6EF8               	movwf	tblptru,c
   191   00F940  0100               	movlb	0
   192   00F942  EFC2  F07C         	goto	_main	;jump to C main() function
   193                           
   194                           	psect	bssCOMRAM
   195   000059                     __pbssCOMRAM:
   196                           	callstack 0
   197   000059                     _ret:
   198                           	callstack 0
   199   000059                     	ds	1
   200   00005A                     led_toggle@F2905:
   201                           	callstack 0
   202   00005A                     	ds	1
   203   00005B                     led_turn_off@F2900:
   204                           	callstack 0
   205   00005B                     	ds	1
   206   00005C                     led_turn_on@F2895:
   207                           	callstack 0
   208   00005C                     	ds	1
   209   00005D                     led_intialize@F2890:
   210                           	callstack 0
   211   00005D                     	ds	1
   212   00005E                     _value:
   213                           	callstack 0
   214   00005E                     	ds	1
   215                           
   216                           	psect	dataCOMRAM
   217   000001                     __pdataCOMRAM:
   218                           	callstack 0
   219   000001                     _values:
   220                           	callstack 0
   221   000001                     	ds	16
   222   000011                     _lat_registers:
   223                           	callstack 0
   224   000011                     	ds	10
   225   00001B                     _port_registers:
   226                           	callstack 0
   227   00001B                     	ds	10
   228   000025                     _tris_registers:
   229                           	callstack 0
   230   000025                     	ds	10
   231   00002F                     _keypad:
   232                           	callstack 0
   233   00002F                     	ds	16
   234                           
   235                           	psect	cstackCOMRAM
   236   00003F                     __pcstackCOMRAM:
   237                           	callstack 0
   238   00003F                     gpio_pin_direction_initialize@pin_config:
   239                           	callstack 0
   240   00003F                     gpio_pin_write_logic@pin_config:
   241                           	callstack 0
   242   00003F                     gpio_pin_read_logic@pin_config:
   243                           	callstack 0
   244                           
   245                           ; 2 bytes @ 0x0
   246   00003F                     	ds	2
   247   000041                     ??_gpio_pin_direction_initialize:
   248   000041                     gpio_pin_write_logic@logic:
   249                           	callstack 0
   250   000041                     gpio_pin_read_logic@logic:
   251                           	callstack 0
   252                           
   253                           ; 2 bytes @ 0x2
   254   000041                     	ds	1
   255   000042                     ??_gpio_pin_write_logic:
   256                           
   257                           ; 1 bytes @ 0x3
   258   000042                     	ds	1
   259   000043                     ??_gpio_pin_read_logic:
   260                           
   261                           ; 1 bytes @ 0x4
   262   000043                     	ds	4
   263   000047                     gpio_pin_direction_initialize@ret:
   264                           	callstack 0
   265                           
   266                           ; 1 bytes @ 0x8
   267   000047                     	ds	1
   268   000048                     gpio_pin_write_logic@ret:
   269                           	callstack 0
   270   000048                     keypad_initialize@keypad_config:
   271                           	callstack 0
   272                           
   273                           ; 2 bytes @ 0x9
   274   000048                     	ds	1
   275   000049                     keypad_get_value@keypad_config:
   276                           	callstack 0
   277                           
   278                           ; 2 bytes @ 0xA
   279   000049                     	ds	1
   280   00004A                     ??_keypad_initialize:
   281                           
   282                           ; 1 bytes @ 0xB
   283   00004A                     	ds	1
   284   00004B                     keypad_get_value@value:
   285                           	callstack 0
   286                           
   287                           ; 2 bytes @ 0xC
   288   00004B                     	ds	2
   289   00004D                     ??_keypad_get_value:
   290                           
   291                           ; 1 bytes @ 0xE
   292   00004D                     	ds	2
   293   00004F                     keypad_initialize@counter:
   294                           	callstack 0
   295                           
   296                           ; 1 bytes @ 0x10
   297   00004F                     	ds	1
   298   000050                     keypad_initialize@counter_644:
   299                           	callstack 0
   300                           
   301                           ; 1 bytes @ 0x11
   302   000050                     	ds	1
   303   000051                     keypad_initialize@temp:
   304                           	callstack 0
   305                           
   306                           ; 1 bytes @ 0x12
   307   000051                     	ds	1
   308   000052                     keypad_get_value@temp_col:
   309                           	callstack 0
   310                           
   311                           ; 1 bytes @ 0x13
   312   000052                     	ds	1
   313   000053                     keypad_get_value@btn_state:
   314                           	callstack 0
   315                           
   316                           ; 1 bytes @ 0x14
   317   000053                     	ds	1
   318   000054                     keypad_get_value@temp_row:
   319                           	callstack 0
   320                           
   321                           ; 1 bytes @ 0x15
   322   000054                     	ds	1
   323   000055                     keypad_get_value@counter_row:
   324                           	callstack 0
   325                           
   326                           ; 1 bytes @ 0x16
   327   000055                     	ds	1
   328   000056                     keypad_get_value@counter_col:
   329                           	callstack 0
   330                           
   331                           ; 1 bytes @ 0x17
   332   000056                     	ds	1
   333   000057                     ??_main:
   334                           
   335                           ; 1 bytes @ 0x18
   336   000057                     	ds	2
   337                           
   338 ;;
   339 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   340 ;;
   341 ;; *************** function _main *****************
   342 ;; Defined at:
   343 ;;		line 114 in file "main.c"
   344 ;; Parameters:    Size  Location     Type
   345 ;;		None
   346 ;; Auto vars:     Size  Location     Type
   347 ;;		None
   348 ;; Return value:  Size  Location     Type
   349 ;;                  2  304[None  ] int 
   350 ;; Registers used:
   351 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   352 ;; Tracked objects:
   353 ;;		On entry : 0/0
   354 ;;		On exit  : 0/0
   355 ;;		Unchanged: 0/0
   356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   359 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   360 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   361 ;;Total ram usage:        2 bytes
   362 ;; Hardware stack levels required when called: 3
   363 ;; This function calls:
   364 ;;		_appliction_intialize
   365 ;;		_keypad_get_value
   366 ;; This function is called by:
   367 ;;		Startup code after reset
   368 ;; This function uses a non-reentrant model
   369 ;;
   370                           
   371                           	psect	text0
   372   00F984                     __ptext0:
   373                           	callstack 0
   374   00F984                     _main:
   375                           	callstack 28
   376   00F984                     
   377                           ;main.c: 120:     appliction_intialize();
   378   00F984  EC7D  F07C         	call	_appliction_intialize	;wreg free
   379   00F988                     l2033:
   380                           
   381                           ;main.c: 173:         keypad_get_value(&keypad, &value);
   382   00F988  0E2F               	movlw	low _keypad
   383   00F98A  6E49               	movwf	keypad_get_value@keypad_config^0,c
   384   00F98C  0E00               	movlw	high _keypad
   385   00F98E  6E4A               	movwf	(keypad_get_value@keypad_config+1)^0,c
   386   00F990  0E5E               	movlw	low _value
   387   00F992  6E4B               	movwf	keypad_get_value@value^0,c
   388   00F994  0E00               	movlw	high _value
   389   00F996  6E4C               	movwf	(keypad_get_value@value+1)^0,c
   390   00F998  EC31  F07F         	call	_keypad_get_value	;wreg free
   391   00F99C                     
   392                           ;main.c: 174:         if(value == values[0][0])
   393   00F99C  505E               	movf	_value^0,w,c
   394   00F99E  1801               	xorwf	_values^0,w,c
   395   00F9A0  A4D8               	btfss	status,2,c
   396   00F9A2  EFD5  F07C         	goto	u1351
   397   00F9A6  EFD7  F07C         	goto	u1350
   398   00F9AA                     u1351:
   399   00F9AA  EFE3  F07C         	goto	l2039
   400   00F9AE                     u1350:
   401   00F9AE                     
   402                           ;main.c: 175:             _delay((unsigned long)((700)*(16000000ul/4000.0)));
   403   00F9AE  0E0F               	movlw	15
   404   00F9B0  6E58               	movwf	(??_main+1)^0,c
   405   00F9B2  0E35               	movlw	53
   406   00F9B4  6E57               	movwf	??_main^0,c
   407   00F9B6  0E51               	movlw	81
   408   00F9B8                     u1387:
   409   00F9B8  2EE8               	decfsz	wreg,f,c
   410   00F9BA  D7FE               	bra	u1387
   411   00F9BC  2E57               	decfsz	??_main^0,f,c
   412   00F9BE  D7FC               	bra	u1387
   413   00F9C0  2E58               	decfsz	(??_main+1)^0,f,c
   414   00F9C2  D7FA               	bra	u1387
   415   00F9C4  F000               	nop	
   416   00F9C6                     l2039:
   417                           
   418                           ;main.c: 176:         if(value == values[0][1])
   419   00F9C6  505E               	movf	_value^0,w,c
   420   00F9C8  1802               	xorwf	(_values+1)^0,w,c
   421   00F9CA  A4D8               	btfss	status,2,c
   422   00F9CC  EFEA  F07C         	goto	u1361
   423   00F9D0  EFEC  F07C         	goto	u1360
   424   00F9D4                     u1361:
   425   00F9D4  EFF8  F07C         	goto	l2043
   426   00F9D8                     u1360:
   427   00F9D8                     
   428                           ;main.c: 177:             _delay((unsigned long)((800)*(16000000ul/4000.0)));
   429   00F9D8  0E11               	movlw	17
   430   00F9DA  6E58               	movwf	(??_main+1)^0,c
   431   00F9DC  0E3C               	movlw	60
   432   00F9DE  6E57               	movwf	??_main^0,c
   433   00F9E0  0ECB               	movlw	203
   434   00F9E2                     u1397:
   435   00F9E2  2EE8               	decfsz	wreg,f,c
   436   00F9E4  D7FE               	bra	u1397
   437   00F9E6  2E57               	decfsz	??_main^0,f,c
   438   00F9E8  D7FC               	bra	u1397
   439   00F9EA  2E58               	decfsz	(??_main+1)^0,f,c
   440   00F9EC  D7FA               	bra	u1397
   441   00F9EE  F000               	nop	
   442   00F9F0                     l2043:
   443                           
   444                           ;main.c: 178:         if(value == values[0][2])
   445   00F9F0  505E               	movf	_value^0,w,c
   446   00F9F2  1803               	xorwf	(_values+2)^0,w,c
   447   00F9F4  A4D8               	btfss	status,2,c
   448   00F9F6  EFFF  F07C         	goto	u1371
   449   00F9FA  EF01  F07D         	goto	u1370
   450   00F9FE                     u1371:
   451   00F9FE  EF0D  F07D         	goto	l2047
   452   00FA02                     u1370:
   453   00FA02                     
   454                           ;main.c: 179:             _delay((unsigned long)((2000)*(16000000ul/4000.0)));
   455   00FA02  0E29               	movlw	41
   456   00FA04  6E58               	movwf	(??_main+1)^0,c
   457   00FA06  0E96               	movlw	150
   458   00FA08  6E57               	movwf	??_main^0,c
   459   00FA0A  0E7F               	movlw	127
   460   00FA0C                     u1407:
   461   00FA0C  2EE8               	decfsz	wreg,f,c
   462   00FA0E  D7FE               	bra	u1407
   463   00FA10  2E57               	decfsz	??_main^0,f,c
   464   00FA12  D7FC               	bra	u1407
   465   00FA14  2E58               	decfsz	(??_main+1)^0,f,c
   466   00FA16  D7FA               	bra	u1407
   467   00FA18  F000               	nop	
   468   00FA1A                     l2047:
   469                           
   470                           ;main.c: 180:         value=0;
   471   00FA1A  0E00               	movlw	0
   472   00FA1C  6E5E               	movwf	_value^0,c
   473   00FA1E  EFC4  F07C         	goto	l2033
   474   00FA22  EF00  F000         	goto	start
   475   00FA26                     __end_of_main:
   476                           	callstack 0
   477                           
   478 ;; *************** function _keypad_get_value *****************
   479 ;; Defined at:
   480 ;;		line 37 in file "ECU_layer/KEYPAD/keypad.c"
   481 ;; Parameters:    Size  Location     Type
   482 ;;  keypad_confi    2   10[COMRAM] PTR const struct .
   483 ;;		 -> keypad(16), 
   484 ;;  value           2   12[COMRAM] PTR unsigned char 
   485 ;;		 -> value(1), 
   486 ;; Auto vars:     Size  Location     Type
   487 ;;  counter_col     1   23[COMRAM] unsigned char 
   488 ;;  counter_row     1   22[COMRAM] unsigned char 
   489 ;;  temp_row        1   21[COMRAM] struct .
   490 ;;  btn_state       1   20[COMRAM] enum E2798
   491 ;;  temp_col        1   19[COMRAM] struct .
   492 ;;  ret             1    0        unsigned char 
   493 ;; Return value:  Size  Location     Type
   494 ;;                  1    wreg      unsigned char 
   495 ;; Registers used:
   496 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   497 ;; Tracked objects:
   498 ;;		On entry : 0/0
   499 ;;		On exit  : 0/0
   500 ;;		Unchanged: 0/0
   501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   502 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   503 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   504 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   505 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   506 ;;Total ram usage:       14 bytes
   507 ;; Hardware stack levels used: 1
   508 ;; Hardware stack levels required when called: 1
   509 ;; This function calls:
   510 ;;		_gpio_pin_read_logic
   511 ;;		_gpio_pin_write_logic
   512 ;; This function is called by:
   513 ;;		_main
   514 ;; This function uses a non-reentrant model
   515 ;;
   516                           
   517                           	psect	text1
   518   00FE62                     __ptext1:
   519                           	callstack 0
   520   00FE62                     _keypad_get_value:
   521                           	callstack 29
   522   00FE62                     
   523                           ;ECU_layer/KEYPAD/keypad.c: 40:     if(keypad_config == ((void*)0) || value == ((void*)0
      +                          )){
   524   00FE62  5049               	movf	keypad_get_value@keypad_config^0,w,c
   525   00FE64  104A               	iorwf	(keypad_get_value@keypad_config+1)^0,w,c
   526   00FE66  B4D8               	btfsc	status,2,c
   527   00FE68  EF38  F07F         	goto	u971
   528   00FE6C  EF3A  F07F         	goto	u970
   529   00FE70                     u971:
   530   00FE70  EF43  F07F         	goto	l1725
   531   00FE74                     u970:
   532   00FE74  504B               	movf	keypad_get_value@value^0,w,c
   533   00FE76  104C               	iorwf	(keypad_get_value@value+1)^0,w,c
   534   00FE78  A4D8               	btfss	status,2,c
   535   00FE7A  EF41  F07F         	goto	u981
   536   00FE7E  EF43  F07F         	goto	u980
   537   00FE82                     u981:
   538   00FE82  EF45  F07F         	goto	l1727
   539   00FE86                     u980:
   540   00FE86                     l1725:
   541                           
   542                           ;ECU_layer/KEYPAD/keypad.c: 42:     }
   543   00FE86  EFFF  F07F         	goto	l343
   544   00FE8A                     l1727:
   545                           
   546                           ;ECU_layer/KEYPAD/keypad.c: 44:         pin_config_t temp_row,temp_col;;ECU_layer/KEYPAD
      +                          /keypad.c: 45:         logic_t btn_state;;ECU_layer/KEYPAD/keypad.c: 46:         for(uin
      +                          t8 counter_row =0; counter_row < 4 ; counter_row++){
   547   00FE8A  0E00               	movlw	0
   548   00FE8C  6E55               	movwf	keypad_get_value@counter_row^0,c
   549   00FE8E                     l1733:
   550                           
   551                           ;ECU_layer/KEYPAD/keypad.c: 47:             temp_row.port = keypad_config->keypad_rows[c
      +                          ounter_row].keypad_pin_port;
   552   00FE8E  5055               	movf	keypad_get_value@counter_row^0,w,c
   553   00FE90  0D02               	mullw	2
   554   00FE92  CFF3 F04D          	movff	prodl,??_keypad_get_value
   555   00FE96  CFF4 F04E          	movff	prodh,??_keypad_get_value+1
   556   00FE9A  504D               	movf	??_keypad_get_value^0,w,c
   557   00FE9C  2449               	addwf	keypad_get_value@keypad_config^0,w,c
   558   00FE9E  6ED9               	movwf	fsr2l,c
   559   00FEA0  504E               	movf	(??_keypad_get_value+1)^0,w,c
   560   00FEA2  204A               	addwfc	(keypad_get_value@keypad_config+1)^0,w,c
   561   00FEA4  6EDA               	movwf	fsr2h,c
   562   00FEA6  50DF               	movf	indf2,w,c
   563   00FEA8  6E4F               	movwf	(??_keypad_get_value+2)^0,c
   564   00FEAA  5054               	movf	keypad_get_value@temp_row^0,w,c
   565   00FEAC  184F               	xorwf	(??_keypad_get_value+2)^0,w,c
   566   00FEAE  0BF8               	andlw	-8
   567   00FEB0  184F               	xorwf	(??_keypad_get_value+2)^0,w,c
   568   00FEB2  6E54               	movwf	keypad_get_value@temp_row^0,c
   569                           
   570                           ;ECU_layer/KEYPAD/keypad.c: 48:             temp_row.pin = keypad_config->keypad_rows[co
      +                          unter_row].keypad_pin;
   571   00FEB4  5055               	movf	keypad_get_value@counter_row^0,w,c
   572   00FEB6  0D02               	mullw	2
   573   00FEB8  CFF3 F04D          	movff	prodl,??_keypad_get_value
   574   00FEBC  CFF4 F04E          	movff	prodh,??_keypad_get_value+1
   575   00FEC0  504D               	movf	??_keypad_get_value^0,w,c
   576   00FEC2  2449               	addwf	keypad_get_value@keypad_config^0,w,c
   577   00FEC4  6E4F               	movwf	(??_keypad_get_value+2)^0,c
   578   00FEC6  504E               	movf	(??_keypad_get_value+1)^0,w,c
   579   00FEC8  204A               	addwfc	(keypad_get_value@keypad_config+1)^0,w,c
   580   00FECA  6E50               	movwf	(??_keypad_get_value+3)^0,c
   581   00FECC  0E01               	movlw	1
   582   00FECE  244F               	addwf	(??_keypad_get_value+2)^0,w,c
   583   00FED0  6ED9               	movwf	fsr2l,c
   584   00FED2  0E00               	movlw	0
   585   00FED4  2050               	addwfc	(??_keypad_get_value+3)^0,w,c
   586   00FED6  6EDA               	movwf	fsr2h,c
   587   00FED8  50DF               	movf	indf2,w,c
   588   00FEDA  6E51               	movwf	(??_keypad_get_value+4)^0,c
   589   00FEDC  4651               	rlncf	(??_keypad_get_value+4)^0,f,c
   590   00FEDE  4651               	rlncf	(??_keypad_get_value+4)^0,f,c
   591   00FEE0  4651               	rlncf	(??_keypad_get_value+4)^0,f,c
   592   00FEE2  5054               	movf	keypad_get_value@temp_row^0,w,c
   593   00FEE4  1851               	xorwf	(??_keypad_get_value+4)^0,w,c
   594   00FEE6  0BC7               	andlw	-57
   595   00FEE8  1851               	xorwf	(??_keypad_get_value+4)^0,w,c
   596   00FEEA  6E54               	movwf	keypad_get_value@temp_row^0,c
   597   00FEEC                     
   598                           ;ECU_layer/KEYPAD/keypad.c: 49:             gpio_pin_write_logic( &temp_row, GPIO_HIGH);
   599   00FEEC  0E54               	movlw	low keypad_get_value@temp_row
   600   00FEEE  6E3F               	movwf	gpio_pin_write_logic@pin_config^0,c
   601   00FEF0  0E00               	movlw	high keypad_get_value@temp_row
   602   00FEF2  6E40               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
   603   00FEF4  0E01               	movlw	1
   604   00FEF6  6E41               	movwf	gpio_pin_write_logic@logic^0,c
   605   00FEF8  EC6A  F07D         	call	_gpio_pin_write_logic	;wreg free
   606   00FEFC                     
   607                           ;ECU_layer/KEYPAD/keypad.c: 51:             for(uint8 counter_col =0; counter_col < 4 ; 
      +                          counter_col++){
   608   00FEFC  0E00               	movlw	0
   609   00FEFE  6E56               	movwf	keypad_get_value@counter_col^0,c
   610   00FF00                     l1743:
   611                           
   612                           ;ECU_layer/KEYPAD/keypad.c: 52:             temp_col.port = keypad_config->keypad_cols[c
      +                          ounter_col].keypad_pin_port;
   613   00FF00  5056               	movf	keypad_get_value@counter_col^0,w,c
   614   00FF02  0D02               	mullw	2
   615   00FF04  CFF3 F04D          	movff	prodl,??_keypad_get_value
   616   00FF08  CFF4 F04E          	movff	prodh,??_keypad_get_value+1
   617   00FF0C  504D               	movf	??_keypad_get_value^0,w,c
   618   00FF0E  2449               	addwf	keypad_get_value@keypad_config^0,w,c
   619   00FF10  6E4F               	movwf	(??_keypad_get_value+2)^0,c
   620   00FF12  504E               	movf	(??_keypad_get_value+1)^0,w,c
   621   00FF14  204A               	addwfc	(keypad_get_value@keypad_config+1)^0,w,c
   622   00FF16  6E50               	movwf	(??_keypad_get_value+3)^0,c
   623   00FF18  0E08               	movlw	8
   624   00FF1A  244F               	addwf	(??_keypad_get_value+2)^0,w,c
   625   00FF1C  6ED9               	movwf	fsr2l,c
   626   00FF1E  0E00               	movlw	0
   627   00FF20  2050               	addwfc	(??_keypad_get_value+3)^0,w,c
   628   00FF22  6EDA               	movwf	fsr2h,c
   629   00FF24  50DF               	movf	indf2,w,c
   630   00FF26  6E51               	movwf	(??_keypad_get_value+4)^0,c
   631   00FF28  5052               	movf	keypad_get_value@temp_col^0,w,c
   632   00FF2A  1851               	xorwf	(??_keypad_get_value+4)^0,w,c
   633   00FF2C  0BF8               	andlw	-8
   634   00FF2E  1851               	xorwf	(??_keypad_get_value+4)^0,w,c
   635   00FF30  6E52               	movwf	keypad_get_value@temp_col^0,c
   636                           
   637                           ;ECU_layer/KEYPAD/keypad.c: 53:             temp_col.pin = keypad_config->keypad_cols[co
      +                          unter_col].keypad_pin;
   638   00FF32  5056               	movf	keypad_get_value@counter_col^0,w,c
   639   00FF34  0D02               	mullw	2
   640   00FF36  CFF3 F04D          	movff	prodl,??_keypad_get_value
   641   00FF3A  CFF4 F04E          	movff	prodh,??_keypad_get_value+1
   642   00FF3E  504D               	movf	??_keypad_get_value^0,w,c
   643   00FF40  2449               	addwf	keypad_get_value@keypad_config^0,w,c
   644   00FF42  6E4F               	movwf	(??_keypad_get_value+2)^0,c
   645   00FF44  504E               	movf	(??_keypad_get_value+1)^0,w,c
   646   00FF46  204A               	addwfc	(keypad_get_value@keypad_config+1)^0,w,c
   647   00FF48  6E50               	movwf	(??_keypad_get_value+3)^0,c
   648   00FF4A  0E09               	movlw	9
   649   00FF4C  244F               	addwf	(??_keypad_get_value+2)^0,w,c
   650   00FF4E  6ED9               	movwf	fsr2l,c
   651   00FF50  0E00               	movlw	0
   652   00FF52  2050               	addwfc	(??_keypad_get_value+3)^0,w,c
   653   00FF54  6EDA               	movwf	fsr2h,c
   654   00FF56  50DF               	movf	indf2,w,c
   655   00FF58  6E51               	movwf	(??_keypad_get_value+4)^0,c
   656   00FF5A  4651               	rlncf	(??_keypad_get_value+4)^0,f,c
   657   00FF5C  4651               	rlncf	(??_keypad_get_value+4)^0,f,c
   658   00FF5E  4651               	rlncf	(??_keypad_get_value+4)^0,f,c
   659   00FF60  5052               	movf	keypad_get_value@temp_col^0,w,c
   660   00FF62  1851               	xorwf	(??_keypad_get_value+4)^0,w,c
   661   00FF64  0BC7               	andlw	-57
   662   00FF66  1851               	xorwf	(??_keypad_get_value+4)^0,w,c
   663   00FF68  6E52               	movwf	keypad_get_value@temp_col^0,c
   664   00FF6A                     
   665                           ;ECU_layer/KEYPAD/keypad.c: 54:             gpio_pin_read_logic(&temp_col, &btn_state);
   666   00FF6A  0E52               	movlw	low keypad_get_value@temp_col
   667   00FF6C  6E3F               	movwf	gpio_pin_read_logic@pin_config^0,c
   668   00FF6E  0E00               	movlw	high keypad_get_value@temp_col
   669   00FF70  6E40               	movwf	(gpio_pin_read_logic@pin_config+1)^0,c
   670   00FF72  0E53               	movlw	low keypad_get_value@btn_state
   671   00FF74  6E41               	movwf	gpio_pin_read_logic@logic^0,c
   672   00FF76  0E00               	movlw	high keypad_get_value@btn_state
   673   00FF78  6E42               	movwf	(gpio_pin_read_logic@logic+1)^0,c
   674   00FF7A  EC13  F07D         	call	_gpio_pin_read_logic	;wreg free
   675   00FF7E                     
   676                           ;ECU_layer/KEYPAD/keypad.c: 55:             if(btn_state == GPIO_HIGH){
   677   00FF7E  0453               	decf	keypad_get_value@btn_state^0,w,c
   678   00FF80  A4D8               	btfss	status,2,c
   679   00FF82  EFC5  F07F         	goto	u991
   680   00FF86  EFC7  F07F         	goto	u990
   681   00FF8A                     u991:
   682   00FF8A  EFE5  F07F         	goto	l1755
   683   00FF8E                     u990:
   684   00FF8E                     
   685                           ;ECU_layer/KEYPAD/keypad.c: 56:                 *value = values[counter_row][counter_col
      +                          ];
   686   00FF8E  5055               	movf	keypad_get_value@counter_row^0,w,c
   687   00FF90  0D04               	mullw	4
   688   00FF92  0E01               	movlw	low _values
   689   00FF94  24F3               	addwf	243,w,c
   690   00FF96  6E4D               	movwf	??_keypad_get_value^0,c
   691   00FF98  0E00               	movlw	high _values
   692   00FF9A  20F4               	addwfc	prodh,w,c
   693   00FF9C  6E4E               	movwf	(??_keypad_get_value+1)^0,c
   694   00FF9E  5056               	movf	keypad_get_value@counter_col^0,w,c
   695   00FFA0  244D               	addwf	??_keypad_get_value^0,w,c
   696   00FFA2  6ED9               	movwf	fsr2l,c
   697   00FFA4  0E00               	movlw	0
   698   00FFA6  204E               	addwfc	(??_keypad_get_value+1)^0,w,c
   699   00FFA8  6EDA               	movwf	fsr2h,c
   700   00FFAA  C04B  FFE1         	movff	keypad_get_value@value,fsr1l
   701   00FFAE  C04C  FFE2         	movff	keypad_get_value@value+1,fsr1h
   702   00FFB2  CFDF FFE7          	movff	indf2,indf1
   703   00FFB6                     
   704                           ;ECU_layer/KEYPAD/keypad.c: 57:                 gpio_pin_write_logic( &temp_row, GPIO_LO
      +                          W);
   705   00FFB6  0E54               	movlw	low keypad_get_value@temp_row
   706   00FFB8  6E3F               	movwf	gpio_pin_write_logic@pin_config^0,c
   707   00FFBA  0E00               	movlw	high keypad_get_value@temp_row
   708   00FFBC  6E40               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
   709   00FFBE  0E00               	movlw	0
   710   00FFC0  6E41               	movwf	gpio_pin_write_logic@logic^0,c
   711   00FFC2  EC6A  F07D         	call	_gpio_pin_write_logic	;wreg free
   712   00FFC6  EFFF  F07F         	goto	l343
   713   00FFCA                     l1755:
   714                           
   715                           ;ECU_layer/KEYPAD/keypad.c: 60:             }
   716   00FFCA  2A56               	incf	keypad_get_value@counter_col^0,f,c
   717   00FFCC  0E03               	movlw	3
   718   00FFCE  6456               	cpfsgt	keypad_get_value@counter_col^0,c
   719   00FFD0  EFEC  F07F         	goto	u1001
   720   00FFD4  EFEE  F07F         	goto	u1000
   721   00FFD8                     u1001:
   722   00FFD8  EF80  F07F         	goto	l1743
   723   00FFDC                     u1000:
   724   00FFDC                     
   725                           ;ECU_layer/KEYPAD/keypad.c: 62:             gpio_pin_write_logic( &temp_row, GPIO_LOW);
   726   00FFDC  0E54               	movlw	low keypad_get_value@temp_row
   727   00FFDE  6E3F               	movwf	gpio_pin_write_logic@pin_config^0,c
   728   00FFE0  0E00               	movlw	high keypad_get_value@temp_row
   729   00FFE2  6E40               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
   730   00FFE4  0E00               	movlw	0
   731   00FFE6  6E41               	movwf	gpio_pin_write_logic@logic^0,c
   732   00FFE8  EC6A  F07D         	call	_gpio_pin_write_logic	;wreg free
   733   00FFEC                     
   734                           ;ECU_layer/KEYPAD/keypad.c: 63:         }
   735   00FFEC  2A55               	incf	keypad_get_value@counter_row^0,f,c
   736   00FFEE  0E03               	movlw	3
   737   00FFF0  6455               	cpfsgt	keypad_get_value@counter_row^0,c
   738   00FFF2  EFFD  F07F         	goto	u1011
   739   00FFF6  EFFF  F07F         	goto	u1010
   740   00FFFA                     u1011:
   741   00FFFA  EF47  F07F         	goto	l1733
   742   00FFFE                     u1010:
   743   00FFFE                     l343:
   744   00FFFE  0012               	return		;funcret
   745   010000                     __end_of_keypad_get_value:
   746                           	callstack 0
   747                           
   748 ;; *************** function _gpio_pin_write_logic *****************
   749 ;; Defined at:
   750 ;;		line 75 in file "MCAL_layer/GPIO/GPIO.c"
   751 ;; Parameters:    Size  Location     Type
   752 ;;  pin_config      2    0[COMRAM] PTR struct .
   753 ;;		 -> keypad_get_value@temp_row(1), led_turn_off@temp(1), led_turn_on@temp(1), led_intialize@temp(1), 
   754 ;;		 -> SVS_print_pov@temp(1), 
   755 ;;  logic           1    2[COMRAM] enum E2798
   756 ;; Auto vars:     Size  Location     Type
   757 ;;  ret             1    9[COMRAM] unsigned char 
   758 ;; Return value:  Size  Location     Type
   759 ;;                  1    wreg      unsigned char 
   760 ;; Registers used:
   761 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   762 ;; Tracked objects:
   763 ;;		On entry : 0/0
   764 ;;		On exit  : 0/0
   765 ;;		Unchanged: 0/0
   766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   767 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   768 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   769 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   770 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   771 ;;Total ram usage:       10 bytes
   772 ;; Hardware stack levels used: 1
   773 ;; This function calls:
   774 ;;		Nothing
   775 ;; This function is called by:
   776 ;;		_keypad_get_value
   777 ;;		_SVS_print_pov
   778 ;;		_motor_turn_on
   779 ;;		_motor_stop
   780 ;;		_relay_turn_on
   781 ;;		_relay_turn_off
   782 ;;		_led_intialize
   783 ;;		_led_turn_on
   784 ;;		_led_turn_off
   785 ;;		_gpio_pin_initialize
   786 ;; This function uses a non-reentrant model
   787 ;;
   788                           
   789                           	psect	text2
   790   00FAD4                     __ptext2:
   791                           	callstack 0
   792   00FAD4                     _gpio_pin_write_logic:
   793                           	callstack 29
   794   00FAD4                     
   795                           ;MCAL_layer/GPIO/GPIO.c: 77:     Std_ReturnType ret = (Std_ReturnType)0x00;
   796   00FAD4  0E00               	movlw	0
   797   00FAD6  6E48               	movwf	gpio_pin_write_logic@ret^0,c
   798   00FAD8                     
   799                           ;MCAL_layer/GPIO/GPIO.c: 79:     if(pin_config == ((void*)0)){
   800   00FAD8  503F               	movf	gpio_pin_write_logic@pin_config^0,w,c
   801   00FADA  1040               	iorwf	(gpio_pin_write_logic@pin_config+1)^0,w,c
   802   00FADC  A4D8               	btfss	status,2,c
   803   00FADE  EF73  F07D         	goto	u881
   804   00FAE2  EF75  F07D         	goto	u880
   805   00FAE6                     u881:
   806   00FAE6  EFE2  F07D         	goto	l1657
   807   00FAEA                     u880:
   808   00FAEA                     l1643:
   809                           
   810                           ;MCAL_layer/GPIO/GPIO.c: 80:         ret =(Std_ReturnType)0x01;
   811   00FAEA  0E01               	movlw	1
   812   00FAEC  6E48               	movwf	gpio_pin_write_logic@ret^0,c
   813                           
   814                           ;MCAL_layer/GPIO/GPIO.c: 81:     }
   815   00FAEE  EFF7  F07D         	goto	l1659
   816   00FAF2                     l1645:
   817                           
   818                           ;MCAL_layer/GPIO/GPIO.c: 85:                 ((*((volatile uint8 *)(lat_registers[pin_co
      +                          nfig->port]))) |= (0x01 << pin_config->pin));
   819   00FAF2  C03F  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
   820   00FAF6  C040  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
   821   00FAFA  30DF               	rrcf	223,w,c
   822   00FAFC  32E8               	rrcf	wreg,f,c
   823   00FAFE  32E8               	rrcf	wreg,f,c
   824   00FB00  0B07               	andlw	7
   825   00FB02  6E42               	movwf	??_gpio_pin_write_logic^0,c
   826   00FB04  0E01               	movlw	1
   827   00FB06  6E43               	movwf	(??_gpio_pin_write_logic+1)^0,c
   828   00FB08  2A42               	incf	??_gpio_pin_write_logic^0,f,c
   829   00FB0A  EF89  F07D         	goto	u894
   830   00FB0E                     u895:
   831   00FB0E  90D8               	bcf	status,0,c
   832   00FB10  3643               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
   833   00FB12                     u894:
   834   00FB12  2E42               	decfsz	??_gpio_pin_write_logic^0,f,c
   835   00FB14  EF87  F07D         	goto	u895
   836   00FB18  C03F  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
   837   00FB1C  C040  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
   838   00FB20  50DF               	movf	223,w,c
   839   00FB22  0B07               	andlw	7
   840   00FB24  6E44               	movwf	(??_gpio_pin_write_logic+2)^0,c
   841   00FB26  5044               	movf	(??_gpio_pin_write_logic+2)^0,w,c
   842   00FB28  0D02               	mullw	2
   843   00FB2A  0E11               	movlw	low _lat_registers
   844   00FB2C  24F3               	addwf	243,w,c
   845   00FB2E  6ED9               	movwf	fsr2l,c
   846   00FB30  0E00               	movlw	high _lat_registers
   847   00FB32  20F4               	addwfc	prodh,w,c
   848   00FB34  6EDA               	movwf	fsr2h,c
   849   00FB36  CFDE F045          	movff	postinc2,??_gpio_pin_write_logic+3
   850   00FB3A  CFDD F046          	movff	postdec2,??_gpio_pin_write_logic+4
   851   00FB3E  C045  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
   852   00FB42  C046  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
   853   00FB46  5043               	movf	(??_gpio_pin_write_logic+1)^0,w,c
   854   00FB48  12DF               	iorwf	indf2,f,c
   855   00FB4A                     
   856                           ;MCAL_layer/GPIO/GPIO.c: 86:                 pin_config->logic = GPIO_HIGH;
   857   00FB4A  C03F  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
   858   00FB4E  C040  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
   859   00FB52  8EDF               	bsf	indf2,7,c
   860                           
   861                           ;MCAL_layer/GPIO/GPIO.c: 87:                 break;
   862   00FB54  EFF7  F07D         	goto	l1659
   863   00FB58                     l1649:
   864                           
   865                           ;MCAL_layer/GPIO/GPIO.c: 89:                 ((*((volatile uint8 *)(lat_registers[pin_co
      +                          nfig->port]))) &= (~(0x01 << pin_config->pin)));
   866   00FB58  C03F  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
   867   00FB5C  C040  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
   868   00FB60  30DF               	rrcf	223,w,c
   869   00FB62  32E8               	rrcf	wreg,f,c
   870   00FB64  32E8               	rrcf	wreg,f,c
   871   00FB66  0B07               	andlw	7
   872   00FB68  6E42               	movwf	??_gpio_pin_write_logic^0,c
   873   00FB6A  0E01               	movlw	1
   874   00FB6C  6E43               	movwf	(??_gpio_pin_write_logic+1)^0,c
   875   00FB6E  2A42               	incf	??_gpio_pin_write_logic^0,f,c
   876   00FB70  EFBC  F07D         	goto	u904
   877   00FB74                     u905:
   878   00FB74  90D8               	bcf	status,0,c
   879   00FB76  3643               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
   880   00FB78                     u904:
   881   00FB78  2E42               	decfsz	??_gpio_pin_write_logic^0,f,c
   882   00FB7A  EFBA  F07D         	goto	u905
   883   00FB7E  5043               	movf	(??_gpio_pin_write_logic+1)^0,w,c
   884   00FB80  0AFF               	xorlw	255
   885   00FB82  6E44               	movwf	(??_gpio_pin_write_logic+2)^0,c
   886   00FB84  C03F  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
   887   00FB88  C040  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
   888   00FB8C  50DF               	movf	223,w,c
   889   00FB8E  0B07               	andlw	7
   890   00FB90  6E45               	movwf	(??_gpio_pin_write_logic+3)^0,c
   891   00FB92  5045               	movf	(??_gpio_pin_write_logic+3)^0,w,c
   892   00FB94  0D02               	mullw	2
   893   00FB96  0E11               	movlw	low _lat_registers
   894   00FB98  24F3               	addwf	243,w,c
   895   00FB9A  6ED9               	movwf	fsr2l,c
   896   00FB9C  0E00               	movlw	high _lat_registers
   897   00FB9E  20F4               	addwfc	prodh,w,c
   898   00FBA0  6EDA               	movwf	fsr2h,c
   899   00FBA2  CFDE F046          	movff	postinc2,??_gpio_pin_write_logic+4
   900   00FBA6  CFDD F047          	movff	postdec2,??_gpio_pin_write_logic+5
   901   00FBAA  C046  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
   902   00FBAE  C047  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
   903   00FBB2  5044               	movf	(??_gpio_pin_write_logic+2)^0,w,c
   904   00FBB4  16DF               	andwf	indf2,f,c
   905   00FBB6                     
   906                           ;MCAL_layer/GPIO/GPIO.c: 90:                 pin_config->logic = GPIO_LOW;
   907   00FBB6  C03F  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
   908   00FBBA  C040  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
   909   00FBBE  9EDF               	bcf	indf2,7,c
   910                           
   911                           ;MCAL_layer/GPIO/GPIO.c: 91:                 break;
   912   00FBC0  EFF7  F07D         	goto	l1659
   913   00FBC4                     l1657:
   914   00FBC4  5041               	movf	gpio_pin_write_logic@logic^0,w,c
   915   00FBC6  6E42               	movwf	??_gpio_pin_write_logic^0,c
   916   00FBC8  6A43               	clrf	(??_gpio_pin_write_logic+1)^0,c
   917                           
   918                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   919                           ; Switch size 1, requested type "simple"
   920                           ; Number of cases is 1, Range of values is 0 to 0
   921                           ; switch strategies available:
   922                           ; Name         Instructions Cycles
   923                           ; simple_byte            4     3 (average)
   924                           ;	Chosen strategy is simple_byte
   925   00FBCA  5043               	movf	(??_gpio_pin_write_logic+1)^0,w,c
   926   00FBCC  0A00               	xorlw	0	; case 0
   927   00FBCE  B4D8               	btfsc	status,2,c
   928   00FBD0  EFEC  F07D         	goto	l2053
   929   00FBD4  EF75  F07D         	goto	l1643
   930   00FBD8                     l2053:
   931                           
   932                           ; Switch size 1, requested type "simple"
   933                           ; Number of cases is 2, Range of values is 0 to 1
   934                           ; switch strategies available:
   935                           ; Name         Instructions Cycles
   936                           ; simple_byte            7     4 (average)
   937                           ;	Chosen strategy is simple_byte
   938   00FBD8  5042               	movf	??_gpio_pin_write_logic^0,w,c
   939   00FBDA  0A00               	xorlw	0	; case 0
   940   00FBDC  B4D8               	btfsc	status,2,c
   941   00FBDE  EFAC  F07D         	goto	l1649
   942   00FBE2  0A01               	xorlw	1	; case 1
   943   00FBE4  B4D8               	btfsc	status,2,c
   944   00FBE6  EF79  F07D         	goto	l1645
   945   00FBEA  EF75  F07D         	goto	l1643
   946   00FBEE                     l1659:
   947                           
   948                           ;MCAL_layer/GPIO/GPIO.c: 98:     return ret;
   949   00FBEE  5048               	movf	gpio_pin_write_logic@ret^0,w,c
   950   00FBF0  0012               	return		;funcret
   951   00FBF2                     __end_of_gpio_pin_write_logic:
   952                           	callstack 0
   953                           
   954 ;; *************** function _gpio_pin_read_logic *****************
   955 ;; Defined at:
   956 ;;		line 112 in file "MCAL_layer/GPIO/GPIO.c"
   957 ;; Parameters:    Size  Location     Type
   958 ;;  pin_config      2    0[COMRAM] PTR struct .
   959 ;;		 -> keypad_get_value@temp_col(1), 
   960 ;;  logic           2    2[COMRAM] PTR enum E2798
   961 ;;		 -> keypad_get_value@btn_state(1), button_read_state@temp_logic(1), 
   962 ;; Auto vars:     Size  Location     Type
   963 ;;  ret             1    0        unsigned char 
   964 ;; Return value:  Size  Location     Type
   965 ;;                  1    wreg      unsigned char 
   966 ;; Registers used:
   967 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   968 ;; Tracked objects:
   969 ;;		On entry : 0/0
   970 ;;		On exit  : 0/0
   971 ;;		Unchanged: 0/0
   972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   973 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   975 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   976 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   977 ;;Total ram usage:        9 bytes
   978 ;; Hardware stack levels used: 1
   979 ;; This function calls:
   980 ;;		Nothing
   981 ;; This function is called by:
   982 ;;		_keypad_get_value
   983 ;;		_button_read_state
   984 ;; This function uses a non-reentrant model
   985 ;;
   986                           
   987                           	psect	text3
   988   00FA26                     __ptext3:
   989                           	callstack 0
   990   00FA26                     _gpio_pin_read_logic:
   991                           	callstack 29
   992   00FA26                     
   993                           ;MCAL_layer/GPIO/GPIO.c: 116:     if(pin_config == ((void*)0) || logic == ((void*)0)){
   994   00FA26  503F               	movf	gpio_pin_read_logic@pin_config^0,w,c
   995   00FA28  1040               	iorwf	(gpio_pin_read_logic@pin_config+1)^0,w,c
   996   00FA2A  B4D8               	btfsc	status,2,c
   997   00FA2C  EF1A  F07D         	goto	u911
   998   00FA30  EF1C  F07D         	goto	u910
   999   00FA34                     u911:
  1000   00FA34  EF25  F07D         	goto	l1673
  1001   00FA38                     u910:
  1002   00FA38  5041               	movf	gpio_pin_read_logic@logic^0,w,c
  1003   00FA3A  1042               	iorwf	(gpio_pin_read_logic@logic+1)^0,w,c
  1004   00FA3C  A4D8               	btfss	status,2,c
  1005   00FA3E  EF23  F07D         	goto	u921
  1006   00FA42  EF25  F07D         	goto	u920
  1007   00FA46                     u921:
  1008   00FA46  EF27  F07D         	goto	l1675
  1009   00FA4A                     u920:
  1010   00FA4A                     l1673:
  1011                           
  1012                           ;MCAL_layer/GPIO/GPIO.c: 118:     }
  1013   00FA4A  EF69  F07D         	goto	l221
  1014   00FA4E                     l1675:
  1015                           
  1016                           ;MCAL_layer/GPIO/GPIO.c: 120:         *logic = ((((*((volatile uint8 *)(port_registers[p
      +                          in_config->port]))) >> pin_config->pin) & 0x01));
  1017   00FA4E  C03F  FFD9         	movff	gpio_pin_read_logic@pin_config,fsr2l
  1018   00FA52  C040  FFDA         	movff	gpio_pin_read_logic@pin_config+1,fsr2h
  1019   00FA56  30DF               	rrcf	223,w,c
  1020   00FA58  32E8               	rrcf	wreg,f,c
  1021   00FA5A  32E8               	rrcf	wreg,f,c
  1022   00FA5C  0B07               	andlw	7
  1023   00FA5E  6E43               	movwf	??_gpio_pin_read_logic^0,c
  1024   00FA60  C03F  FFD9         	movff	gpio_pin_read_logic@pin_config,fsr2l
  1025   00FA64  C040  FFDA         	movff	gpio_pin_read_logic@pin_config+1,fsr2h
  1026   00FA68  50DF               	movf	223,w,c
  1027   00FA6A  0B07               	andlw	7
  1028   00FA6C  6E44               	movwf	(??_gpio_pin_read_logic+1)^0,c
  1029   00FA6E  5044               	movf	(??_gpio_pin_read_logic+1)^0,w,c
  1030   00FA70  0D02               	mullw	2
  1031   00FA72  0E1B               	movlw	low _port_registers
  1032   00FA74  24F3               	addwf	243,w,c
  1033   00FA76  6ED9               	movwf	fsr2l,c
  1034   00FA78  0E00               	movlw	high _port_registers
  1035   00FA7A  20F4               	addwfc	prodh,w,c
  1036   00FA7C  6EDA               	movwf	fsr2h,c
  1037   00FA7E  CFDE F045          	movff	postinc2,??_gpio_pin_read_logic+2
  1038   00FA82  CFDD F046          	movff	postdec2,??_gpio_pin_read_logic+3
  1039   00FA86  C045  FFD9         	movff	??_gpio_pin_read_logic+2,fsr2l
  1040   00FA8A  C046  FFDA         	movff	??_gpio_pin_read_logic+3,fsr2h
  1041   00FA8E  50DF               	movf	indf2,w,c
  1042   00FA90  6E47               	movwf	(??_gpio_pin_read_logic+4)^0,c
  1043   00FA92  2A43               	incf	??_gpio_pin_read_logic^0,f,c
  1044   00FA94  EF4E  F07D         	goto	u934
  1045   00FA98                     u935:
  1046   00FA98  90D8               	bcf	status,0,c
  1047   00FA9A  3247               	rrcf	(??_gpio_pin_read_logic+4)^0,f,c
  1048   00FA9C                     u934:
  1049   00FA9C  2E43               	decfsz	??_gpio_pin_read_logic^0,f,c
  1050   00FA9E  EF4C  F07D         	goto	u935
  1051   00FAA2  5047               	movf	(??_gpio_pin_read_logic+4)^0,w,c
  1052   00FAA4  0B01               	andlw	1
  1053   00FAA6  C041  FFD9         	movff	gpio_pin_read_logic@logic,fsr2l
  1054   00FAAA  C042  FFDA         	movff	gpio_pin_read_logic@logic+1,fsr2h
  1055   00FAAE  6EDF               	movwf	indf2,c
  1056   00FAB0                     
  1057                           ;MCAL_layer/GPIO/GPIO.c: 121:         pin_config->logic = *logic;
  1058   00FAB0  C041  FFD9         	movff	gpio_pin_read_logic@logic,fsr2l
  1059   00FAB4  C042  FFDA         	movff	gpio_pin_read_logic@logic+1,fsr2h
  1060   00FAB8  50DF               	movf	indf2,w,c
  1061   00FABA  6E43               	movwf	??_gpio_pin_read_logic^0,c
  1062   00FABC  C03F  FFD9         	movff	gpio_pin_read_logic@pin_config,fsr2l
  1063   00FAC0  C040  FFDA         	movff	gpio_pin_read_logic@pin_config+1,fsr2h
  1064   00FAC4  3243               	rrcf	??_gpio_pin_read_logic^0,f,c
  1065   00FAC6  3243               	rrcf	??_gpio_pin_read_logic^0,f,c
  1066   00FAC8  50DF               	movf	223,w,c
  1067   00FACA  1843               	xorwf	??_gpio_pin_read_logic^0,w,c
  1068   00FACC  0B7F               	andlw	-129
  1069   00FACE  1843               	xorwf	??_gpio_pin_read_logic^0,w,c
  1070   00FAD0  6EDF               	movwf	223,c
  1071   00FAD2                     l221:
  1072   00FAD2  0012               	return		;funcret
  1073   00FAD4                     __end_of_gpio_pin_read_logic:
  1074                           	callstack 0
  1075                           
  1076 ;; *************** function _appliction_intialize *****************
  1077 ;; Defined at:
  1078 ;;		line 188 in file "main.c"
  1079 ;; Parameters:    Size  Location     Type
  1080 ;;		None
  1081 ;; Auto vars:     Size  Location     Type
  1082 ;;		None
  1083 ;; Return value:  Size  Location     Type
  1084 ;;                  1    wreg      void 
  1085 ;; Registers used:
  1086 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1087 ;; Tracked objects:
  1088 ;;		On entry : 0/0
  1089 ;;		On exit  : 0/0
  1090 ;;		Unchanged: 0/0
  1091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1096 ;;Total ram usage:        0 bytes
  1097 ;; Hardware stack levels used: 1
  1098 ;; Hardware stack levels required when called: 2
  1099 ;; This function calls:
  1100 ;;		_keypad_initialize
  1101 ;; This function is called by:
  1102 ;;		_main
  1103 ;; This function uses a non-reentrant model
  1104 ;;
  1105                           
  1106                           	psect	text4
  1107   00F8FA                     __ptext4:
  1108                           	callstack 0
  1109   00F8FA                     _appliction_intialize:
  1110                           	callstack 28
  1111   00F8FA                     
  1112                           ;main.c: 189:     ADCON0 = 0x00;
  1113   00F8FA  0E00               	movlw	0
  1114   00F8FC  6EC2               	movwf	194,c	;volatile
  1115                           
  1116                           ;main.c: 190:     ADCON1 = 0x0F;
  1117   00F8FE  0E0F               	movlw	15
  1118   00F900  6EC1               	movwf	193,c	;volatile
  1119   00F902                     
  1120                           ;main.c: 191:     keypad_initialize(&keypad);
  1121   00F902  0E2F               	movlw	low _keypad
  1122   00F904  6E48               	movwf	keypad_initialize@keypad_config^0,c
  1123   00F906  0E00               	movlw	high _keypad
  1124   00F908  6E49               	movwf	(keypad_initialize@keypad_config+1)^0,c
  1125   00F90A  ECF9  F07D         	call	_keypad_initialize	;wreg free
  1126   00F90E  0012               	return		;funcret
  1127   00F910                     __end_of_appliction_intialize:
  1128                           	callstack 0
  1129                           
  1130 ;; *************** function _keypad_initialize *****************
  1131 ;; Defined at:
  1132 ;;		line 11 in file "ECU_layer/KEYPAD/keypad.c"
  1133 ;; Parameters:    Size  Location     Type
  1134 ;;  keypad_confi    2    9[COMRAM] PTR const struct .
  1135 ;;		 -> keypad(16), 
  1136 ;; Auto vars:     Size  Location     Type
  1137 ;;  counter         1   17[COMRAM] unsigned char 
  1138 ;;  counter         1   16[COMRAM] unsigned char 
  1139 ;;  temp            1   18[COMRAM] struct .
  1140 ;;  ret             1    0        unsigned char 
  1141 ;; Return value:  Size  Location     Type
  1142 ;;                  1    wreg      unsigned char 
  1143 ;; Registers used:
  1144 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1145 ;; Tracked objects:
  1146 ;;		On entry : 0/0
  1147 ;;		On exit  : 0/0
  1148 ;;		Unchanged: 0/0
  1149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1150 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1151 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1152 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1153 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1154 ;;Total ram usage:       10 bytes
  1155 ;; Hardware stack levels used: 1
  1156 ;; Hardware stack levels required when called: 1
  1157 ;; This function calls:
  1158 ;;		_gpio_pin_direction_initialize
  1159 ;; This function is called by:
  1160 ;;		_appliction_intialize
  1161 ;; This function uses a non-reentrant model
  1162 ;;
  1163                           
  1164                           	psect	text5
  1165   00FBF2                     __ptext5:
  1166                           	callstack 0
  1167   00FBF2                     _keypad_initialize:
  1168                           	callstack 28
  1169   00FBF2                     
  1170                           ;ECU_layer/KEYPAD/keypad.c: 14:     if(keypad_config == ((void*)0)){
  1171   00FBF2  5048               	movf	keypad_initialize@keypad_config^0,w,c
  1172   00FBF4  1049               	iorwf	(keypad_initialize@keypad_config+1)^0,w,c
  1173   00FBF6  A4D8               	btfss	status,2,c
  1174   00FBF8  EF00  F07E         	goto	u941
  1175   00FBFC  EF02  F07E         	goto	u940
  1176   00FC00                     u941:
  1177   00FC00  EF04  F07E         	goto	l325
  1178   00FC04                     u940:
  1179   00FC04                     
  1180                           ;ECU_layer/KEYPAD/keypad.c: 16:     }
  1181   00FC04  EF8C  F07E         	goto	l331
  1182   00FC08                     l325:
  1183                           
  1184                           ;ECU_layer/KEYPAD/keypad.c: 18:         pin_config_t temp;;ECU_layer/KEYPAD/keypad.c: 19
      +                          :         temp.direction = GPIO_DIRECTION_OUTPUT;
  1185   00FC08  9C51               	bcf	keypad_initialize@temp^0,6,c
  1186   00FC0A                     
  1187                           ;ECU_layer/KEYPAD/keypad.c: 20:         for(uint8 counter =0; counter < 4 ; counter++){
  1188   00FC0A  0E00               	movlw	0
  1189   00FC0C  6E4F               	movwf	keypad_initialize@counter^0,c
  1190   00FC0E                     l1693:
  1191                           
  1192                           ;ECU_layer/KEYPAD/keypad.c: 21:             temp.port = keypad_config->keypad_rows[count
      +                          er].keypad_pin_port;
  1193   00FC0E  504F               	movf	keypad_initialize@counter^0,w,c
  1194   00FC10  0D02               	mullw	2
  1195   00FC12  CFF3 F04A          	movff	prodl,??_keypad_initialize
  1196   00FC16  CFF4 F04B          	movff	prodh,??_keypad_initialize+1
  1197   00FC1A  504A               	movf	??_keypad_initialize^0,w,c
  1198   00FC1C  2448               	addwf	keypad_initialize@keypad_config^0,w,c
  1199   00FC1E  6ED9               	movwf	fsr2l,c
  1200   00FC20  504B               	movf	(??_keypad_initialize+1)^0,w,c
  1201   00FC22  2049               	addwfc	(keypad_initialize@keypad_config+1)^0,w,c
  1202   00FC24  6EDA               	movwf	fsr2h,c
  1203   00FC26  50DF               	movf	indf2,w,c
  1204   00FC28  6E4C               	movwf	(??_keypad_initialize+2)^0,c
  1205   00FC2A  5051               	movf	keypad_initialize@temp^0,w,c
  1206   00FC2C  184C               	xorwf	(??_keypad_initialize+2)^0,w,c
  1207   00FC2E  0BF8               	andlw	-8
  1208   00FC30  184C               	xorwf	(??_keypad_initialize+2)^0,w,c
  1209   00FC32  6E51               	movwf	keypad_initialize@temp^0,c
  1210                           
  1211                           ;ECU_layer/KEYPAD/keypad.c: 22:             temp.pin = keypad_config->keypad_rows[counte
      +                          r].keypad_pin;
  1212   00FC34  504F               	movf	keypad_initialize@counter^0,w,c
  1213   00FC36  0D02               	mullw	2
  1214   00FC38  CFF3 F04A          	movff	prodl,??_keypad_initialize
  1215   00FC3C  CFF4 F04B          	movff	prodh,??_keypad_initialize+1
  1216   00FC40  504A               	movf	??_keypad_initialize^0,w,c
  1217   00FC42  2448               	addwf	keypad_initialize@keypad_config^0,w,c
  1218   00FC44  6E4C               	movwf	(??_keypad_initialize+2)^0,c
  1219   00FC46  504B               	movf	(??_keypad_initialize+1)^0,w,c
  1220   00FC48  2049               	addwfc	(keypad_initialize@keypad_config+1)^0,w,c
  1221   00FC4A  6E4D               	movwf	(??_keypad_initialize+3)^0,c
  1222   00FC4C  0E01               	movlw	1
  1223   00FC4E  244C               	addwf	(??_keypad_initialize+2)^0,w,c
  1224   00FC50  6ED9               	movwf	fsr2l,c
  1225   00FC52  0E00               	movlw	0
  1226   00FC54  204D               	addwfc	(??_keypad_initialize+3)^0,w,c
  1227   00FC56  6EDA               	movwf	fsr2h,c
  1228   00FC58  50DF               	movf	indf2,w,c
  1229   00FC5A  6E4E               	movwf	(??_keypad_initialize+4)^0,c
  1230   00FC5C  464E               	rlncf	(??_keypad_initialize+4)^0,f,c
  1231   00FC5E  464E               	rlncf	(??_keypad_initialize+4)^0,f,c
  1232   00FC60  464E               	rlncf	(??_keypad_initialize+4)^0,f,c
  1233   00FC62  5051               	movf	keypad_initialize@temp^0,w,c
  1234   00FC64  184E               	xorwf	(??_keypad_initialize+4)^0,w,c
  1235   00FC66  0BC7               	andlw	-57
  1236   00FC68  184E               	xorwf	(??_keypad_initialize+4)^0,w,c
  1237   00FC6A  6E51               	movwf	keypad_initialize@temp^0,c
  1238   00FC6C                     
  1239                           ;ECU_layer/KEYPAD/keypad.c: 23:             gpio_pin_direction_initialize(&temp);
  1240   00FC6C  0E51               	movlw	low keypad_initialize@temp
  1241   00FC6E  6E3F               	movwf	gpio_pin_direction_initialize@pin_config^0,c
  1242   00FC70  0E00               	movlw	high keypad_initialize@temp
  1243   00FC72  6E40               	movwf	(gpio_pin_direction_initialize@pin_config+1)^0,c
  1244   00FC74  EC8D  F07E         	call	_gpio_pin_direction_initialize	;wreg free
  1245   00FC78                     
  1246                           ;ECU_layer/KEYPAD/keypad.c: 24:         }
  1247   00FC78  2A4F               	incf	keypad_initialize@counter^0,f,c
  1248   00FC7A  0E03               	movlw	3
  1249   00FC7C  644F               	cpfsgt	keypad_initialize@counter^0,c
  1250   00FC7E  EF43  F07E         	goto	u951
  1251   00FC82  EF45  F07E         	goto	u950
  1252   00FC86                     u951:
  1253   00FC86  EF07  F07E         	goto	l1693
  1254   00FC8A                     u950:
  1255   00FC8A                     
  1256                           ;ECU_layer/KEYPAD/keypad.c: 25:         temp.direction = GPIO_DIRECTION_INPUT;
  1257   00FC8A  8C51               	bsf	keypad_initialize@temp^0,6,c
  1258   00FC8C                     
  1259                           ;ECU_layer/KEYPAD/keypad.c: 26:         for(uint8 counter =0; counter < 4 ; counter++){
  1260   00FC8C  0E00               	movlw	0
  1261   00FC8E  6E50               	movwf	keypad_initialize@counter_644^0,c
  1262   00FC90                     l1707:
  1263                           
  1264                           ;ECU_layer/KEYPAD/keypad.c: 27:             temp.port = keypad_config->keypad_cols[count
      +                          er].keypad_pin_port;
  1265   00FC90  5050               	movf	keypad_initialize@counter_644^0,w,c
  1266   00FC92  0D02               	mullw	2
  1267   00FC94  CFF3 F04A          	movff	prodl,??_keypad_initialize
  1268   00FC98  CFF4 F04B          	movff	prodh,??_keypad_initialize+1
  1269   00FC9C  504A               	movf	??_keypad_initialize^0,w,c
  1270   00FC9E  2448               	addwf	keypad_initialize@keypad_config^0,w,c
  1271   00FCA0  6E4C               	movwf	(??_keypad_initialize+2)^0,c
  1272   00FCA2  504B               	movf	(??_keypad_initialize+1)^0,w,c
  1273   00FCA4  2049               	addwfc	(keypad_initialize@keypad_config+1)^0,w,c
  1274   00FCA6  6E4D               	movwf	(??_keypad_initialize+3)^0,c
  1275   00FCA8  0E08               	movlw	8
  1276   00FCAA  244C               	addwf	(??_keypad_initialize+2)^0,w,c
  1277   00FCAC  6ED9               	movwf	fsr2l,c
  1278   00FCAE  0E00               	movlw	0
  1279   00FCB0  204D               	addwfc	(??_keypad_initialize+3)^0,w,c
  1280   00FCB2  6EDA               	movwf	fsr2h,c
  1281   00FCB4  50DF               	movf	indf2,w,c
  1282   00FCB6  6E4E               	movwf	(??_keypad_initialize+4)^0,c
  1283   00FCB8  5051               	movf	keypad_initialize@temp^0,w,c
  1284   00FCBA  184E               	xorwf	(??_keypad_initialize+4)^0,w,c
  1285   00FCBC  0BF8               	andlw	-8
  1286   00FCBE  184E               	xorwf	(??_keypad_initialize+4)^0,w,c
  1287   00FCC0  6E51               	movwf	keypad_initialize@temp^0,c
  1288                           
  1289                           ;ECU_layer/KEYPAD/keypad.c: 28:             temp.pin = keypad_config->keypad_cols[counte
      +                          r].keypad_pin;
  1290   00FCC2  5050               	movf	keypad_initialize@counter_644^0,w,c
  1291   00FCC4  0D02               	mullw	2
  1292   00FCC6  CFF3 F04A          	movff	prodl,??_keypad_initialize
  1293   00FCCA  CFF4 F04B          	movff	prodh,??_keypad_initialize+1
  1294   00FCCE  504A               	movf	??_keypad_initialize^0,w,c
  1295   00FCD0  2448               	addwf	keypad_initialize@keypad_config^0,w,c
  1296   00FCD2  6E4C               	movwf	(??_keypad_initialize+2)^0,c
  1297   00FCD4  504B               	movf	(??_keypad_initialize+1)^0,w,c
  1298   00FCD6  2049               	addwfc	(keypad_initialize@keypad_config+1)^0,w,c
  1299   00FCD8  6E4D               	movwf	(??_keypad_initialize+3)^0,c
  1300   00FCDA  0E09               	movlw	9
  1301   00FCDC  244C               	addwf	(??_keypad_initialize+2)^0,w,c
  1302   00FCDE  6ED9               	movwf	fsr2l,c
  1303   00FCE0  0E00               	movlw	0
  1304   00FCE2  204D               	addwfc	(??_keypad_initialize+3)^0,w,c
  1305   00FCE4  6EDA               	movwf	fsr2h,c
  1306   00FCE6  50DF               	movf	indf2,w,c
  1307   00FCE8  6E4E               	movwf	(??_keypad_initialize+4)^0,c
  1308   00FCEA  464E               	rlncf	(??_keypad_initialize+4)^0,f,c
  1309   00FCEC  464E               	rlncf	(??_keypad_initialize+4)^0,f,c
  1310   00FCEE  464E               	rlncf	(??_keypad_initialize+4)^0,f,c
  1311   00FCF0  5051               	movf	keypad_initialize@temp^0,w,c
  1312   00FCF2  184E               	xorwf	(??_keypad_initialize+4)^0,w,c
  1313   00FCF4  0BC7               	andlw	-57
  1314   00FCF6  184E               	xorwf	(??_keypad_initialize+4)^0,w,c
  1315   00FCF8  6E51               	movwf	keypad_initialize@temp^0,c
  1316   00FCFA                     
  1317                           ;ECU_layer/KEYPAD/keypad.c: 29:             gpio_pin_direction_initialize(&temp);
  1318   00FCFA  0E51               	movlw	low keypad_initialize@temp
  1319   00FCFC  6E3F               	movwf	gpio_pin_direction_initialize@pin_config^0,c
  1320   00FCFE  0E00               	movlw	high keypad_initialize@temp
  1321   00FD00  6E40               	movwf	(gpio_pin_direction_initialize@pin_config+1)^0,c
  1322   00FD02  EC8D  F07E         	call	_gpio_pin_direction_initialize	;wreg free
  1323   00FD06                     
  1324                           ;ECU_layer/KEYPAD/keypad.c: 30:         }
  1325   00FD06  2A50               	incf	keypad_initialize@counter_644^0,f,c
  1326   00FD08  0E03               	movlw	3
  1327   00FD0A  6450               	cpfsgt	keypad_initialize@counter_644^0,c
  1328   00FD0C  EF8A  F07E         	goto	u961
  1329   00FD10  EF8C  F07E         	goto	u960
  1330   00FD14                     u961:
  1331   00FD14  EF48  F07E         	goto	l1707
  1332   00FD18                     u960:
  1333   00FD18                     l331:
  1334   00FD18  0012               	return		;funcret
  1335   00FD1A                     __end_of_keypad_initialize:
  1336                           	callstack 0
  1337                           
  1338 ;; *************** function _gpio_pin_direction_initialize *****************
  1339 ;; Defined at:
  1340 ;;		line 16 in file "MCAL_layer/GPIO/GPIO.c"
  1341 ;; Parameters:    Size  Location     Type
  1342 ;;  pin_config      2    0[COMRAM] PTR const struct .
  1343 ;;		 -> keypad_initialize@temp(1), led_intialize@temp(1), SVS_initialize@temp(1), 
  1344 ;; Auto vars:     Size  Location     Type
  1345 ;;  ret             1    8[COMRAM] unsigned char 
  1346 ;; Return value:  Size  Location     Type
  1347 ;;                  1    wreg      unsigned char 
  1348 ;; Registers used:
  1349 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1350 ;; Tracked objects:
  1351 ;;		On entry : 0/0
  1352 ;;		On exit  : 0/0
  1353 ;;		Unchanged: 0/0
  1354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1355 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1356 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1357 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1358 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1359 ;;Total ram usage:        9 bytes
  1360 ;; Hardware stack levels used: 1
  1361 ;; This function calls:
  1362 ;;		Nothing
  1363 ;; This function is called by:
  1364 ;;		_keypad_initialize
  1365 ;;		_SVS_initialize
  1366 ;;		_motor_initialize
  1367 ;;		_relay_initialize
  1368 ;;		_led_intialize
  1369 ;;		_button_initializa
  1370 ;;		_gpio_pin_initialize
  1371 ;; This function uses a non-reentrant model
  1372 ;;
  1373                           
  1374                           	psect	text6
  1375   00FD1A                     __ptext6:
  1376                           	callstack 0
  1377   00FD1A                     _gpio_pin_direction_initialize:
  1378                           	callstack 28
  1379   00FD1A                     
  1380                           ;MCAL_layer/GPIO/GPIO.c: 17:     Std_ReturnType ret = (Std_ReturnType)0x00;
  1381   00FD1A  0E00               	movlw	0
  1382   00FD1C  6E47               	movwf	gpio_pin_direction_initialize@ret^0,c
  1383   00FD1E                     
  1384                           ;MCAL_layer/GPIO/GPIO.c: 18:     if(pin_config == ((void*)0) || pin_config->pin > 8 -1 |
      +                          | pin_config->port > 5 -1){
  1385   00FD1E  503F               	movf	gpio_pin_direction_initialize@pin_config^0,w,c
  1386   00FD20  1040               	iorwf	(gpio_pin_direction_initialize@pin_config+1)^0,w,c
  1387   00FD22  B4D8               	btfsc	status,2,c
  1388   00FD24  EF96  F07E         	goto	u811
  1389   00FD28  EF98  F07E         	goto	u810
  1390   00FD2C                     u811:
  1391   00FD2C  EFB8  F07E         	goto	l1625
  1392   00FD30                     u810:
  1393   00FD30  C03F  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  1394   00FD34  C040  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  1395   00FD38  30DF               	rrcf	223,w,c
  1396   00FD3A  32E8               	rrcf	wreg,f,c
  1397   00FD3C  32E8               	rrcf	wreg,f,c
  1398   00FD3E  0B07               	andlw	7
  1399   00FD40  6E41               	movwf	??_gpio_pin_direction_initialize^0,c
  1400   00FD42  0E08               	movlw	8
  1401   00FD44  6041               	cpfslt	??_gpio_pin_direction_initialize^0,c
  1402   00FD46  EFA7  F07E         	goto	u821
  1403   00FD4A  EFA9  F07E         	goto	u820
  1404   00FD4E                     u821:
  1405   00FD4E  EFB8  F07E         	goto	l1625
  1406   00FD52                     u820:
  1407   00FD52  C03F  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  1408   00FD56  C040  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  1409   00FD5A  50DF               	movf	223,w,c
  1410   00FD5C  0B07               	andlw	7
  1411   00FD5E  6E41               	movwf	??_gpio_pin_direction_initialize^0,c
  1412   00FD60  0E04               	movlw	4
  1413   00FD62  6441               	cpfsgt	??_gpio_pin_direction_initialize^0,c
  1414   00FD64  EFB6  F07E         	goto	u831
  1415   00FD68  EFB8  F07E         	goto	u830
  1416   00FD6C                     u831:
  1417   00FD6C  EFBC  F07E         	goto	l1627
  1418   00FD70                     u830:
  1419   00FD70                     l1625:
  1420                           
  1421                           ;MCAL_layer/GPIO/GPIO.c: 19:         ret =(Std_ReturnType)0x01;
  1422   00FD70  0E01               	movlw	1
  1423   00FD72  6E47               	movwf	gpio_pin_direction_initialize@ret^0,c
  1424                           
  1425                           ;MCAL_layer/GPIO/GPIO.c: 20:     }
  1426   00FD74  EF2F  F07F         	goto	l192
  1427   00FD78                     l1627:
  1428                           
  1429                           ;MCAL_layer/GPIO/GPIO.c: 22:         if(pin_config->direction == GPIO_DIRECTION_OUTPUT){
  1430   00FD78  C03F  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  1431   00FD7C  C040  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  1432   00FD80  BCDF               	btfsc	indf2,6,c
  1433   00FD82  EFC5  F07E         	goto	u841
  1434   00FD86  EFC7  F07E         	goto	u840
  1435   00FD8A                     u841:
  1436   00FD8A  EFF8  F07E         	goto	l1631
  1437   00FD8E                     u840:
  1438   00FD8E                     
  1439                           ;MCAL_layer/GPIO/GPIO.c: 23:         ((*((volatile uint8 *)(tris_registers[pin_config->p
      +                          ort]))) &= (~(0x01 << pin_config->pin)));
  1440   00FD8E  C03F  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  1441   00FD92  C040  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  1442   00FD96  30DF               	rrcf	223,w,c
  1443   00FD98  32E8               	rrcf	wreg,f,c
  1444   00FD9A  32E8               	rrcf	wreg,f,c
  1445   00FD9C  0B07               	andlw	7
  1446   00FD9E  6E41               	movwf	??_gpio_pin_direction_initialize^0,c
  1447   00FDA0  0E01               	movlw	1
  1448   00FDA2  6E42               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  1449   00FDA4  2A41               	incf	??_gpio_pin_direction_initialize^0,f,c
  1450   00FDA6  EFD7  F07E         	goto	u854
  1451   00FDAA                     u855:
  1452   00FDAA  90D8               	bcf	status,0,c
  1453   00FDAC  3642               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  1454   00FDAE                     u854:
  1455   00FDAE  2E41               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  1456   00FDB0  EFD5  F07E         	goto	u855
  1457   00FDB4  5042               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1458   00FDB6  0AFF               	xorlw	255
  1459   00FDB8  6E43               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  1460   00FDBA  C03F  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  1461   00FDBE  C040  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  1462   00FDC2  50DF               	movf	223,w,c
  1463   00FDC4  0B07               	andlw	7
  1464   00FDC6  6E44               	movwf	(??_gpio_pin_direction_initialize+3)^0,c
  1465   00FDC8  5044               	movf	(??_gpio_pin_direction_initialize+3)^0,w,c
  1466   00FDCA  0D02               	mullw	2
  1467   00FDCC  0E25               	movlw	low _tris_registers
  1468   00FDCE  24F3               	addwf	243,w,c
  1469   00FDD0  6ED9               	movwf	fsr2l,c
  1470   00FDD2  0E00               	movlw	high _tris_registers
  1471   00FDD4  20F4               	addwfc	prodh,w,c
  1472   00FDD6  6EDA               	movwf	fsr2h,c
  1473   00FDD8  CFDE F045          	movff	postinc2,??_gpio_pin_direction_initialize+4
  1474   00FDDC  CFDD F046          	movff	postdec2,??_gpio_pin_direction_initialize+5
  1475   00FDE0  C045  FFD9         	movff	??_gpio_pin_direction_initialize+4,fsr2l
  1476   00FDE4  C046  FFDA         	movff	??_gpio_pin_direction_initialize+5,fsr2h
  1477   00FDE8  5043               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  1478   00FDEA  16DF               	andwf	indf2,f,c
  1479                           
  1480                           ;MCAL_layer/GPIO/GPIO.c: 25:         }
  1481   00FDEC  EF2F  F07F         	goto	l192
  1482   00FDF0                     l1631:
  1483   00FDF0  C03F  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  1484   00FDF4  C040  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  1485   00FDF8  ACDF               	btfss	indf2,6,c
  1486   00FDFA  EF01  F07F         	goto	u861
  1487   00FDFE  EF03  F07F         	goto	u860
  1488   00FE02                     u861:
  1489   00FE02  EFB8  F07E         	goto	l1625
  1490   00FE06                     u860:
  1491   00FE06                     
  1492                           ;MCAL_layer/GPIO/GPIO.c: 27:             ((*((volatile uint8 *)(tris_registers[pin_confi
      +                          g->port]))) |= (0x01 << pin_config->pin));
  1493   00FE06  C03F  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  1494   00FE0A  C040  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  1495   00FE0E  30DF               	rrcf	223,w,c
  1496   00FE10  32E8               	rrcf	wreg,f,c
  1497   00FE12  32E8               	rrcf	wreg,f,c
  1498   00FE14  0B07               	andlw	7
  1499   00FE16  6E41               	movwf	??_gpio_pin_direction_initialize^0,c
  1500   00FE18  0E01               	movlw	1
  1501   00FE1A  6E42               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  1502   00FE1C  2A41               	incf	??_gpio_pin_direction_initialize^0,f,c
  1503   00FE1E  EF13  F07F         	goto	u874
  1504   00FE22                     u875:
  1505   00FE22  90D8               	bcf	status,0,c
  1506   00FE24  3642               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  1507   00FE26                     u874:
  1508   00FE26  2E41               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  1509   00FE28  EF11  F07F         	goto	u875
  1510   00FE2C  C03F  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  1511   00FE30  C040  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  1512   00FE34  50DF               	movf	223,w,c
  1513   00FE36  0B07               	andlw	7
  1514   00FE38  6E43               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  1515   00FE3A  5043               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  1516   00FE3C  0D02               	mullw	2
  1517   00FE3E  0E25               	movlw	low _tris_registers
  1518   00FE40  24F3               	addwf	243,w,c
  1519   00FE42  6ED9               	movwf	fsr2l,c
  1520   00FE44  0E00               	movlw	high _tris_registers
  1521   00FE46  20F4               	addwfc	prodh,w,c
  1522   00FE48  6EDA               	movwf	fsr2h,c
  1523   00FE4A  CFDE F044          	movff	postinc2,??_gpio_pin_direction_initialize+3
  1524   00FE4E  CFDD F045          	movff	postdec2,??_gpio_pin_direction_initialize+4
  1525   00FE52  C044  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  1526   00FE56  C045  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  1527   00FE5A  5042               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1528   00FE5C  12DF               	iorwf	indf2,f,c
  1529   00FE5E                     l192:
  1530                           
  1531                           ;MCAL_layer/GPIO/GPIO.c: 34:     return ret;
  1532   00FE5E  5047               	movf	gpio_pin_direction_initialize@ret^0,w,c
  1533   00FE60  0012               	return		;funcret
  1534   00FE62                     __end_of_gpio_pin_direction_initialize:
  1535                           	callstack 0
  1536   000000                     
  1537                           	psect	rparam
  1538   000000                     
  1539                           	psect	idloc
  1540                           
  1541                           ;Config register IDLOC0 @ 0x200000
  1542                           ;	unspecified, using default values
  1543   200000                     	org	2097152
  1544   200000  FF                 	db	255
  1545                           
  1546                           ;Config register IDLOC1 @ 0x200001
  1547                           ;	unspecified, using default values
  1548   200001                     	org	2097153
  1549   200001  FF                 	db	255
  1550                           
  1551                           ;Config register IDLOC2 @ 0x200002
  1552                           ;	unspecified, using default values
  1553   200002                     	org	2097154
  1554   200002  FF                 	db	255
  1555                           
  1556                           ;Config register IDLOC3 @ 0x200003
  1557                           ;	unspecified, using default values
  1558   200003                     	org	2097155
  1559   200003  FF                 	db	255
  1560                           
  1561                           ;Config register IDLOC4 @ 0x200004
  1562                           ;	unspecified, using default values
  1563   200004                     	org	2097156
  1564   200004  FF                 	db	255
  1565                           
  1566                           ;Config register IDLOC5 @ 0x200005
  1567                           ;	unspecified, using default values
  1568   200005                     	org	2097157
  1569   200005  FF                 	db	255
  1570                           
  1571                           ;Config register IDLOC6 @ 0x200006
  1572                           ;	unspecified, using default values
  1573   200006                     	org	2097158
  1574   200006  FF                 	db	255
  1575                           
  1576                           ;Config register IDLOC7 @ 0x200007
  1577                           ;	unspecified, using default values
  1578   200007                     	org	2097159
  1579   200007  FF                 	db	255
  1580                           
  1581                           	psect	config
  1582                           
  1583                           ; Padding undefined space
  1584   300000                     	org	3145728
  1585   300000  FF                 	db	255
  1586                           
  1587                           ;Config register CONFIG1H @ 0x300001
  1588                           ;	Oscillator Selection bits
  1589                           ;	OSC = HS, HS oscillator
  1590                           ;	Fail-Safe Clock Monitor Enable bit
  1591                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1592                           ;	Internal/External Oscillator Switchover bit
  1593                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1594   300001                     	org	3145729
  1595   300001  02                 	db	2
  1596                           
  1597                           ;Config register CONFIG2L @ 0x300002
  1598                           ;	Power-up Timer Enable bit
  1599                           ;	PWRT = OFF, PWRT disabled
  1600                           ;	Brown-out Reset Enable bits
  1601                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1602                           ;	Brown Out Reset Voltage bits
  1603                           ;	BORV = 1, 
  1604   300002                     	org	3145730
  1605   300002  09                 	db	9
  1606                           
  1607                           ;Config register CONFIG2H @ 0x300003
  1608                           ;	Watchdog Timer Enable bit
  1609                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1610                           ;	Watchdog Timer Postscale Select bits
  1611                           ;	WDTPS = 32768, 1:32768
  1612   300003                     	org	3145731
  1613   300003  1E                 	db	30
  1614                           
  1615                           ; Padding undefined space
  1616   300004                     	org	3145732
  1617   300004  FF                 	db	255
  1618                           
  1619                           ;Config register CONFIG3H @ 0x300005
  1620                           ;	CCP2 MUX bit
  1621                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1622                           ;	PORTB A/D Enable bit
  1623                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1624                           ;	Low-Power Timer1 Oscillator Enable bit
  1625                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1626                           ;	MCLR Pin Enable bit
  1627                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1628   300005                     	org	3145733
  1629   300005  81                 	db	129
  1630                           
  1631                           ;Config register CONFIG4L @ 0x300006
  1632                           ;	Stack Full/Underflow Reset Enable bit
  1633                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1634                           ;	Single-Supply ICSP Enable bit
  1635                           ;	LVP = OFF, Single-Supply ICSP disabled
  1636                           ;	Extended Instruction Set Enable bit
  1637                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1638                           ;	Background Debugger Enable bit
  1639                           ;	DEBUG = 0x1, unprogrammed default
  1640   300006                     	org	3145734
  1641   300006  81                 	db	129
  1642                           
  1643                           ; Padding undefined space
  1644   300007                     	org	3145735
  1645   300007  FF                 	db	255
  1646                           
  1647                           ;Config register CONFIG5L @ 0x300008
  1648                           ;	Code Protection bit
  1649                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1650                           ;	Code Protection bit
  1651                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1652                           ;	Code Protection bit
  1653                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1654                           ;	Code Protection bit
  1655                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1656   300008                     	org	3145736
  1657   300008  0F                 	db	15
  1658                           
  1659                           ;Config register CONFIG5H @ 0x300009
  1660                           ;	Boot Block Code Protection bit
  1661                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1662                           ;	Data EEPROM Code Protection bit
  1663                           ;	CPD = OFF, Data EEPROM not code-protected
  1664   300009                     	org	3145737
  1665   300009  C0                 	db	192
  1666                           
  1667                           ;Config register CONFIG6L @ 0x30000A
  1668                           ;	Write Protection bit
  1669                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1670                           ;	Write Protection bit
  1671                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1672                           ;	Write Protection bit
  1673                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1674                           ;	Write Protection bit
  1675                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1676   30000A                     	org	3145738
  1677   30000A  0F                 	db	15
  1678                           
  1679                           ;Config register CONFIG6H @ 0x30000B
  1680                           ;	Configuration Register Write Protection bit
  1681                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1682                           ;	Boot Block Write Protection bit
  1683                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1684                           ;	Data EEPROM Write Protection bit
  1685                           ;	WRTD = OFF, Data EEPROM not write-protected
  1686   30000B                     	org	3145739
  1687   30000B  E0                 	db	224
  1688                           
  1689                           ;Config register CONFIG7L @ 0x30000C
  1690                           ;	Table Read Protection bit
  1691                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1692                           ;	Table Read Protection bit
  1693                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1694                           ;	Table Read Protection bit
  1695                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1696                           ;	Table Read Protection bit
  1697                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1698   30000C                     	org	3145740
  1699   30000C  0F                 	db	15
  1700                           
  1701                           ;Config register CONFIG7H @ 0x30000D
  1702                           ;	Boot Block Table Read Protection bit
  1703                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1704   30000D                     	org	3145741
  1705   30000D  40                 	db	64
  1706                           tosu	equ	0xFFF
  1707                           tosh	equ	0xFFE
  1708                           tosl	equ	0xFFD
  1709                           stkptr	equ	0xFFC
  1710                           pclatu	equ	0xFFB
  1711                           pclath	equ	0xFFA
  1712                           pcl	equ	0xFF9
  1713                           tblptru	equ	0xFF8
  1714                           tblptrh	equ	0xFF7
  1715                           tblptrl	equ	0xFF6
  1716                           tablat	equ	0xFF5
  1717                           prodh	equ	0xFF4
  1718                           prodl	equ	0xFF3
  1719                           indf0	equ	0xFEF
  1720                           postinc0	equ	0xFEE
  1721                           postdec0	equ	0xFED
  1722                           preinc0	equ	0xFEC
  1723                           plusw0	equ	0xFEB
  1724                           fsr0h	equ	0xFEA
  1725                           fsr0l	equ	0xFE9
  1726                           wreg	equ	0xFE8
  1727                           indf1	equ	0xFE7
  1728                           postinc1	equ	0xFE6
  1729                           postdec1	equ	0xFE5
  1730                           preinc1	equ	0xFE4
  1731                           plusw1	equ	0xFE3
  1732                           fsr1h	equ	0xFE2
  1733                           fsr1l	equ	0xFE1
  1734                           bsr	equ	0xFE0
  1735                           indf2	equ	0xFDF
  1736                           postinc2	equ	0xFDE
  1737                           postdec2	equ	0xFDD
  1738                           preinc2	equ	0xFDC
  1739                           plusw2	equ	0xFDB
  1740                           fsr2h	equ	0xFDA
  1741                           fsr2l	equ	0xFD9
  1742                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        62
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     26      94
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    keypad_get_value@value	PTR unsigned char  size(2) Largest target is 1
		 -> value(COMRAM[1]), 

    keypad_get_value@keypad_config	PTR const struct . size(2) Largest target is 16
		 -> keypad(COMRAM[16]), 

    keypad_initialize@keypad_config	PTR const struct . size(2) Largest target is 16
		 -> keypad(COMRAM[16]), 

    gpio_pin_read_logic@logic	PTR enum E2798 size(2) Largest target is 1
		 -> keypad_get_value@btn_state(COMRAM[1]), button_read_state@temp_logic(COMRAM[1]), 

    gpio_pin_read_logic@pin_config	PTR struct . size(2) Largest target is 1
		 -> keypad_get_value@temp_col(COMRAM[1]), 

    gpio_pin_write_logic@pin_config	PTR struct . size(2) Largest target is 1
		 -> keypad_get_value@temp_row(COMRAM[1]), led_turn_off@temp(COMRAM[1]), led_turn_on@temp(COMRAM[1]), led_intialize@temp(COMRAM[1]), 
		 -> SVS_print_pov@temp(COMRAM[1]), 

    gpio_pin_direction_initialize@pin_config	PTR const struct . size(2) Largest target is 1
		 -> keypad_initialize@temp(COMRAM[1]), led_intialize@temp(COMRAM[1]), SVS_initialize@temp(COMRAM[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATB(BITBIGSFRlh[1]), 
		 -> LATA(BITBIGSFRll[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), 
		 -> PORTA(BITBIGSFRll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRhl[1]), TRISD(BITBIGSFRhl[1]), TRISC(BITBIGSFRhl[1]), TRISB(BITBIGSFRhl[1]), 
		 -> TRISA(BITBIGSFRll[1]), 


Critical Paths under _main in COMRAM

    _main->_keypad_get_value
    _keypad_get_value->_gpio_pin_write_logic
    _appliction_intialize->_keypad_initialize
    _keypad_initialize->_gpio_pin_direction_initialize

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    5492
                                             24 COMRAM     2     2      0
               _appliction_intialize
                   _keypad_get_value
 ---------------------------------------------------------------------------------
 (1) _keypad_get_value                                    15    11      4    4083
                                             10 COMRAM    14    10      4
                _gpio_pin_read_logic
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                10     7      3    2937
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_read_logic                                 10     6      4     466
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (1) _appliction_intialize                                 0     0      0    1409
                  _keypad_initialize
 ---------------------------------------------------------------------------------
 (2) _keypad_initialize                                   11     9      2    1409
                                              9 COMRAM    10     8      2
      _gpio_pin_direction_initialize
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_initialize                        9     7      2     983
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _appliction_intialize
     _keypad_initialize
       _gpio_pin_direction_initialize
   _keypad_get_value
     _gpio_pin_read_logic
     _gpio_pin_write_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      41        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     1A      5E       1       74.0%
BITBIGSFRhh         3D      0       0      37        0.0%
BITBIGSFRhl         2A      0       0      38        0.0%
BITBIGSFRlh          4      0       0      39        0.0%
BITBIGSFRll          4      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5E      26        0.0%
DATA                 0      0      5E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Mar 12 19:38:04 2023

                                    l221 FAD2                                      l214 FBF0  
                                    l314 F90E                                      l331 FD18  
                                    l325 FC08                                      l343 FFFE  
                                    l192 FE5E                                      l328 FC8A  
                                    l197 FE60                                      u810 FD30  
                                    u811 FD2C                                      u820 FD52  
                                    u821 FD4E                                      u830 FD70  
                                    u910 FA38                                      u831 FD6C  
                                    u911 FA34                                      u840 FD8E  
                                    u920 FA4A                                      u904 FB78  
                                    u841 FD8A                                      u921 FA46  
                                    u905 FB74                                      u860 FE06  
                                    u940 FC04                                      u861 FE02  
                                    u941 FC00                                      u854 FDAE  
                                    u950 FC8A                                      u934 FA9C  
                                    u855 FDAA                                      u951 FC86  
                                    u935 FA98                                      u960 FD18  
                                    u880 FAEA                                      u961 FD14  
                                    u881 FAE6                                      u874 FE26  
                                    u970 FE74                                      u875 FE22  
                                    u971 FE70                                      u980 FE86  
                                    u981 FE82                                      u894 FB12  
                                    u990 FF8E                                      u895 FB0E  
                                    u991 FF8A                                      _ret 0059  
                                    prod 000FF3                                      wreg 000FE8  
                                   l2031 F984                                     l2041 F9D8  
                                   l2033 F988                                     l2043 F9F0  
                                   l2035 F99C                                     l2053 FBD8  
                                   l2045 FA02                                     l2037 F9AE  
                                   l2047 FA1A                                     l2039 F9C6  
                                   l1621 FD30                                     l1701 FC8C  
                                   l1631 FDF0                                     l1623 FD52  
                                   l1711 FD06                                     l1633 FE06  
                                   l1625 FD70                                     l1617 FD1A  
                                   l1713 FD08                                     l1641 FAD8  
                                   l1721 FE62                                     l1627 FD78  
                                   l1619 FD1E                                     l1707 FC90  
                                   l1715 F8FA                                     l1651 FBB6  
                                   l1643 FAEA                                     l1723 FE74  
                                   l1629 FD8E                                     l1709 FCFA  
                                   l1717 F902                                     l1645 FAF2  
                                   l1733 FE8E                                     l1725 FE86  
                                   l1671 FA38                                     l1647 FB4A  
                                   l1639 FAD4                                     l1751 FFB6  
                                   l1743 FF00                                     l1735 FEEC  
                                   l1727 FE8A                                     l1719 FE62  
                                   l1681 FBF2                                     l1673 FA4A  
                                   l1649 FB58                                     l1657 FBC4  
                                   l1761 FFEC                                     l1745 FF6A  
                                   l1737 FEFC                                     l1683 FBF2  
                                   l1675 FA4E                                     l1667 FA26  
                                   l1659 FBEE                                     l1763 FFEE  
                                   l1755 FFCA                                     l1747 FF7E  
                                   l1693 FC0E                                     l1685 FC04  
                                   l1677 FAB0                                     l1669 FA26  
                                   l1757 FFCC                                     l1749 FF8E  
                                   l1695 FC6C                                     l1687 FC0A  
                                   l1759 FFDC                                     l1697 FC78  
                                   l1699 FC7A                                     u1000 FFDC  
                                   u1001 FFD8                                     u1010 FFFE  
                                   u1011 FFFA                                     _LATA 000F89  
                                   u1350 F9AE                                     _LATB 000F8A  
                                   u1407 FA0C                                     u1351 F9AA  
                                   _LATC 000F8B                                     u1360 F9D8  
                                   _LATD 000F8C                                     u1361 F9D4  
                                   _LATE 000F8D                                     u1370 FA02  
                                   u1371 F9FE                                     u1387 F9B8  
                                   u1397 F9E2                    keypad_initialize@temp 0051  
                                   _main F984                                     fsr1h 000FE2  
                                   fsr2h 000FDA                                     indf1 000FE7  
                                   indf2 000FDF                                     fsr1l 000FE1  
                                   fsr2l 000FD9                                     prodh 000FF4  
                                   prodl 000FF3                                     start 0000  
                           ___param_bank 000000             keypad_initialize@counter_644 0050  
                   _gpio_pin_write_logic FAD4                                    ?_main 003F  
                                  _PORTA 000F80                                    _PORTB 000F81  
                                  _PORTC 000F82                                    _PORTD 000F83  
                                  _PORTE 000F84                                    _TRISA 000F92  
                                  _TRISB 000F93                                    _TRISC 000F94  
                                  _TRISD 000F95                                    _TRISE 000F96  
         keypad_initialize@keypad_config 0048                 __end_of_keypad_get_value 0000  
           __end_of_appliction_intialize F910                                    _value 005E  
                                  tablat 000FF5                                    status 000FD8  
         ?_gpio_pin_direction_initialize 003F                          __initialization F910  
                           __end_of_main FA26            gpio_pin_read_logic@pin_config 003F  
                  ?_gpio_pin_write_logic 003F                 gpio_pin_read_logic@logic 0041  
                          _lat_registers 0011                                   ??_main 0057  
                          __activetblptr 000002                         led_turn_on@F2895 005C  
                                 _ADCON0 000FC2                                   _ADCON1 000FC1  
              keypad_get_value@btn_state 0053                                   _keypad 002F  
                                 isa$std 000001                                   _values 0001  
                           __pdataCOMRAM 0001                                   tblptrh 000FF7  
                                 tblptrl 000FF6                                   tblptru 000FF8  
                             __accesstop 0080                  __end_of__initialization F93C  
                          ___rparam_used 000001                   ??_gpio_pin_write_logic 0042  
                         __pcstackCOMRAM 003F                     _appliction_intialize F8FA  
          keypad_get_value@keypad_config 0049                 keypad_get_value@temp_col 0052  
               keypad_get_value@temp_row 0054                    ?_appliction_intialize 003F  
                      led_turn_off@F2900 005B                          led_toggle@F2905 005A  
                      ?_keypad_get_value 0049                       ??_keypad_get_value 004D  
                         _tris_registers 0025                                  __Hparam 0000  
                                __Lparam 0000                 keypad_initialize@counter 004F  
                    _gpio_pin_read_logic FA26                                  __pcinit F910  
                                __ramtop 1000                                  __ptext0 F984  
                                __ptext1 FE62                                  __ptext2 FAD4  
                                __ptext3 FA26                                  __ptext4 F8FA  
                                __ptext5 FBF2                                  __ptext6 FD1A  
        ??_gpio_pin_direction_initialize 0041                     ?_gpio_pin_read_logic 003F  
                   end_of_initialization F93C                            __Lmediumconst 0000  
                 ??_appliction_intialize 0052                                  postdec1 000FE5  
                                postdec2 000FDD                                  postinc0 000FEE  
                                postinc2 000FDE                    ??_gpio_pin_read_logic 0043  
                  keypad_get_value@value 004B                            __pidataCOMRAM F946  
                    start_initialization F910    __end_of_gpio_pin_direction_initialize FE62  
          _gpio_pin_direction_initialize FD1A                              __pbssCOMRAM 0059  
         gpio_pin_write_logic@pin_config 003F                gpio_pin_write_logic@logic 0041  
       gpio_pin_direction_initialize@ret 0047  gpio_pin_direction_initialize@pin_config 003F  
                gpio_pin_write_logic@ret 0048                                copy_data0 F924  
                      _keypad_initialize FBF2                       ?_keypad_initialize 0048  
                               __Hrparam 0000                                 __Lrparam 0000  
                    ??_keypad_initialize 004A              __end_of_gpio_pin_read_logic FAD4  
                     led_intialize@F2890 005D                __end_of_keypad_initialize FD1A  
                       _keypad_get_value FE62                                 isa$xinst 000000  
           __end_of_gpio_pin_write_logic FBF2                           _port_registers 001B  
            keypad_get_value@counter_col 0056              keypad_get_value@counter_row 0055  
