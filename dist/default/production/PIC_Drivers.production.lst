

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Mar 11 22:56:17 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    27   000000                     
    28                           ; Version 2.40
    29                           ; Generated 17/11/2021 GMT
    30                           ; 
    31                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution. Publication is not required when
    45                           ;        this file is used in an embedded application.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC18F4620 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63   000000                     
    64                           	psect	idataCOMRAM
    65   00F4C0                     __pidataCOMRAM:
    66                           	callstack 0
    67                           
    68                           ;initializer for _lat_registers
    69   00F4C0  89                 	db	137
    70   00F4C1  0F                 	db	15
    71   00F4C2  8A                 	db	138
    72   00F4C3  0F                 	db	15
    73   00F4C4  8B                 	db	139
    74   00F4C5  0F                 	db	15
    75   00F4C6  8C                 	db	140
    76   00F4C7  0F                 	db	15
    77   00F4C8  8D                 	db	141
    78   00F4C9  0F                 	db	15
    79                           
    80                           ;initializer for _port_registers
    81   00F4CA  80                 	db	128
    82   00F4CB  0F                 	db	15
    83   00F4CC  81                 	db	129
    84   00F4CD  0F                 	db	15
    85   00F4CE  82                 	db	130
    86   00F4CF  0F                 	db	15
    87   00F4D0  83                 	db	131
    88   00F4D1  0F                 	db	15
    89   00F4D2  84                 	db	132
    90   00F4D3  0F                 	db	15
    91                           
    92                           ;initializer for _tris_registers
    93   00F4D4  92                 	db	146
    94   00F4D5  0F                 	db	15
    95   00F4D6  93                 	db	147
    96   00F4D7  0F                 	db	15
    97   00F4D8  94                 	db	148
    98   00F4D9  0F                 	db	15
    99   00F4DA  95                 	db	149
   100   00F4DB  0F                 	db	15
   101   00F4DC  96                 	db	150
   102   00F4DD  0F                 	db	15
   103                           
   104                           ;initializer for _seven_seg
   105   00F4DE  03                 	db	3
   106   00F4DF  00                 	db	0
   107   00F4E0  02                 	db	2
   108   00F4E1  06                 	db	6
   109   00F4E2  02                 	db	2
   110   00F4E3  07                 	db	7
   111   00F4E4  03                 	db	3
   112   00F4E5  04                 	db	4
   113   00F4E6  03                 	db	3
   114   00F4E7  05                 	db	5
   115   00F4E8  03                 	db	3
   116   00F4E9  06                 	db	6
   117   00F4EA  03                 	db	3
   118   00F4EB  07                 	db	7
   119   000000                     _LATA	set	3977
   120   000000                     _PORTE	set	3972
   121   000000                     _PORTD	set	3971
   122   000000                     _PORTC	set	3970
   123   000000                     _PORTB	set	3969
   124   000000                     _PORTA	set	3968
   125   000000                     _TRISA	set	3986
   126   000000                     _ADCON1	set	4033
   127   000000                     _ADCON0	set	4034
   128   000000                     _TRISE	set	3990
   129   000000                     _TRISD	set	3989
   130   000000                     _TRISC	set	3988
   131   000000                     _TRISB	set	3987
   132   000000                     _LATE	set	3981
   133   000000                     _LATD	set	3980
   134   000000                     _LATC	set	3979
   135   000000                     _LATB	set	3978
   136                           
   137                           ; #config settings
   138                           
   139                           	psect	cinit
   140   00F4EC                     __pcinit:
   141                           	callstack 0
   142   00F4EC                     start_initialization:
   143                           	callstack 0
   144   00F4EC                     __initialization:
   145                           	callstack 0
   146                           
   147                           ; Initialize objects allocated to COMRAM (44 bytes)
   148                           ; load TBLPTR registers with __pidataCOMRAM
   149   00F4EC  0EC0               	movlw	low __pidataCOMRAM
   150   00F4EE  6EF6               	movwf	tblptrl,c
   151   00F4F0  0EF4               	movlw	high __pidataCOMRAM
   152   00F4F2  6EF7               	movwf	tblptrh,c
   153   00F4F4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   154   00F4F6  6EF8               	movwf	tblptru,c
   155   00F4F8  EE00  F001         	lfsr	0,__pdataCOMRAM
   156   00F4FC  EE10 F02C          	lfsr	1,44
   157   00F500                     copy_data0:
   158   00F500  0009               	tblrd		*+
   159   00F502  CFF5 FFEE          	movff	tablat,postinc0
   160   00F506  50E5               	movf	postdec1,w,c
   161   00F508  50E1               	movf	fsr1l,w,c
   162   00F50A  E1FA               	bnz	copy_data0
   163                           
   164                           ; Clear objects allocated to COMRAM (11 bytes)
   165   00F50C  EE00  F057         	lfsr	0,__pbssCOMRAM
   166   00F510  0E0B               	movlw	11
   167   00F512                     clear_0:
   168   00F512  6AEE               	clrf	postinc0,c
   169   00F514  06E8               	decf	wreg,f,c
   170   00F516  E1FD               	bnz	clear_0
   171   00F518                     end_of_initialization:
   172                           	callstack 0
   173   00F518                     __end_of__initialization:
   174                           	callstack 0
   175   00F518  0E00               	movlw	low (__Lmediumconst shr (0+16))
   176   00F51A  6EF8               	movwf	tblptru,c
   177   00F51C  0100               	movlb	0
   178   00F51E  EF2A  F07D         	goto	_main	;jump to C main() function
   179                           
   180                           	psect	bssCOMRAM
   181   000057                     __pbssCOMRAM:
   182                           	callstack 0
   183   000057                     	ds	6
   184   00005D                     _ret:
   185                           	callstack 0
   186   00005D                     	ds	1
   187   00005E                     led_toggle@F2905:
   188                           	callstack 0
   189   00005E                     	ds	1
   190   00005F                     led_turn_off@F2900:
   191                           	callstack 0
   192   00005F                     	ds	1
   193   000060                     led_turn_on@F2895:
   194                           	callstack 0
   195   000060                     	ds	1
   196   000061                     led_intialize@F2890:
   197                           	callstack 0
   198   000061                     	ds	1
   199                           
   200                           	psect	dataCOMRAM
   201   000001                     __pdataCOMRAM:
   202                           	callstack 0
   203   000001                     _lat_registers:
   204                           	callstack 0
   205   000001                     	ds	10
   206   00000B                     _port_registers:
   207                           	callstack 0
   208   00000B                     	ds	10
   209   000015                     _tris_registers:
   210                           	callstack 0
   211   000015                     	ds	10
   212   00001F                     _seven_seg:
   213                           	callstack 0
   214   00001F                     	ds	14
   215                           
   216                           	psect	cstackCOMRAM
   217   00002D                     __pcstackCOMRAM:
   218                           	callstack 0
   219   00002D                     ?___awdiv:
   220                           	callstack 0
   221   00002D                     ?___awmod:
   222                           	callstack 0
   223   00002D                     gpio_pin_direction_initialize@pin_config:
   224                           	callstack 0
   225   00002D                     gpio_pin_write_logic@pin_config:
   226                           	callstack 0
   227   00002D                     gpio_port_low_nibble_direction_initialize@pin_config:
   228                           	callstack 0
   229   00002D                     gpio_port_low_nibble_write_logic@pin_config:
   230                           	callstack 0
   231   00002D                     gpio_port_high_nibble_direction_initialize@pin_config:
   232                           	callstack 0
   233   00002D                     gpio_port_high_nibble_write_logic@pin_config:
   234                           	callstack 0
   235   00002D                     ___awdiv@dividend:
   236                           	callstack 0
   237   00002D                     ___awmod@dividend:
   238                           	callstack 0
   239                           
   240                           ; 2 bytes @ 0x0
   241   00002D                     	ds	2
   242   00002F                     ??_gpio_pin_direction_initialize:
   243   00002F                     gpio_pin_write_logic@logic:
   244                           	callstack 0
   245   00002F                     gpio_port_low_nibble_direction_initialize@data:
   246                           	callstack 0
   247   00002F                     gpio_port_low_nibble_write_logic@data:
   248                           	callstack 0
   249   00002F                     gpio_port_high_nibble_direction_initialize@data:
   250                           	callstack 0
   251   00002F                     gpio_port_high_nibble_write_logic@data:
   252                           	callstack 0
   253   00002F                     ___awdiv@divisor:
   254                           	callstack 0
   255   00002F                     ___awmod@divisor:
   256                           	callstack 0
   257                           
   258                           ; 2 bytes @ 0x2
   259   00002F                     	ds	1
   260   000030                     ??_gpio_port_low_nibble_direction_initialize:
   261   000030                     ??_gpio_port_high_nibble_direction_initialize:
   262   000030                     ??_gpio_port_low_nibble_write_logic:
   263   000030                     ??_gpio_port_high_nibble_write_logic:
   264   000030                     ??_gpio_pin_write_logic:
   265                           
   266                           ; 1 bytes @ 0x3
   267   000030                     	ds	1
   268   000031                     ___awdiv@counter:
   269                           	callstack 0
   270   000031                     ___awmod@counter:
   271                           	callstack 0
   272                           
   273                           ; 1 bytes @ 0x4
   274   000031                     	ds	1
   275   000032                     ___awdiv@sign:
   276                           	callstack 0
   277   000032                     ___awmod@sign:
   278                           	callstack 0
   279                           
   280                           ; 1 bytes @ 0x5
   281   000032                     	ds	1
   282   000033                     ___awdiv@quotient:
   283                           	callstack 0
   284                           
   285                           ; 2 bytes @ 0x6
   286   000033                     	ds	2
   287   000035                     gpio_pin_direction_initialize@ret:
   288                           	callstack 0
   289                           
   290                           ; 1 bytes @ 0x8
   291   000035                     	ds	1
   292   000036                     gpio_pin_write_logic@ret:
   293                           	callstack 0
   294                           
   295                           ; 1 bytes @ 0x9
   296   000036                     	ds	1
   297   000037                     SVS_initialize@Seven_SEG:
   298                           	callstack 0
   299   000037                     SVS_print@Seven_SEG:
   300                           	callstack 0
   301                           
   302                           ; 2 bytes @ 0xA
   303   000037                     	ds	2
   304   000039                     ??_SVS_initialize:
   305   000039                     SVS_print@data:
   306                           	callstack 0
   307                           
   308                           ; 1 bytes @ 0xC
   309   000039                     	ds	1
   310   00003A                     ??_SVS_print:
   311                           
   312                           ; 1 bytes @ 0xD
   313   00003A                     	ds	1
   314   00003B                     SVS_print@temp:
   315                           	callstack 0
   316                           
   317                           ; 1 bytes @ 0xE
   318   00003B                     	ds	1
   319   00003C                     SVS_print_pov@Seven_SEG:
   320                           	callstack 0
   321                           
   322                           ; 2 bytes @ 0xF
   323   00003C                     	ds	2
   324   00003E                     SVS_initialize@svs_counter:
   325                           	callstack 0
   326   00003E                     SVS_print_pov@data:
   327                           	callstack 0
   328                           
   329                           ; 2 bytes @ 0x11
   330   00003E                     	ds	2
   331   000040                     ??_SVS_print_pov:
   332   000040                     SVS_initialize@temp:
   333                           	callstack 0
   334                           
   335                           ; 1 bytes @ 0x13
   336   000040                     	ds	1
   337   000041                     
   338                           ; 1 bytes @ 0x14
   339   000041                     	ds	4
   340   000045                     SVS_print_pov@l:
   341                           	callstack 0
   342                           
   343                           ; 4 bytes @ 0x18
   344   000045                     	ds	4
   345   000049                     SVS_print_pov@svs_counter_2:
   346                           	callstack 0
   347                           
   348                           ; 1 bytes @ 0x1C
   349   000049                     	ds	1
   350   00004A                     SVS_print_pov@temp:
   351                           	callstack 0
   352                           
   353                           ; 1 bytes @ 0x1D
   354   00004A                     	ds	1
   355   00004B                     SVS_print_pov@svs_counter:
   356                           	callstack 0
   357                           
   358                           ; 1 bytes @ 0x1E
   359   00004B                     	ds	1
   360   00004C                     ??_main:
   361                           
   362                           ; 1 bytes @ 0x1F
   363   00004C                     	ds	1
   364   00004D                     main@data:
   365                           	callstack 0
   366                           
   367                           ; 6 bytes @ 0x20
   368   00004D                     	ds	6
   369   000053                     main@counter:
   370                           	callstack 0
   371                           
   372                           ; 1 bytes @ 0x26
   373   000053                     	ds	1
   374   000054                     main@sec:
   375                           	callstack 0
   376                           
   377                           ; 1 bytes @ 0x27
   378   000054                     	ds	1
   379   000055                     main@min:
   380                           	callstack 0
   381                           
   382                           ; 1 bytes @ 0x28
   383   000055                     	ds	1
   384   000056                     main@hou:
   385                           	callstack 0
   386                           
   387                           ; 1 bytes @ 0x29
   388   000056                     	ds	1
   389                           
   390 ;;
   391 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   392 ;;
   393 ;; *************** function _main *****************
   394 ;; Defined at:
   395 ;;		line 80 in file "main.c"
   396 ;; Parameters:    Size  Location     Type
   397 ;;		None
   398 ;; Auto vars:     Size  Location     Type
   399 ;;  counter         1   38[COMRAM] unsigned char 
   400 ;;  data            6   32[COMRAM] unsigned char [6]
   401 ;;  hou             1   41[COMRAM] unsigned char 
   402 ;;  min             1   40[COMRAM] unsigned char 
   403 ;;  sec             1   39[COMRAM] unsigned char 
   404 ;; Return value:  Size  Location     Type
   405 ;;                  2  300[None  ] int 
   406 ;; Registers used:
   407 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   408 ;; Tracked objects:
   409 ;;		On entry : 0/0
   410 ;;		On exit  : 0/0
   411 ;;		Unchanged: 0/0
   412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   414 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   415 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   416 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   417 ;;Total ram usage:       11 bytes
   418 ;; Hardware stack levels required when called: 3
   419 ;; This function calls:
   420 ;;		_SVS_print_pov
   421 ;;		___awdiv
   422 ;;		___awmod
   423 ;;		_appliction_intialize
   424 ;; This function is called by:
   425 ;;		Startup code after reset
   426 ;; This function uses a non-reentrant model
   427 ;;
   428                           
   429                           	psect	text0
   430   00FA54                     __ptext0:
   431                           	callstack 0
   432   00FA54                     _main:
   433                           	callstack 28
   434   00FA54                     
   435                           ;main.c: 81:     uint8 sec=0, min=0, hou=0;
   436   00FA54  0E00               	movlw	0
   437   00FA56  6E54               	movwf	main@sec^0,c
   438   00FA58  0E00               	movlw	0
   439   00FA5A  6E55               	movwf	main@min^0,c
   440   00FA5C  0E00               	movlw	0
   441   00FA5E  6E56               	movwf	main@hou^0,c
   442   00FA60                     
   443                           ;main.c: 82:     appliction_intialize();
   444   00FA60  EC55  F07A         	call	_appliction_intialize	;wreg free
   445   00FA64                     
   446                           ;main.c: 83:     uint8 data[6 ]= {0,0,0,0,0,0};
   447   00FA64  EE20  F04D         	lfsr	2,main@data
   448   00FA68  0E05               	movlw	5
   449   00FA6A                     u1441:
   450   00FA6A  6ADE               	clrf	postinc2,c
   451   00FA6C  06E8               	decf	wreg,f,c
   452   00FA6E  E2FD               	bc	u1441
   453   00FA70                     l2066:
   454                           
   455                           ;main.c: 102:         for(uint8 counter=0; counter <50;counter++){
   456   00FA70  0E00               	movlw	0
   457   00FA72  6E53               	movwf	main@counter^0,c
   458   00FA74                     l2072:
   459                           
   460                           ;main.c: 103:             SVS_print_pov(&seven_seg, data);
   461   00FA74  0E1F               	movlw	low _seven_seg
   462   00FA76  6E3C               	movwf	SVS_print_pov@Seven_SEG^0,c
   463   00FA78  0E00               	movlw	high _seven_seg
   464   00FA7A  6E3D               	movwf	(SVS_print_pov@Seven_SEG+1)^0,c
   465   00FA7C  0E4D               	movlw	low main@data
   466   00FA7E  6E3E               	movwf	SVS_print_pov@data^0,c
   467   00FA80  0E00               	movlw	high main@data
   468   00FA82  6E3F               	movwf	(SVS_print_pov@data+1)^0,c
   469   00FA84  ECF8  F07E         	call	_SVS_print_pov	;wreg free
   470   00FA88                     
   471                           ;main.c: 104:             _delay((unsigned long)((15)*(16000000ul/4000.0)));
   472   00FA88  0E4E               	movlw	78
   473   00FA8A  6E4C               	movwf	??_main^0,c
   474   00FA8C  0EEB               	movlw	235
   475   00FA8E                     u1497:
   476   00FA8E  2EE8               	decfsz	wreg,f,c
   477   00FA90  D7FE               	bra	u1497
   478   00FA92  2E4C               	decfsz	??_main^0,f,c
   479   00FA94  D7FC               	bra	u1497
   480   00FA96  F000               	nop	
   481   00FA98                     
   482                           ;main.c: 106:         }
   483   00FA98  2A53               	incf	main@counter^0,f,c
   484   00FA9A  0E31               	movlw	49
   485   00FA9C  6453               	cpfsgt	main@counter^0,c
   486   00FA9E  EF53  F07D         	goto	u1451
   487   00FAA2  EF55  F07D         	goto	u1450
   488   00FAA6                     u1451:
   489   00FAA6  EF3A  F07D         	goto	l2072
   490   00FAAA                     u1450:
   491   00FAAA                     
   492                           ;main.c: 107:         sec++;
   493   00FAAA  2A54               	incf	main@sec^0,f,c
   494   00FAAC                     
   495                           ;main.c: 108:         if(sec>60){
   496   00FAAC  0E3C               	movlw	60
   497   00FAAE  6454               	cpfsgt	main@sec^0,c
   498   00FAB0  EF5C  F07D         	goto	u1461
   499   00FAB4  EF5E  F07D         	goto	u1460
   500   00FAB8                     u1461:
   501   00FAB8  EF61  F07D         	goto	l2088
   502   00FABC                     u1460:
   503   00FABC                     
   504                           ;main.c: 109:             sec=0;
   505   00FABC  0E00               	movlw	0
   506   00FABE  6E54               	movwf	main@sec^0,c
   507   00FAC0                     
   508                           ;main.c: 110:             min++;
   509   00FAC0  2A55               	incf	main@min^0,f,c
   510   00FAC2                     l2088:
   511                           
   512                           ;main.c: 112:         if(min>60){
   513   00FAC2  0E3C               	movlw	60
   514   00FAC4  6455               	cpfsgt	main@min^0,c
   515   00FAC6  EF67  F07D         	goto	u1471
   516   00FACA  EF69  F07D         	goto	u1470
   517   00FACE                     u1471:
   518   00FACE  EF6C  F07D         	goto	l2094
   519   00FAD2                     u1470:
   520   00FAD2                     
   521                           ;main.c: 113:             min=0;
   522   00FAD2  0E00               	movlw	0
   523   00FAD4  6E55               	movwf	main@min^0,c
   524   00FAD6                     
   525                           ;main.c: 114:             hou++;
   526   00FAD6  2A56               	incf	main@hou^0,f,c
   527   00FAD8                     l2094:
   528                           
   529                           ;main.c: 116:         if(hou>24){
   530   00FAD8  0E18               	movlw	24
   531   00FADA  6456               	cpfsgt	main@hou^0,c
   532   00FADC  EF72  F07D         	goto	u1481
   533   00FAE0  EF74  F07D         	goto	u1480
   534   00FAE4                     u1481:
   535   00FAE4  EF76  F07D         	goto	l2098
   536   00FAE8                     u1480:
   537   00FAE8                     
   538                           ;main.c: 117:             hou=0;
   539   00FAE8  0E00               	movlw	0
   540   00FAEA  6E56               	movwf	main@hou^0,c
   541   00FAEC                     l2098:
   542                           
   543                           ;main.c: 119:         data[0]= (uint8)(hou/10);
   544   00FAEC  C056  F02D         	movff	main@hou,___awdiv@dividend
   545   00FAF0  6A2E               	clrf	(___awdiv@dividend+1)^0,c
   546   00FAF2  0E00               	movlw	0
   547   00FAF4  6E30               	movwf	(___awdiv@divisor+1)^0,c
   548   00FAF6  0E0A               	movlw	10
   549   00FAF8  6E2F               	movwf	___awdiv@divisor^0,c
   550   00FAFA  EC39  F07C         	call	___awdiv	;wreg free
   551   00FAFE  502D               	movf	?___awdiv^0,w,c
   552   00FB00  6E4D               	movwf	main@data^0,c
   553   00FB02                     
   554                           ;main.c: 120:         data[1]= (uint8)(hou%10);
   555   00FB02  C056  F02D         	movff	main@hou,___awmod@dividend
   556   00FB06  6A2E               	clrf	(___awmod@dividend+1)^0,c
   557   00FB08  0E00               	movlw	0
   558   00FB0A  6E30               	movwf	(___awmod@divisor+1)^0,c
   559   00FB0C  0E0A               	movlw	10
   560   00FB0E  6E2F               	movwf	___awmod@divisor^0,c
   561   00FB10  ECE1  F07B         	call	___awmod	;wreg free
   562   00FB14  502D               	movf	?___awmod^0,w,c
   563   00FB16  6E4E               	movwf	(main@data+1)^0,c
   564   00FB18                     
   565                           ;main.c: 122:         data[2]= (uint8)(min/10);
   566   00FB18  C055  F02D         	movff	main@min,___awdiv@dividend
   567   00FB1C  6A2E               	clrf	(___awdiv@dividend+1)^0,c
   568   00FB1E  0E00               	movlw	0
   569   00FB20  6E30               	movwf	(___awdiv@divisor+1)^0,c
   570   00FB22  0E0A               	movlw	10
   571   00FB24  6E2F               	movwf	___awdiv@divisor^0,c
   572   00FB26  EC39  F07C         	call	___awdiv	;wreg free
   573   00FB2A  502D               	movf	?___awdiv^0,w,c
   574   00FB2C  6E4F               	movwf	(main@data+2)^0,c
   575   00FB2E                     
   576                           ;main.c: 123:         data[3]= (uint8)(min%10);
   577   00FB2E  C055  F02D         	movff	main@min,___awmod@dividend
   578   00FB32  6A2E               	clrf	(___awmod@dividend+1)^0,c
   579   00FB34  0E00               	movlw	0
   580   00FB36  6E30               	movwf	(___awmod@divisor+1)^0,c
   581   00FB38  0E0A               	movlw	10
   582   00FB3A  6E2F               	movwf	___awmod@divisor^0,c
   583   00FB3C  ECE1  F07B         	call	___awmod	;wreg free
   584   00FB40  502D               	movf	?___awmod^0,w,c
   585   00FB42  6E50               	movwf	(main@data+3)^0,c
   586   00FB44                     
   587                           ;main.c: 125:         data[4]= (uint8)(sec/10);
   588   00FB44  C054  F02D         	movff	main@sec,___awdiv@dividend
   589   00FB48  6A2E               	clrf	(___awdiv@dividend+1)^0,c
   590   00FB4A  0E00               	movlw	0
   591   00FB4C  6E30               	movwf	(___awdiv@divisor+1)^0,c
   592   00FB4E  0E0A               	movlw	10
   593   00FB50  6E2F               	movwf	___awdiv@divisor^0,c
   594   00FB52  EC39  F07C         	call	___awdiv	;wreg free
   595   00FB56  502D               	movf	?___awdiv^0,w,c
   596   00FB58  6E51               	movwf	(main@data+4)^0,c
   597   00FB5A                     
   598                           ;main.c: 126:         data[5]= (uint8)(sec%10);
   599   00FB5A  C054  F02D         	movff	main@sec,___awmod@dividend
   600   00FB5E  6A2E               	clrf	(___awmod@dividend+1)^0,c
   601   00FB60  0E00               	movlw	0
   602   00FB62  6E30               	movwf	(___awmod@divisor+1)^0,c
   603   00FB64  0E0A               	movlw	10
   604   00FB66  6E2F               	movwf	___awmod@divisor^0,c
   605   00FB68  ECE1  F07B         	call	___awmod	;wreg free
   606   00FB6C  502D               	movf	?___awmod^0,w,c
   607   00FB6E  6E52               	movwf	(main@data+5)^0,c
   608   00FB70  EF38  F07D         	goto	l2066
   609   00FB74  EF00  F000         	goto	start
   610   00FB78                     __end_of_main:
   611                           	callstack 0
   612                           
   613 ;; *************** function _appliction_intialize *****************
   614 ;; Defined at:
   615 ;;		line 144 in file "main.c"
   616 ;; Parameters:    Size  Location     Type
   617 ;;		None
   618 ;; Auto vars:     Size  Location     Type
   619 ;;		None
   620 ;; Return value:  Size  Location     Type
   621 ;;                  1    wreg      void 
   622 ;; Registers used:
   623 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   624 ;; Tracked objects:
   625 ;;		On entry : 0/0
   626 ;;		On exit  : 0/0
   627 ;;		Unchanged: 0/0
   628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   633 ;;Total ram usage:        0 bytes
   634 ;; Hardware stack levels used: 1
   635 ;; Hardware stack levels required when called: 2
   636 ;; This function calls:
   637 ;;		_SVS_initialize
   638 ;; This function is called by:
   639 ;;		_main
   640 ;; This function uses a non-reentrant model
   641 ;;
   642                           
   643                           	psect	text1
   644   00F4AA                     __ptext1:
   645                           	callstack 0
   646   00F4AA                     _appliction_intialize:
   647                           	callstack 28
   648   00F4AA                     
   649                           ;main.c: 145:     ADCON0 = 0x00;
   650   00F4AA  0E00               	movlw	0
   651   00F4AC  6EC2               	movwf	194,c	;volatile
   652                           
   653                           ;main.c: 146:     ADCON1 = 0x0F;
   654   00F4AE  0E0F               	movlw	15
   655   00F4B0  6EC1               	movwf	193,c	;volatile
   656   00F4B2                     
   657                           ;main.c: 156:     SVS_initialize(&seven_seg);
   658   00F4B2  0E1F               	movlw	low _seven_seg
   659   00F4B4  6E37               	movwf	SVS_initialize@Seven_SEG^0,c
   660   00F4B6  0E00               	movlw	high _seven_seg
   661   00F4B8  6E38               	movwf	(SVS_initialize@Seven_SEG+1)^0,c
   662   00F4BA  ECBC  F07D         	call	_SVS_initialize	;wreg free
   663   00F4BE  0012               	return		;funcret
   664   00F4C0                     __end_of_appliction_intialize:
   665                           	callstack 0
   666                           
   667 ;; *************** function _SVS_initialize *****************
   668 ;; Defined at:
   669 ;;		line 38 in file "ECU_layer/7_SEGMENTS/7_SEGMENTS.c"
   670 ;; Parameters:    Size  Location     Type
   671 ;;  Seven_SEG       2   10[COMRAM] PTR const struct .
   672 ;;		 -> seven_seg(14), 
   673 ;; Auto vars:     Size  Location     Type
   674 ;;  svs_counter     2   17[COMRAM] int 
   675 ;;  temp            1   19[COMRAM] struct .
   676 ;;  ret             1    0        unsigned char 
   677 ;; Return value:  Size  Location     Type
   678 ;;                  1    wreg      unsigned char 
   679 ;; Registers used:
   680 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   681 ;; Tracked objects:
   682 ;;		On entry : 0/0
   683 ;;		On exit  : 0/0
   684 ;;		Unchanged: 0/0
   685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   686 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   687 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   688 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   689 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   690 ;;Total ram usage:       10 bytes
   691 ;; Hardware stack levels used: 1
   692 ;; Hardware stack levels required when called: 1
   693 ;; This function calls:
   694 ;;		_gpio_pin_direction_initialize
   695 ;;		_gpio_port_high_nibble_direction_initialize
   696 ;;		_gpio_port_low_nibble_direction_initialize
   697 ;; This function is called by:
   698 ;;		_appliction_intialize
   699 ;; This function uses a non-reentrant model
   700 ;;
   701                           
   702                           	psect	text2
   703   00FB78                     __ptext2:
   704                           	callstack 0
   705   00FB78                     _SVS_initialize:
   706                           	callstack 28
   707   00FB78                     
   708                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 41:     if(Seven_SEG == ((void*)0)){
   709   00FB78  5037               	movf	SVS_initialize@Seven_SEG^0,w,c
   710   00FB7A  1038               	iorwf	(SVS_initialize@Seven_SEG+1)^0,w,c
   711   00FB7C  A4D8               	btfss	status,2,c
   712   00FB7E  EFC3  F07D         	goto	u981
   713   00FB82  EFC5  F07D         	goto	u980
   714   00FB86                     u981:
   715   00FB86  EFC7  F07D         	goto	l1688
   716   00FB8A                     u980:
   717   00FB8A                     
   718                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 43:     }
   719   00FB8A  EF53  F07E         	goto	l22
   720   00FB8E                     l1688:
   721                           
   722                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 45:         pin_config_t temp;;ECU_layer/7_SEGMENTS/
      +                          7_SEGMENTS.c: 46:         temp.port = Seven_SEG->SVS_port;
   723   00FB8E  C037  FFD9         	movff	SVS_initialize@Seven_SEG,fsr2l
   724   00FB92  C038  FFDA         	movff	SVS_initialize@Seven_SEG+1,fsr2h
   725   00FB96  50DF               	movf	indf2,w,c
   726   00FB98  6E39               	movwf	??_SVS_initialize^0,c
   727   00FB9A  5040               	movf	SVS_initialize@temp^0,w,c
   728   00FB9C  1839               	xorwf	??_SVS_initialize^0,w,c
   729   00FB9E  0BF8               	andlw	-8
   730   00FBA0  1839               	xorwf	??_SVS_initialize^0,w,c
   731   00FBA2  6E40               	movwf	SVS_initialize@temp^0,c
   732   00FBA4                     
   733                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 47:         temp.direction= GPIO_DIRECTION_OUTPUT;
   734   00FBA4  9C40               	bcf	SVS_initialize@temp^0,6,c
   735                           
   736                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 49:         if(Seven_SEG->SVS_nibble_state == SVS_LO
      +                          W_NIBBLE){
   737   00FBA6  EE20 F001          	lfsr	2,1
   738   00FBAA  5037               	movf	SVS_initialize@Seven_SEG^0,w,c
   739   00FBAC  26D9               	addwf	fsr2l,f,c
   740   00FBAE  5038               	movf	(SVS_initialize@Seven_SEG+1)^0,w,c
   741   00FBB0  22DA               	addwfc	fsr2h,f,c
   742   00FBB2  50DF               	movf	indf2,w,c
   743   00FBB4  A4D8               	btfss	status,2,c
   744   00FBB6  EFDF  F07D         	goto	u991
   745   00FBBA  EFE1  F07D         	goto	u990
   746   00FBBE                     u991:
   747   00FBBE  EFEB  F07D         	goto	l1694
   748   00FBC2                     u990:
   749   00FBC2                     
   750                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 50:             gpio_port_low_nibble_direction_initi
      +                          alize(&temp, 0xF0);
   751   00FBC2  0E40               	movlw	low SVS_initialize@temp
   752   00FBC4  6E2D               	movwf	gpio_port_low_nibble_direction_initialize@pin_config^0,c
   753   00FBC6  0E00               	movlw	high SVS_initialize@temp
   754   00FBC8  6E2E               	movwf	(gpio_port_low_nibble_direction_initialize@pin_config+1)^0,c
   755   00FBCA  0EF0               	movlw	240
   756   00FBCC  6E2F               	movwf	gpio_port_low_nibble_direction_initialize@data^0,c
   757   00FBCE  EC57  F07B         	call	_gpio_port_low_nibble_direction_initialize	;wreg free
   758                           
   759                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 51:         }else if(Seven_SEG->SVS_nibble_state == 
      +                          SVS_HIGH_NIBBLE){
   760   00FBD2  EF01  F07E         	goto	l1698
   761   00FBD6                     l1694:
   762   00FBD6  EE20 F001          	lfsr	2,1
   763   00FBDA  5037               	movf	SVS_initialize@Seven_SEG^0,w,c
   764   00FBDC  26D9               	addwf	fsr2l,f,c
   765   00FBDE  5038               	movf	(SVS_initialize@Seven_SEG+1)^0,w,c
   766   00FBE0  22DA               	addwfc	fsr2h,f,c
   767   00FBE2  04DE               	decf	postinc2,w,c
   768   00FBE4  A4D8               	btfss	status,2,c
   769   00FBE6  EFF7  F07D         	goto	u1001
   770   00FBEA  EFF9  F07D         	goto	u1000
   771   00FBEE                     u1001:
   772   00FBEE  EF01  F07E         	goto	l1698
   773   00FBF2                     u1000:
   774   00FBF2                     
   775                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 52:             gpio_port_high_nibble_direction_init
      +                          ialize(&temp, 0x0F);
   776   00FBF2  0E40               	movlw	low SVS_initialize@temp
   777   00FBF4  6E2D               	movwf	gpio_port_high_nibble_direction_initialize@pin_config^0,c
   778   00FBF6  0E00               	movlw	high SVS_initialize@temp
   779   00FBF8  6E2E               	movwf	(gpio_port_high_nibble_direction_initialize@pin_config+1)^0,c
   780   00FBFA  0E0F               	movlw	15
   781   00FBFC  6E2F               	movwf	gpio_port_high_nibble_direction_initialize@data^0,c
   782   00FBFE  EC15  F07B         	call	_gpio_port_high_nibble_direction_initialize	;wreg free
   783   00FC02                     l1698:
   784                           
   785                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 56:         int svs_counter = 0;
   786   00FC02  0E00               	movlw	0
   787   00FC04  6E3F               	movwf	(SVS_initialize@svs_counter+1)^0,c
   788   00FC06  0E00               	movlw	0
   789   00FC08  6E3E               	movwf	SVS_initialize@svs_counter^0,c
   790   00FC0A                     
   791                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 58:         temp.direction = GPIO_DIRECTION_OUTPUT;
   792   00FC0A  9C40               	bcf	SVS_initialize@temp^0,6,c
   793   00FC0C                     l1706:
   794                           
   795                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 60:                 temp.port = Seven_SEG->SVS_EN_PI
      +                          NS[svs_counter].SVS_en_port;
   796   00FC0C  C03E  F039         	movff	SVS_initialize@svs_counter,??_SVS_initialize
   797   00FC10  C03F  F03A         	movff	SVS_initialize@svs_counter+1,??_SVS_initialize+1
   798   00FC14  90D8               	bcf	status,0,c
   799   00FC16  3639               	rlcf	??_SVS_initialize^0,f,c
   800   00FC18  363A               	rlcf	(??_SVS_initialize+1)^0,f,c
   801   00FC1A  5039               	movf	??_SVS_initialize^0,w,c
   802   00FC1C  2437               	addwf	SVS_initialize@Seven_SEG^0,w,c
   803   00FC1E  6E3B               	movwf	(??_SVS_initialize+2)^0,c
   804   00FC20  503A               	movf	(??_SVS_initialize+1)^0,w,c
   805   00FC22  2038               	addwfc	(SVS_initialize@Seven_SEG+1)^0,w,c
   806   00FC24  6E3C               	movwf	(??_SVS_initialize+3)^0,c
   807   00FC26  0E02               	movlw	2
   808   00FC28  243B               	addwf	(??_SVS_initialize+2)^0,w,c
   809   00FC2A  6ED9               	movwf	fsr2l,c
   810   00FC2C  0E00               	movlw	0
   811   00FC2E  203C               	addwfc	(??_SVS_initialize+3)^0,w,c
   812   00FC30  6EDA               	movwf	fsr2h,c
   813   00FC32  50DF               	movf	indf2,w,c
   814   00FC34  6E3D               	movwf	(??_SVS_initialize+4)^0,c
   815   00FC36  5040               	movf	SVS_initialize@temp^0,w,c
   816   00FC38  183D               	xorwf	(??_SVS_initialize+4)^0,w,c
   817   00FC3A  0BF8               	andlw	-8
   818   00FC3C  183D               	xorwf	(??_SVS_initialize+4)^0,w,c
   819   00FC3E  6E40               	movwf	SVS_initialize@temp^0,c
   820                           
   821                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 61:                 temp.pin = Seven_SEG->SVS_EN_PIN
      +                          S[svs_counter].SVS_en_pin;
   822   00FC40  C03E  F039         	movff	SVS_initialize@svs_counter,??_SVS_initialize
   823   00FC44  C03F  F03A         	movff	SVS_initialize@svs_counter+1,??_SVS_initialize+1
   824   00FC48  90D8               	bcf	status,0,c
   825   00FC4A  3639               	rlcf	??_SVS_initialize^0,f,c
   826   00FC4C  363A               	rlcf	(??_SVS_initialize+1)^0,f,c
   827   00FC4E  5039               	movf	??_SVS_initialize^0,w,c
   828   00FC50  2437               	addwf	SVS_initialize@Seven_SEG^0,w,c
   829   00FC52  6E3B               	movwf	(??_SVS_initialize+2)^0,c
   830   00FC54  503A               	movf	(??_SVS_initialize+1)^0,w,c
   831   00FC56  2038               	addwfc	(SVS_initialize@Seven_SEG+1)^0,w,c
   832   00FC58  6E3C               	movwf	(??_SVS_initialize+3)^0,c
   833   00FC5A  0E03               	movlw	3
   834   00FC5C  243B               	addwf	(??_SVS_initialize+2)^0,w,c
   835   00FC5E  6ED9               	movwf	fsr2l,c
   836   00FC60  0E00               	movlw	0
   837   00FC62  203C               	addwfc	(??_SVS_initialize+3)^0,w,c
   838   00FC64  6EDA               	movwf	fsr2h,c
   839   00FC66  50DF               	movf	indf2,w,c
   840   00FC68  6E3D               	movwf	(??_SVS_initialize+4)^0,c
   841   00FC6A  463D               	rlncf	(??_SVS_initialize+4)^0,f,c
   842   00FC6C  463D               	rlncf	(??_SVS_initialize+4)^0,f,c
   843   00FC6E  463D               	rlncf	(??_SVS_initialize+4)^0,f,c
   844   00FC70  5040               	movf	SVS_initialize@temp^0,w,c
   845   00FC72  183D               	xorwf	(??_SVS_initialize+4)^0,w,c
   846   00FC74  0BC7               	andlw	-57
   847   00FC76  183D               	xorwf	(??_SVS_initialize+4)^0,w,c
   848   00FC78  6E40               	movwf	SVS_initialize@temp^0,c
   849   00FC7A                     
   850                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 62:                 gpio_pin_direction_initialize(&t
      +                          emp);
   851   00FC7A  0E40               	movlw	low SVS_initialize@temp
   852   00FC7C  6E2D               	movwf	gpio_pin_direction_initialize@pin_config^0,c
   853   00FC7E  0E00               	movlw	high SVS_initialize@temp
   854   00FC80  6E2E               	movwf	(gpio_pin_direction_initialize@pin_config+1)^0,c
   855   00FC82  EC54  F07E         	call	_gpio_pin_direction_initialize	;wreg free
   856   00FC86                     
   857                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 64:         }
   858   00FC86  4A3E               	infsnz	SVS_initialize@svs_counter^0,f,c
   859   00FC88  2A3F               	incf	(SVS_initialize@svs_counter+1)^0,f,c
   860   00FC8A  BE3F               	btfsc	(SVS_initialize@svs_counter+1)^0,7,c
   861   00FC8C  EF51  F07E         	goto	u1011
   862   00FC90  503F               	movf	(SVS_initialize@svs_counter+1)^0,w,c
   863   00FC92  E109               	bnz	u1010
   864   00FC94  0E06               	movlw	6
   865   00FC96  5C3E               	subwf	SVS_initialize@svs_counter^0,w,c
   866   00FC98  A0D8               	btfss	status,0,c
   867   00FC9A  EF51  F07E         	goto	u1011
   868   00FC9E  EF53  F07E         	goto	u1010
   869   00FCA2                     u1011:
   870   00FCA2  EF06  F07E         	goto	l1706
   871   00FCA6                     u1010:
   872   00FCA6                     l22:
   873   00FCA6  0012               	return		;funcret
   874   00FCA8                     __end_of_SVS_initialize:
   875                           	callstack 0
   876                           
   877 ;; *************** function _gpio_port_low_nibble_direction_initialize *****************
   878 ;; Defined at:
   879 ;;		line 299 in file "MCAL_layer/GPIO/GPIO.c"
   880 ;; Parameters:    Size  Location     Type
   881 ;;  pin_config      2    0[COMRAM] PTR struct .
   882 ;;		 -> SVS_initialize@temp(1), 
   883 ;;  data            1    2[COMRAM] unsigned char 
   884 ;; Auto vars:     Size  Location     Type
   885 ;;  ret             1    0        unsigned char 
   886 ;; Return value:  Size  Location     Type
   887 ;;                  1    wreg      unsigned char 
   888 ;; Registers used:
   889 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   890 ;; Tracked objects:
   891 ;;		On entry : 0/0
   892 ;;		On exit  : 0/0
   893 ;;		Unchanged: 0/0
   894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   895 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   897 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   898 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   899 ;;Total ram usage:       10 bytes
   900 ;; Hardware stack levels used: 1
   901 ;; This function calls:
   902 ;;		Nothing
   903 ;; This function is called by:
   904 ;;		_SVS_initialize
   905 ;; This function uses a non-reentrant model
   906 ;;
   907                           
   908                           	psect	text3
   909   00F6AE                     __ptext3:
   910                           	callstack 0
   911   00F6AE                     _gpio_port_low_nibble_direction_initialize:
   912                           	callstack 28
   913   00F6AE                     
   914                           ;MCAL_layer/GPIO/GPIO.c: 301:     if(pin_config == ((void*)0)){
   915   00F6AE  502D               	movf	gpio_port_low_nibble_direction_initialize@pin_config^0,w,c
   916   00F6B0  102E               	iorwf	(gpio_port_low_nibble_direction_initialize@pin_config+1)^0,w,c
   917   00F6B2  A4D8               	btfss	status,2,c
   918   00F6B4  EF5E  F07B         	goto	u871
   919   00F6B8  EF60  F07B         	goto	u870
   920   00F6BC                     u871:
   921   00F6BC  EF62  F07B         	goto	l1626
   922   00F6C0                     u870:
   923   00F6C0                     
   924                           ;MCAL_layer/GPIO/GPIO.c: 303:     }
   925   00F6C0  EF98  F07B         	goto	l265
   926   00F6C4                     l1626:
   927                           
   928                           ;MCAL_layer/GPIO/GPIO.c: 305:         ((*((volatile uint8 *)(tris_registers[pin_config->
      +                          port]))) = (((*((volatile uint8 *)(tris_registers[pin_config->port])))&0xF0)|(data&0x0F)
      +                          ));
   929   00F6C4  C02D  FFD9         	movff	gpio_port_low_nibble_direction_initialize@pin_config,fsr2l
   930   00F6C8  C02E  FFDA         	movff	gpio_port_low_nibble_direction_initialize@pin_config+1,fsr2h
   931   00F6CC  50DF               	movf	223,w,c
   932   00F6CE  0B07               	andlw	7
   933   00F6D0  6E30               	movwf	??_gpio_port_low_nibble_direction_initialize^0,c
   934   00F6D2  5030               	movf	??_gpio_port_low_nibble_direction_initialize^0,w,c
   935   00F6D4  0D02               	mullw	2
   936   00F6D6  0E15               	movlw	low _tris_registers
   937   00F6D8  24F3               	addwf	243,w,c
   938   00F6DA  6ED9               	movwf	fsr2l,c
   939   00F6DC  0E00               	movlw	high _tris_registers
   940   00F6DE  20F4               	addwfc	prodh,w,c
   941   00F6E0  6EDA               	movwf	fsr2h,c
   942   00F6E2  CFDE F031          	movff	postinc2,??_gpio_port_low_nibble_direction_initialize+1
   943   00F6E6  CFDD F032          	movff	postdec2,??_gpio_port_low_nibble_direction_initialize+2
   944   00F6EA  C031  FFD9         	movff	??_gpio_port_low_nibble_direction_initialize+1,fsr2l
   945   00F6EE  C032  FFDA         	movff	??_gpio_port_low_nibble_direction_initialize+2,fsr2h
   946   00F6F2  C02F  F033         	movff	gpio_port_low_nibble_direction_initialize@data,??_gpio_port_low_nibble_direction_
      +                          initialize+3
   947   00F6F6  0E0F               	movlw	15
   948   00F6F8  1633               	andwf	(??_gpio_port_low_nibble_direction_initialize+3)^0,f,c
   949   00F6FA  C02D  FFE1         	movff	gpio_port_low_nibble_direction_initialize@pin_config,fsr1l
   950   00F6FE  C02E  FFE2         	movff	gpio_port_low_nibble_direction_initialize@pin_config+1,fsr1h
   951   00F702  50E7               	movf	231,w,c
   952   00F704  0B07               	andlw	7
   953   00F706  6E34               	movwf	(??_gpio_port_low_nibble_direction_initialize+4)^0,c
   954   00F708  5034               	movf	(??_gpio_port_low_nibble_direction_initialize+4)^0,w,c
   955   00F70A  0D02               	mullw	2
   956   00F70C  0E15               	movlw	low _tris_registers
   957   00F70E  24F3               	addwf	243,w,c
   958   00F710  6EE1               	movwf	fsr1l,c
   959   00F712  0E00               	movlw	high _tris_registers
   960   00F714  20F4               	addwfc	prodh,w,c
   961   00F716  6EE2               	movwf	fsr1h,c
   962   00F718  CFE6 F035          	movff	postinc1,??_gpio_port_low_nibble_direction_initialize+5
   963   00F71C  CFE5 F036          	movff	postdec1,??_gpio_port_low_nibble_direction_initialize+6
   964   00F720  C035  FFE1         	movff	??_gpio_port_low_nibble_direction_initialize+5,fsr1l
   965   00F724  C036  FFE2         	movff	??_gpio_port_low_nibble_direction_initialize+6,fsr1h
   966   00F728  50E7               	movf	indf1,w,c
   967   00F72A  0BF0               	andlw	240
   968   00F72C  1033               	iorwf	(??_gpio_port_low_nibble_direction_initialize+3)^0,w,c
   969   00F72E  6EDF               	movwf	indf2,c
   970   00F730                     l265:
   971   00F730  0012               	return		;funcret
   972   00F732                     __end_of_gpio_port_low_nibble_direction_initialize:
   973                           	callstack 0
   974                           
   975 ;; *************** function _gpio_port_high_nibble_direction_initialize *****************
   976 ;; Defined at:
   977 ;;		line 320 in file "MCAL_layer/GPIO/GPIO.c"
   978 ;; Parameters:    Size  Location     Type
   979 ;;  pin_config      2    0[COMRAM] PTR struct .
   980 ;;		 -> SVS_initialize@temp(1), 
   981 ;;  data            1    2[COMRAM] unsigned char 
   982 ;; Auto vars:     Size  Location     Type
   983 ;;  ret             1    0        unsigned char 
   984 ;; Return value:  Size  Location     Type
   985 ;;                  1    wreg      unsigned char 
   986 ;; Registers used:
   987 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   988 ;; Tracked objects:
   989 ;;		On entry : 0/0
   990 ;;		On exit  : 0/0
   991 ;;		Unchanged: 0/0
   992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   993 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   995 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   996 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   997 ;;Total ram usage:       10 bytes
   998 ;; Hardware stack levels used: 1
   999 ;; This function calls:
  1000 ;;		Nothing
  1001 ;; This function is called by:
  1002 ;;		_SVS_initialize
  1003 ;; This function uses a non-reentrant model
  1004 ;;
  1005                           
  1006                           	psect	text4
  1007   00F62A                     __ptext4:
  1008                           	callstack 0
  1009   00F62A                     _gpio_port_high_nibble_direction_initialize:
  1010                           	callstack 28
  1011   00F62A                     
  1012                           ;MCAL_layer/GPIO/GPIO.c: 322:     if(pin_config == ((void*)0)){
  1013   00F62A  502D               	movf	gpio_port_high_nibble_direction_initialize@pin_config^0,w,c
  1014   00F62C  102E               	iorwf	(gpio_port_high_nibble_direction_initialize@pin_config+1)^0,w,c
  1015   00F62E  A4D8               	btfss	status,2,c
  1016   00F630  EF1C  F07B         	goto	u881
  1017   00F634  EF1E  F07B         	goto	u880
  1018   00F638                     u881:
  1019   00F638  EF20  F07B         	goto	l1636
  1020   00F63C                     u880:
  1021   00F63C                     
  1022                           ;MCAL_layer/GPIO/GPIO.c: 324:     }
  1023   00F63C  EF56  F07B         	goto	l275
  1024   00F640                     l1636:
  1025                           
  1026                           ;MCAL_layer/GPIO/GPIO.c: 326:         ((*((volatile uint8 *)(tris_registers[pin_config->
      +                          port]))) = (((*((volatile uint8 *)(tris_registers[pin_config->port])))&0x0F)|(data&0xF0)
      +                          ));
  1027   00F640  C02D  FFD9         	movff	gpio_port_high_nibble_direction_initialize@pin_config,fsr2l
  1028   00F644  C02E  FFDA         	movff	gpio_port_high_nibble_direction_initialize@pin_config+1,fsr2h
  1029   00F648  50DF               	movf	223,w,c
  1030   00F64A  0B07               	andlw	7
  1031   00F64C  6E30               	movwf	??_gpio_port_high_nibble_direction_initialize^0,c
  1032   00F64E  5030               	movf	??_gpio_port_high_nibble_direction_initialize^0,w,c
  1033   00F650  0D02               	mullw	2
  1034   00F652  0E15               	movlw	low _tris_registers
  1035   00F654  24F3               	addwf	243,w,c
  1036   00F656  6ED9               	movwf	fsr2l,c
  1037   00F658  0E00               	movlw	high _tris_registers
  1038   00F65A  20F4               	addwfc	prodh,w,c
  1039   00F65C  6EDA               	movwf	fsr2h,c
  1040   00F65E  CFDE F031          	movff	postinc2,??_gpio_port_high_nibble_direction_initialize+1
  1041   00F662  CFDD F032          	movff	postdec2,??_gpio_port_high_nibble_direction_initialize+2
  1042   00F666  C031  FFD9         	movff	??_gpio_port_high_nibble_direction_initialize+1,fsr2l
  1043   00F66A  C032  FFDA         	movff	??_gpio_port_high_nibble_direction_initialize+2,fsr2h
  1044   00F66E  C02F  F033         	movff	gpio_port_high_nibble_direction_initialize@data,??_gpio_port_high_nibble_directio
      +                          n_initialize+3
  1045   00F672  0EF0               	movlw	240
  1046   00F674  1633               	andwf	(??_gpio_port_high_nibble_direction_initialize+3)^0,f,c
  1047   00F676  C02D  FFE1         	movff	gpio_port_high_nibble_direction_initialize@pin_config,fsr1l
  1048   00F67A  C02E  FFE2         	movff	gpio_port_high_nibble_direction_initialize@pin_config+1,fsr1h
  1049   00F67E  50E7               	movf	231,w,c
  1050   00F680  0B07               	andlw	7
  1051   00F682  6E34               	movwf	(??_gpio_port_high_nibble_direction_initialize+4)^0,c
  1052   00F684  5034               	movf	(??_gpio_port_high_nibble_direction_initialize+4)^0,w,c
  1053   00F686  0D02               	mullw	2
  1054   00F688  0E15               	movlw	low _tris_registers
  1055   00F68A  24F3               	addwf	243,w,c
  1056   00F68C  6EE1               	movwf	fsr1l,c
  1057   00F68E  0E00               	movlw	high _tris_registers
  1058   00F690  20F4               	addwfc	prodh,w,c
  1059   00F692  6EE2               	movwf	fsr1h,c
  1060   00F694  CFE6 F035          	movff	postinc1,??_gpio_port_high_nibble_direction_initialize+5
  1061   00F698  CFE5 F036          	movff	postdec1,??_gpio_port_high_nibble_direction_initialize+6
  1062   00F69C  C035  FFE1         	movff	??_gpio_port_high_nibble_direction_initialize+5,fsr1l
  1063   00F6A0  C036  FFE2         	movff	??_gpio_port_high_nibble_direction_initialize+6,fsr1h
  1064   00F6A4  50E7               	movf	indf1,w,c
  1065   00F6A6  0B0F               	andlw	15
  1066   00F6A8  1033               	iorwf	(??_gpio_port_high_nibble_direction_initialize+3)^0,w,c
  1067   00F6AA  6EDF               	movwf	indf2,c
  1068   00F6AC                     l275:
  1069   00F6AC  0012               	return		;funcret
  1070   00F6AE                     __end_of_gpio_port_high_nibble_direction_initialize:
  1071                           	callstack 0
  1072                           
  1073 ;; *************** function _gpio_pin_direction_initialize *****************
  1074 ;; Defined at:
  1075 ;;		line 16 in file "MCAL_layer/GPIO/GPIO.c"
  1076 ;; Parameters:    Size  Location     Type
  1077 ;;  pin_config      2    0[COMRAM] PTR const struct .
  1078 ;;		 -> led_intialize@temp(1), SVS_initialize@temp(1), 
  1079 ;; Auto vars:     Size  Location     Type
  1080 ;;  ret             1    8[COMRAM] unsigned char 
  1081 ;; Return value:  Size  Location     Type
  1082 ;;                  1    wreg      unsigned char 
  1083 ;; Registers used:
  1084 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1085 ;; Tracked objects:
  1086 ;;		On entry : 0/0
  1087 ;;		On exit  : 0/0
  1088 ;;		Unchanged: 0/0
  1089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1090 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1091 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1092 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1093 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1094 ;;Total ram usage:        9 bytes
  1095 ;; Hardware stack levels used: 1
  1096 ;; This function calls:
  1097 ;;		Nothing
  1098 ;; This function is called by:
  1099 ;;		_SVS_initialize
  1100 ;;		_motor_initialize
  1101 ;;		_relay_initialize
  1102 ;;		_led_intialize
  1103 ;;		_button_initializa
  1104 ;;		_gpio_pin_initialize
  1105 ;; This function uses a non-reentrant model
  1106 ;;
  1107                           
  1108                           	psect	text5
  1109   00FCA8                     __ptext5:
  1110                           	callstack 0
  1111   00FCA8                     _gpio_pin_direction_initialize:
  1112                           	callstack 28
  1113   00FCA8                     
  1114                           ;MCAL_layer/GPIO/GPIO.c: 17:     Std_ReturnType ret = (Std_ReturnType)0x00;
  1115   00FCA8  0E00               	movlw	0
  1116   00FCAA  6E35               	movwf	gpio_pin_direction_initialize@ret^0,c
  1117   00FCAC                     
  1118                           ;MCAL_layer/GPIO/GPIO.c: 18:     if(pin_config == ((void*)0) || pin_config->pin > 8 -1 |
      +                          | pin_config->port > 5 -1){
  1119   00FCAC  502D               	movf	gpio_pin_direction_initialize@pin_config^0,w,c
  1120   00FCAE  102E               	iorwf	(gpio_pin_direction_initialize@pin_config+1)^0,w,c
  1121   00FCB0  B4D8               	btfsc	status,2,c
  1122   00FCB2  EF5D  F07E         	goto	u891
  1123   00FCB6  EF5F  F07E         	goto	u890
  1124   00FCBA                     u891:
  1125   00FCBA  EF7F  F07E         	goto	l1648
  1126   00FCBE                     u890:
  1127   00FCBE  C02D  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  1128   00FCC2  C02E  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  1129   00FCC6  30DF               	rrcf	223,w,c
  1130   00FCC8  32E8               	rrcf	wreg,f,c
  1131   00FCCA  32E8               	rrcf	wreg,f,c
  1132   00FCCC  0B07               	andlw	7
  1133   00FCCE  6E2F               	movwf	??_gpio_pin_direction_initialize^0,c
  1134   00FCD0  0E08               	movlw	8
  1135   00FCD2  602F               	cpfslt	??_gpio_pin_direction_initialize^0,c
  1136   00FCD4  EF6E  F07E         	goto	u901
  1137   00FCD8  EF70  F07E         	goto	u900
  1138   00FCDC                     u901:
  1139   00FCDC  EF7F  F07E         	goto	l1648
  1140   00FCE0                     u900:
  1141   00FCE0  C02D  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  1142   00FCE4  C02E  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  1143   00FCE8  50DF               	movf	223,w,c
  1144   00FCEA  0B07               	andlw	7
  1145   00FCEC  6E2F               	movwf	??_gpio_pin_direction_initialize^0,c
  1146   00FCEE  0E04               	movlw	4
  1147   00FCF0  642F               	cpfsgt	??_gpio_pin_direction_initialize^0,c
  1148   00FCF2  EF7D  F07E         	goto	u911
  1149   00FCF6  EF7F  F07E         	goto	u910
  1150   00FCFA                     u911:
  1151   00FCFA  EF83  F07E         	goto	l1650
  1152   00FCFE                     u910:
  1153   00FCFE                     l1648:
  1154                           
  1155                           ;MCAL_layer/GPIO/GPIO.c: 19:         ret =(Std_ReturnType)0x01;
  1156   00FCFE  0E01               	movlw	1
  1157   00FD00  6E35               	movwf	gpio_pin_direction_initialize@ret^0,c
  1158                           
  1159                           ;MCAL_layer/GPIO/GPIO.c: 20:     }
  1160   00FD02  EFF6  F07E         	goto	l192
  1161   00FD06                     l1650:
  1162                           
  1163                           ;MCAL_layer/GPIO/GPIO.c: 22:         if(pin_config->direction == GPIO_DIRECTION_OUTPUT){
  1164   00FD06  C02D  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  1165   00FD0A  C02E  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  1166   00FD0E  BCDF               	btfsc	indf2,6,c
  1167   00FD10  EF8C  F07E         	goto	u921
  1168   00FD14  EF8E  F07E         	goto	u920
  1169   00FD18                     u921:
  1170   00FD18  EFBF  F07E         	goto	l1654
  1171   00FD1C                     u920:
  1172   00FD1C                     
  1173                           ;MCAL_layer/GPIO/GPIO.c: 23:         ((*((volatile uint8 *)(tris_registers[pin_config->p
      +                          ort]))) &= (~(0x01 << pin_config->pin)));
  1174   00FD1C  C02D  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  1175   00FD20  C02E  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  1176   00FD24  30DF               	rrcf	223,w,c
  1177   00FD26  32E8               	rrcf	wreg,f,c
  1178   00FD28  32E8               	rrcf	wreg,f,c
  1179   00FD2A  0B07               	andlw	7
  1180   00FD2C  6E2F               	movwf	??_gpio_pin_direction_initialize^0,c
  1181   00FD2E  0E01               	movlw	1
  1182   00FD30  6E30               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  1183   00FD32  2A2F               	incf	??_gpio_pin_direction_initialize^0,f,c
  1184   00FD34  EF9E  F07E         	goto	u934
  1185   00FD38                     u935:
  1186   00FD38  90D8               	bcf	status,0,c
  1187   00FD3A  3630               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  1188   00FD3C                     u934:
  1189   00FD3C  2E2F               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  1190   00FD3E  EF9C  F07E         	goto	u935
  1191   00FD42  5030               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1192   00FD44  0AFF               	xorlw	255
  1193   00FD46  6E31               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  1194   00FD48  C02D  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  1195   00FD4C  C02E  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  1196   00FD50  50DF               	movf	223,w,c
  1197   00FD52  0B07               	andlw	7
  1198   00FD54  6E32               	movwf	(??_gpio_pin_direction_initialize+3)^0,c
  1199   00FD56  5032               	movf	(??_gpio_pin_direction_initialize+3)^0,w,c
  1200   00FD58  0D02               	mullw	2
  1201   00FD5A  0E15               	movlw	low _tris_registers
  1202   00FD5C  24F3               	addwf	243,w,c
  1203   00FD5E  6ED9               	movwf	fsr2l,c
  1204   00FD60  0E00               	movlw	high _tris_registers
  1205   00FD62  20F4               	addwfc	prodh,w,c
  1206   00FD64  6EDA               	movwf	fsr2h,c
  1207   00FD66  CFDE F033          	movff	postinc2,??_gpio_pin_direction_initialize+4
  1208   00FD6A  CFDD F034          	movff	postdec2,??_gpio_pin_direction_initialize+5
  1209   00FD6E  C033  FFD9         	movff	??_gpio_pin_direction_initialize+4,fsr2l
  1210   00FD72  C034  FFDA         	movff	??_gpio_pin_direction_initialize+5,fsr2h
  1211   00FD76  5031               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  1212   00FD78  16DF               	andwf	indf2,f,c
  1213                           
  1214                           ;MCAL_layer/GPIO/GPIO.c: 25:         }
  1215   00FD7A  EFF6  F07E         	goto	l192
  1216   00FD7E                     l1654:
  1217   00FD7E  C02D  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  1218   00FD82  C02E  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  1219   00FD86  ACDF               	btfss	indf2,6,c
  1220   00FD88  EFC8  F07E         	goto	u941
  1221   00FD8C  EFCA  F07E         	goto	u940
  1222   00FD90                     u941:
  1223   00FD90  EF7F  F07E         	goto	l1648
  1224   00FD94                     u940:
  1225   00FD94                     
  1226                           ;MCAL_layer/GPIO/GPIO.c: 27:             ((*((volatile uint8 *)(tris_registers[pin_confi
      +                          g->port]))) |= (0x01 << pin_config->pin));
  1227   00FD94  C02D  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  1228   00FD98  C02E  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  1229   00FD9C  30DF               	rrcf	223,w,c
  1230   00FD9E  32E8               	rrcf	wreg,f,c
  1231   00FDA0  32E8               	rrcf	wreg,f,c
  1232   00FDA2  0B07               	andlw	7
  1233   00FDA4  6E2F               	movwf	??_gpio_pin_direction_initialize^0,c
  1234   00FDA6  0E01               	movlw	1
  1235   00FDA8  6E30               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  1236   00FDAA  2A2F               	incf	??_gpio_pin_direction_initialize^0,f,c
  1237   00FDAC  EFDA  F07E         	goto	u954
  1238   00FDB0                     u955:
  1239   00FDB0  90D8               	bcf	status,0,c
  1240   00FDB2  3630               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  1241   00FDB4                     u954:
  1242   00FDB4  2E2F               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  1243   00FDB6  EFD8  F07E         	goto	u955
  1244   00FDBA  C02D  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  1245   00FDBE  C02E  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  1246   00FDC2  50DF               	movf	223,w,c
  1247   00FDC4  0B07               	andlw	7
  1248   00FDC6  6E31               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  1249   00FDC8  5031               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  1250   00FDCA  0D02               	mullw	2
  1251   00FDCC  0E15               	movlw	low _tris_registers
  1252   00FDCE  24F3               	addwf	243,w,c
  1253   00FDD0  6ED9               	movwf	fsr2l,c
  1254   00FDD2  0E00               	movlw	high _tris_registers
  1255   00FDD4  20F4               	addwfc	prodh,w,c
  1256   00FDD6  6EDA               	movwf	fsr2h,c
  1257   00FDD8  CFDE F032          	movff	postinc2,??_gpio_pin_direction_initialize+3
  1258   00FDDC  CFDD F033          	movff	postdec2,??_gpio_pin_direction_initialize+4
  1259   00FDE0  C032  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  1260   00FDE4  C033  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  1261   00FDE8  5030               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1262   00FDEA  12DF               	iorwf	indf2,f,c
  1263   00FDEC                     l192:
  1264                           
  1265                           ;MCAL_layer/GPIO/GPIO.c: 34:     return ret;
  1266   00FDEC  5035               	movf	gpio_pin_direction_initialize@ret^0,w,c
  1267   00FDEE  0012               	return		;funcret
  1268   00FDF0                     __end_of_gpio_pin_direction_initialize:
  1269                           	callstack 0
  1270                           
  1271 ;; *************** function ___awmod *****************
  1272 ;; Defined at:
  1273 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awmod.c"
  1274 ;; Parameters:    Size  Location     Type
  1275 ;;  dividend        2    0[COMRAM] int 
  1276 ;;  divisor         2    2[COMRAM] int 
  1277 ;; Auto vars:     Size  Location     Type
  1278 ;;  sign            1    5[COMRAM] unsigned char 
  1279 ;;  counter         1    4[COMRAM] unsigned char 
  1280 ;; Return value:  Size  Location     Type
  1281 ;;                  2    0[COMRAM] int 
  1282 ;; Registers used:
  1283 ;;		wreg, status,2, status,0
  1284 ;; Tracked objects:
  1285 ;;		On entry : 0/0
  1286 ;;		On exit  : 0/0
  1287 ;;		Unchanged: 0/0
  1288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1289 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1290 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1292 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1293 ;;Total ram usage:        6 bytes
  1294 ;; Hardware stack levels used: 1
  1295 ;; This function calls:
  1296 ;;		Nothing
  1297 ;; This function is called by:
  1298 ;;		_main
  1299 ;; This function uses a non-reentrant model
  1300 ;;
  1301                           
  1302                           	psect	text6
  1303   00F7C2                     __ptext6:
  1304                           	callstack 0
  1305   00F7C2                     ___awmod:
  1306                           	callstack 30
  1307   00F7C2  0E00               	movlw	0
  1308   00F7C4  6E32               	movwf	___awmod@sign^0,c
  1309   00F7C6  BE2E               	btfsc	(___awmod@dividend+1)^0,7,c
  1310   00F7C8  EFEA  F07B         	goto	u1190
  1311   00F7CC  EFE8  F07B         	goto	u1191
  1312   00F7D0                     u1191:
  1313   00F7D0  EFF0  F07B         	goto	l1868
  1314   00F7D4                     u1190:
  1315   00F7D4  6C2D               	negf	___awmod@dividend^0,c
  1316   00F7D6  1E2E               	comf	(___awmod@dividend+1)^0,f,c
  1317   00F7D8  B0D8               	btfsc	status,0,c
  1318   00F7DA  2A2E               	incf	(___awmod@dividend+1)^0,f,c
  1319   00F7DC  0E01               	movlw	1
  1320   00F7DE  6E32               	movwf	___awmod@sign^0,c
  1321   00F7E0                     l1868:
  1322   00F7E0  BE30               	btfsc	(___awmod@divisor+1)^0,7,c
  1323   00F7E2  EFF7  F07B         	goto	u1200
  1324   00F7E6  EFF5  F07B         	goto	u1201
  1325   00F7EA                     u1201:
  1326   00F7EA  EFFB  F07B         	goto	l1872
  1327   00F7EE                     u1200:
  1328   00F7EE  6C2F               	negf	___awmod@divisor^0,c
  1329   00F7F0  1E30               	comf	(___awmod@divisor+1)^0,f,c
  1330   00F7F2  B0D8               	btfsc	status,0,c
  1331   00F7F4  2A30               	incf	(___awmod@divisor+1)^0,f,c
  1332   00F7F6                     l1872:
  1333   00F7F6  502F               	movf	___awmod@divisor^0,w,c
  1334   00F7F8  1030               	iorwf	(___awmod@divisor+1)^0,w,c
  1335   00F7FA  B4D8               	btfsc	status,2,c
  1336   00F7FC  EF02  F07C         	goto	u1211
  1337   00F800  EF04  F07C         	goto	u1210
  1338   00F804                     u1211:
  1339   00F804  EF28  F07C         	goto	l1888
  1340   00F808                     u1210:
  1341   00F808  0E01               	movlw	1
  1342   00F80A  6E31               	movwf	___awmod@counter^0,c
  1343   00F80C  EF0C  F07C         	goto	l1878
  1344   00F810                     l1876:
  1345   00F810  90D8               	bcf	status,0,c
  1346   00F812  362F               	rlcf	___awmod@divisor^0,f,c
  1347   00F814  3630               	rlcf	(___awmod@divisor+1)^0,f,c
  1348   00F816  2A31               	incf	___awmod@counter^0,f,c
  1349   00F818                     l1878:
  1350   00F818  AE30               	btfss	(___awmod@divisor+1)^0,7,c
  1351   00F81A  EF11  F07C         	goto	u1221
  1352   00F81E  EF13  F07C         	goto	u1220
  1353   00F822                     u1221:
  1354   00F822  EF08  F07C         	goto	l1876
  1355   00F826                     u1220:
  1356   00F826                     l1880:
  1357   00F826  502F               	movf	___awmod@divisor^0,w,c
  1358   00F828  5C2D               	subwf	___awmod@dividend^0,w,c
  1359   00F82A  5030               	movf	(___awmod@divisor+1)^0,w,c
  1360   00F82C  582E               	subwfb	(___awmod@dividend+1)^0,w,c
  1361   00F82E  A0D8               	btfss	status,0,c
  1362   00F830  EF1C  F07C         	goto	u1231
  1363   00F834  EF1E  F07C         	goto	u1230
  1364   00F838                     u1231:
  1365   00F838  EF22  F07C         	goto	l1884
  1366   00F83C                     u1230:
  1367   00F83C  502F               	movf	___awmod@divisor^0,w,c
  1368   00F83E  5E2D               	subwf	___awmod@dividend^0,f,c
  1369   00F840  5030               	movf	(___awmod@divisor+1)^0,w,c
  1370   00F842  5A2E               	subwfb	(___awmod@dividend+1)^0,f,c
  1371   00F844                     l1884:
  1372   00F844  90D8               	bcf	status,0,c
  1373   00F846  3230               	rrcf	(___awmod@divisor+1)^0,f,c
  1374   00F848  322F               	rrcf	___awmod@divisor^0,f,c
  1375   00F84A  2E31               	decfsz	___awmod@counter^0,f,c
  1376   00F84C  EF13  F07C         	goto	l1880
  1377   00F850                     l1888:
  1378   00F850  5032               	movf	___awmod@sign^0,w,c
  1379   00F852  B4D8               	btfsc	status,2,c
  1380   00F854  EF2E  F07C         	goto	u1241
  1381   00F858  EF30  F07C         	goto	u1240
  1382   00F85C                     u1241:
  1383   00F85C  EF34  F07C         	goto	l1892
  1384   00F860                     u1240:
  1385   00F860  6C2D               	negf	___awmod@dividend^0,c
  1386   00F862  1E2E               	comf	(___awmod@dividend+1)^0,f,c
  1387   00F864  B0D8               	btfsc	status,0,c
  1388   00F866  2A2E               	incf	(___awmod@dividend+1)^0,f,c
  1389   00F868                     l1892:
  1390   00F868  C02D  F02D         	movff	___awmod@dividend,?___awmod
  1391   00F86C  C02E  F02E         	movff	___awmod@dividend+1,?___awmod+1
  1392   00F870  0012               	return		;funcret
  1393   00F872                     __end_of___awmod:
  1394                           	callstack 0
  1395                           
  1396 ;; *************** function ___awdiv *****************
  1397 ;; Defined at:
  1398 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  1399 ;; Parameters:    Size  Location     Type
  1400 ;;  dividend        2    0[COMRAM] int 
  1401 ;;  divisor         2    2[COMRAM] int 
  1402 ;; Auto vars:     Size  Location     Type
  1403 ;;  quotient        2    6[COMRAM] int 
  1404 ;;  sign            1    5[COMRAM] unsigned char 
  1405 ;;  counter         1    4[COMRAM] unsigned char 
  1406 ;; Return value:  Size  Location     Type
  1407 ;;                  2    0[COMRAM] int 
  1408 ;; Registers used:
  1409 ;;		wreg, status,2, status,0
  1410 ;; Tracked objects:
  1411 ;;		On entry : 0/0
  1412 ;;		On exit  : 0/0
  1413 ;;		Unchanged: 0/0
  1414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1415 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1416 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1418 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1419 ;;Total ram usage:        8 bytes
  1420 ;; Hardware stack levels used: 1
  1421 ;; This function calls:
  1422 ;;		Nothing
  1423 ;; This function is called by:
  1424 ;;		_main
  1425 ;; This function uses a non-reentrant model
  1426 ;;
  1427                           
  1428                           	psect	text7
  1429   00F872                     __ptext7:
  1430                           	callstack 0
  1431   00F872                     ___awdiv:
  1432                           	callstack 30
  1433   00F872  0E00               	movlw	0
  1434   00F874  6E32               	movwf	___awdiv@sign^0,c
  1435   00F876  BE30               	btfsc	(___awdiv@divisor+1)^0,7,c
  1436   00F878  EF42  F07C         	goto	u1130
  1437   00F87C  EF40  F07C         	goto	u1131
  1438   00F880                     u1131:
  1439   00F880  EF48  F07C         	goto	l1824
  1440   00F884                     u1130:
  1441   00F884  6C2F               	negf	___awdiv@divisor^0,c
  1442   00F886  1E30               	comf	(___awdiv@divisor+1)^0,f,c
  1443   00F888  B0D8               	btfsc	status,0,c
  1444   00F88A  2A30               	incf	(___awdiv@divisor+1)^0,f,c
  1445   00F88C  0E01               	movlw	1
  1446   00F88E  6E32               	movwf	___awdiv@sign^0,c
  1447   00F890                     l1824:
  1448   00F890  BE2E               	btfsc	(___awdiv@dividend+1)^0,7,c
  1449   00F892  EF4F  F07C         	goto	u1140
  1450   00F896  EF4D  F07C         	goto	u1141
  1451   00F89A                     u1141:
  1452   00F89A  EF55  F07C         	goto	l1830
  1453   00F89E                     u1140:
  1454   00F89E  6C2D               	negf	___awdiv@dividend^0,c
  1455   00F8A0  1E2E               	comf	(___awdiv@dividend+1)^0,f,c
  1456   00F8A2  B0D8               	btfsc	status,0,c
  1457   00F8A4  2A2E               	incf	(___awdiv@dividend+1)^0,f,c
  1458   00F8A6  0E01               	movlw	1
  1459   00F8A8  1A32               	xorwf	___awdiv@sign^0,f,c
  1460   00F8AA                     l1830:
  1461   00F8AA  0E00               	movlw	0
  1462   00F8AC  6E34               	movwf	(___awdiv@quotient+1)^0,c
  1463   00F8AE  0E00               	movlw	0
  1464   00F8B0  6E33               	movwf	___awdiv@quotient^0,c
  1465   00F8B2  502F               	movf	___awdiv@divisor^0,w,c
  1466   00F8B4  1030               	iorwf	(___awdiv@divisor+1)^0,w,c
  1467   00F8B6  B4D8               	btfsc	status,2,c
  1468   00F8B8  EF60  F07C         	goto	u1151
  1469   00F8BC  EF62  F07C         	goto	u1150
  1470   00F8C0                     u1151:
  1471   00F8C0  EF8A  F07C         	goto	l1852
  1472   00F8C4                     u1150:
  1473   00F8C4  0E01               	movlw	1
  1474   00F8C6  6E31               	movwf	___awdiv@counter^0,c
  1475   00F8C8  EF6A  F07C         	goto	l1838
  1476   00F8CC                     l1836:
  1477   00F8CC  90D8               	bcf	status,0,c
  1478   00F8CE  362F               	rlcf	___awdiv@divisor^0,f,c
  1479   00F8D0  3630               	rlcf	(___awdiv@divisor+1)^0,f,c
  1480   00F8D2  2A31               	incf	___awdiv@counter^0,f,c
  1481   00F8D4                     l1838:
  1482   00F8D4  AE30               	btfss	(___awdiv@divisor+1)^0,7,c
  1483   00F8D6  EF6F  F07C         	goto	u1161
  1484   00F8DA  EF71  F07C         	goto	u1160
  1485   00F8DE                     u1161:
  1486   00F8DE  EF66  F07C         	goto	l1836
  1487   00F8E2                     u1160:
  1488   00F8E2                     l1840:
  1489   00F8E2  90D8               	bcf	status,0,c
  1490   00F8E4  3633               	rlcf	___awdiv@quotient^0,f,c
  1491   00F8E6  3634               	rlcf	(___awdiv@quotient+1)^0,f,c
  1492   00F8E8  502F               	movf	___awdiv@divisor^0,w,c
  1493   00F8EA  5C2D               	subwf	___awdiv@dividend^0,w,c
  1494   00F8EC  5030               	movf	(___awdiv@divisor+1)^0,w,c
  1495   00F8EE  582E               	subwfb	(___awdiv@dividend+1)^0,w,c
  1496   00F8F0  A0D8               	btfss	status,0,c
  1497   00F8F2  EF7D  F07C         	goto	u1171
  1498   00F8F6  EF7F  F07C         	goto	u1170
  1499   00F8FA                     u1171:
  1500   00F8FA  EF84  F07C         	goto	l1848
  1501   00F8FE                     u1170:
  1502   00F8FE  502F               	movf	___awdiv@divisor^0,w,c
  1503   00F900  5E2D               	subwf	___awdiv@dividend^0,f,c
  1504   00F902  5030               	movf	(___awdiv@divisor+1)^0,w,c
  1505   00F904  5A2E               	subwfb	(___awdiv@dividend+1)^0,f,c
  1506   00F906  8033               	bsf	___awdiv@quotient^0,0,c
  1507   00F908                     l1848:
  1508   00F908  90D8               	bcf	status,0,c
  1509   00F90A  3230               	rrcf	(___awdiv@divisor+1)^0,f,c
  1510   00F90C  322F               	rrcf	___awdiv@divisor^0,f,c
  1511   00F90E  2E31               	decfsz	___awdiv@counter^0,f,c
  1512   00F910  EF71  F07C         	goto	l1840
  1513   00F914                     l1852:
  1514   00F914  5032               	movf	___awdiv@sign^0,w,c
  1515   00F916  B4D8               	btfsc	status,2,c
  1516   00F918  EF90  F07C         	goto	u1181
  1517   00F91C  EF92  F07C         	goto	u1180
  1518   00F920                     u1181:
  1519   00F920  EF96  F07C         	goto	l1856
  1520   00F924                     u1180:
  1521   00F924  6C33               	negf	___awdiv@quotient^0,c
  1522   00F926  1E34               	comf	(___awdiv@quotient+1)^0,f,c
  1523   00F928  B0D8               	btfsc	status,0,c
  1524   00F92A  2A34               	incf	(___awdiv@quotient+1)^0,f,c
  1525   00F92C                     l1856:
  1526   00F92C  C033  F02D         	movff	___awdiv@quotient,?___awdiv
  1527   00F930  C034  F02E         	movff	___awdiv@quotient+1,?___awdiv+1
  1528   00F934  0012               	return		;funcret
  1529   00F936                     __end_of___awdiv:
  1530                           	callstack 0
  1531                           
  1532 ;; *************** function _SVS_print_pov *****************
  1533 ;; Defined at:
  1534 ;;		line 92 in file "ECU_layer/7_SEGMENTS/7_SEGMENTS.c"
  1535 ;; Parameters:    Size  Location     Type
  1536 ;;  Seven_SEG       2   15[COMRAM] PTR struct .
  1537 ;;		 -> seven_seg(14), 
  1538 ;;  data            2   17[COMRAM] PTR unsigned char 
  1539 ;;		 -> main@data(6), 
  1540 ;; Auto vars:     Size  Location     Type
  1541 ;;  l               4   24[COMRAM] long 
  1542 ;;  svs_counter_    1   28[COMRAM] unsigned char 
  1543 ;;  svs_counter     1   30[COMRAM] unsigned char 
  1544 ;;  temp            1   29[COMRAM] struct .
  1545 ;;  ret             1    0        unsigned char 
  1546 ;; Return value:  Size  Location     Type
  1547 ;;                  1    wreg      unsigned char 
  1548 ;; Registers used:
  1549 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1550 ;; Tracked objects:
  1551 ;;		On entry : 0/0
  1552 ;;		On exit  : 0/0
  1553 ;;		Unchanged: 0/0
  1554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1555 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1556 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1557 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1558 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1559 ;;Total ram usage:       16 bytes
  1560 ;; Hardware stack levels used: 1
  1561 ;; Hardware stack levels required when called: 2
  1562 ;; This function calls:
  1563 ;;		_SVS_print
  1564 ;;		_gpio_pin_write_logic
  1565 ;; This function is called by:
  1566 ;;		_main
  1567 ;; This function uses a non-reentrant model
  1568 ;;
  1569                           
  1570                           	psect	text8
  1571   00FDF0                     __ptext8:
  1572                           	callstack 0
  1573   00FDF0                     _SVS_print_pov:
  1574                           	callstack 28
  1575   00FDF0                     
  1576                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 95:         if(Seven_SEG == ((void*)0)){
  1577   00FDF0  503C               	movf	SVS_print_pov@Seven_SEG^0,w,c
  1578   00FDF2  103D               	iorwf	(SVS_print_pov@Seven_SEG+1)^0,w,c
  1579   00FDF4  A4D8               	btfss	status,2,c
  1580   00FDF6  EFFF  F07E         	goto	u1081
  1581   00FDFA  EF01  F07F         	goto	u1080
  1582   00FDFE                     u1081:
  1583   00FDFE  EF03  F07F         	goto	l1766
  1584   00FE02                     u1080:
  1585   00FE02                     
  1586                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 97:         }
  1587   00FE02  EFFF  F07F         	goto	l42
  1588   00FE06                     l1766:
  1589                           
  1590                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 100:             pin_config_t temp ;;ECU_layer/7_SEG
      +                          MENTS/7_SEGMENTS.c: 101:             for(uint8 svs_counter_2 = 0 ;svs_counter_2<6; svs_c
      +                          ounter_2++){
  1591   00FE06  0E00               	movlw	0
  1592   00FE08  6E49               	movwf	SVS_print_pov@svs_counter_2^0,c
  1593   00FE0A                     l1772:
  1594                           
  1595                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 103:                 temp.port = Seven_SEG->SVS_EN_P
      +                          INS[svs_counter_2].SVS_en_port;
  1596   00FE0A  5049               	movf	SVS_print_pov@svs_counter_2^0,w,c
  1597   00FE0C  0D02               	mullw	2
  1598   00FE0E  CFF3 F040          	movff	prodl,??_SVS_print_pov
  1599   00FE12  CFF4 F041          	movff	prodh,??_SVS_print_pov+1
  1600   00FE16  5040               	movf	??_SVS_print_pov^0,w,c
  1601   00FE18  243C               	addwf	SVS_print_pov@Seven_SEG^0,w,c
  1602   00FE1A  6E42               	movwf	(??_SVS_print_pov+2)^0,c
  1603   00FE1C  5041               	movf	(??_SVS_print_pov+1)^0,w,c
  1604   00FE1E  203D               	addwfc	(SVS_print_pov@Seven_SEG+1)^0,w,c
  1605   00FE20  6E43               	movwf	(??_SVS_print_pov+3)^0,c
  1606   00FE22  0E02               	movlw	2
  1607   00FE24  2442               	addwf	(??_SVS_print_pov+2)^0,w,c
  1608   00FE26  6ED9               	movwf	fsr2l,c
  1609   00FE28  0E00               	movlw	0
  1610   00FE2A  2043               	addwfc	(??_SVS_print_pov+3)^0,w,c
  1611   00FE2C  6EDA               	movwf	fsr2h,c
  1612   00FE2E  50DF               	movf	indf2,w,c
  1613   00FE30  6E44               	movwf	(??_SVS_print_pov+4)^0,c
  1614   00FE32  504A               	movf	SVS_print_pov@temp^0,w,c
  1615   00FE34  1844               	xorwf	(??_SVS_print_pov+4)^0,w,c
  1616   00FE36  0BF8               	andlw	-8
  1617   00FE38  1844               	xorwf	(??_SVS_print_pov+4)^0,w,c
  1618   00FE3A  6E4A               	movwf	SVS_print_pov@temp^0,c
  1619                           
  1620                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 104:                 temp.pin = Seven_SEG->SVS_EN_PI
      +                          NS[svs_counter_2].SVS_en_pin;
  1621   00FE3C  5049               	movf	SVS_print_pov@svs_counter_2^0,w,c
  1622   00FE3E  0D02               	mullw	2
  1623   00FE40  CFF3 F040          	movff	prodl,??_SVS_print_pov
  1624   00FE44  CFF4 F041          	movff	prodh,??_SVS_print_pov+1
  1625   00FE48  5040               	movf	??_SVS_print_pov^0,w,c
  1626   00FE4A  243C               	addwf	SVS_print_pov@Seven_SEG^0,w,c
  1627   00FE4C  6E42               	movwf	(??_SVS_print_pov+2)^0,c
  1628   00FE4E  5041               	movf	(??_SVS_print_pov+1)^0,w,c
  1629   00FE50  203D               	addwfc	(SVS_print_pov@Seven_SEG+1)^0,w,c
  1630   00FE52  6E43               	movwf	(??_SVS_print_pov+3)^0,c
  1631   00FE54  0E03               	movlw	3
  1632   00FE56  2442               	addwf	(??_SVS_print_pov+2)^0,w,c
  1633   00FE58  6ED9               	movwf	fsr2l,c
  1634   00FE5A  0E00               	movlw	0
  1635   00FE5C  2043               	addwfc	(??_SVS_print_pov+3)^0,w,c
  1636   00FE5E  6EDA               	movwf	fsr2h,c
  1637   00FE60  50DF               	movf	indf2,w,c
  1638   00FE62  6E44               	movwf	(??_SVS_print_pov+4)^0,c
  1639   00FE64  4644               	rlncf	(??_SVS_print_pov+4)^0,f,c
  1640   00FE66  4644               	rlncf	(??_SVS_print_pov+4)^0,f,c
  1641   00FE68  4644               	rlncf	(??_SVS_print_pov+4)^0,f,c
  1642   00FE6A  504A               	movf	SVS_print_pov@temp^0,w,c
  1643   00FE6C  1844               	xorwf	(??_SVS_print_pov+4)^0,w,c
  1644   00FE6E  0BC7               	andlw	-57
  1645   00FE70  1844               	xorwf	(??_SVS_print_pov+4)^0,w,c
  1646   00FE72  6E4A               	movwf	SVS_print_pov@temp^0,c
  1647   00FE74                     
  1648                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 105:                 gpio_pin_write_logic( &temp, GP
      +                          IO_HIGH);
  1649   00FE74  0E4A               	movlw	low SVS_print_pov@temp
  1650   00FE76  6E2D               	movwf	gpio_pin_write_logic@pin_config^0,c
  1651   00FE78  0E00               	movlw	high SVS_print_pov@temp
  1652   00FE7A  6E2E               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  1653   00FE7C  0E01               	movlw	1
  1654   00FE7E  6E2F               	movwf	gpio_pin_write_logic@logic^0,c
  1655   00FE80  EC9B  F07C         	call	_gpio_pin_write_logic	;wreg free
  1656   00FE84                     
  1657                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 106:             }
  1658   00FE84  2A49               	incf	SVS_print_pov@svs_counter_2^0,f,c
  1659   00FE86  0E05               	movlw	5
  1660   00FE88  6449               	cpfsgt	SVS_print_pov@svs_counter_2^0,c
  1661   00FE8A  EF49  F07F         	goto	u1091
  1662   00FE8E  EF4B  F07F         	goto	u1090
  1663   00FE92                     u1091:
  1664   00FE92  EF05  F07F         	goto	l1772
  1665   00FE96                     u1090:
  1666   00FE96                     
  1667                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 107:             uint8 svs_counter = 0;
  1668   00FE96  0E00               	movlw	0
  1669   00FE98  6E4B               	movwf	SVS_print_pov@svs_counter^0,c
  1670   00FE9A                     l1786:
  1671                           
  1672                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 109:                 if(svs_counter != 0){
  1673   00FE9A  504B               	movf	SVS_print_pov@svs_counter^0,w,c
  1674   00FE9C  B4D8               	btfsc	status,2,c
  1675   00FE9E  EF53  F07F         	goto	u1101
  1676   00FEA2  EF55  F07F         	goto	u1100
  1677   00FEA6                     u1101:
  1678   00FEA6  EF8C  F07F         	goto	l1792
  1679   00FEAA                     u1100:
  1680   00FEAA                     
  1681                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 110:                     temp.port = Seven_SEG->SVS_
      +                          EN_PINS[svs_counter-1].SVS_en_port;
  1682   00FEAA  504B               	movf	SVS_print_pov@svs_counter^0,w,c
  1683   00FEAC  6E40               	movwf	??_SVS_print_pov^0,c
  1684   00FEAE  6A41               	clrf	(??_SVS_print_pov+1)^0,c
  1685   00FEB0  90D8               	bcf	status,0,c
  1686   00FEB2  3640               	rlcf	??_SVS_print_pov^0,f,c
  1687   00FEB4  3641               	rlcf	(??_SVS_print_pov+1)^0,f,c
  1688   00FEB6  5040               	movf	??_SVS_print_pov^0,w,c
  1689   00FEB8  243C               	addwf	SVS_print_pov@Seven_SEG^0,w,c
  1690   00FEBA  6ED9               	movwf	fsr2l,c
  1691   00FEBC  5041               	movf	(??_SVS_print_pov+1)^0,w,c
  1692   00FEBE  203D               	addwfc	(SVS_print_pov@Seven_SEG+1)^0,w,c
  1693   00FEC0  6EDA               	movwf	fsr2h,c
  1694   00FEC2  50DF               	movf	indf2,w,c
  1695   00FEC4  6E42               	movwf	(??_SVS_print_pov+2)^0,c
  1696   00FEC6  504A               	movf	SVS_print_pov@temp^0,w,c
  1697   00FEC8  1842               	xorwf	(??_SVS_print_pov+2)^0,w,c
  1698   00FECA  0BF8               	andlw	-8
  1699   00FECC  1842               	xorwf	(??_SVS_print_pov+2)^0,w,c
  1700   00FECE  6E4A               	movwf	SVS_print_pov@temp^0,c
  1701                           
  1702                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 111:                     temp.pin = Seven_SEG->SVS_E
      +                          N_PINS[svs_counter-1].SVS_en_pin;
  1703   00FED0  504B               	movf	SVS_print_pov@svs_counter^0,w,c
  1704   00FED2  6E40               	movwf	??_SVS_print_pov^0,c
  1705   00FED4  6A41               	clrf	(??_SVS_print_pov+1)^0,c
  1706   00FED6  90D8               	bcf	status,0,c
  1707   00FED8  3640               	rlcf	??_SVS_print_pov^0,f,c
  1708   00FEDA  3641               	rlcf	(??_SVS_print_pov+1)^0,f,c
  1709   00FEDC  5040               	movf	??_SVS_print_pov^0,w,c
  1710   00FEDE  243C               	addwf	SVS_print_pov@Seven_SEG^0,w,c
  1711   00FEE0  6E42               	movwf	(??_SVS_print_pov+2)^0,c
  1712   00FEE2  5041               	movf	(??_SVS_print_pov+1)^0,w,c
  1713   00FEE4  203D               	addwfc	(SVS_print_pov@Seven_SEG+1)^0,w,c
  1714   00FEE6  6E43               	movwf	(??_SVS_print_pov+3)^0,c
  1715   00FEE8  0E01               	movlw	1
  1716   00FEEA  2442               	addwf	(??_SVS_print_pov+2)^0,w,c
  1717   00FEEC  6ED9               	movwf	fsr2l,c
  1718   00FEEE  0E00               	movlw	0
  1719   00FEF0  2043               	addwfc	(??_SVS_print_pov+3)^0,w,c
  1720   00FEF2  6EDA               	movwf	fsr2h,c
  1721   00FEF4  50DF               	movf	indf2,w,c
  1722   00FEF6  6E44               	movwf	(??_SVS_print_pov+4)^0,c
  1723   00FEF8  4644               	rlncf	(??_SVS_print_pov+4)^0,f,c
  1724   00FEFA  4644               	rlncf	(??_SVS_print_pov+4)^0,f,c
  1725   00FEFC  4644               	rlncf	(??_SVS_print_pov+4)^0,f,c
  1726   00FEFE  504A               	movf	SVS_print_pov@temp^0,w,c
  1727   00FF00  1844               	xorwf	(??_SVS_print_pov+4)^0,w,c
  1728   00FF02  0BC7               	andlw	-57
  1729   00FF04  1844               	xorwf	(??_SVS_print_pov+4)^0,w,c
  1730   00FF06  6E4A               	movwf	SVS_print_pov@temp^0,c
  1731   00FF08                     
  1732                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 112:                     gpio_pin_write_logic( &temp
      +                          , GPIO_HIGH);
  1733   00FF08  0E4A               	movlw	low SVS_print_pov@temp
  1734   00FF0A  6E2D               	movwf	gpio_pin_write_logic@pin_config^0,c
  1735   00FF0C  0E00               	movlw	high SVS_print_pov@temp
  1736   00FF0E  6E2E               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  1737   00FF10  0E01               	movlw	1
  1738   00FF12  6E2F               	movwf	gpio_pin_write_logic@logic^0,c
  1739   00FF14  EC9B  F07C         	call	_gpio_pin_write_logic	;wreg free
  1740   00FF18                     l1792:
  1741                           
  1742                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 114:                 temp.port = Seven_SEG->SVS_EN_P
      +                          INS[svs_counter].SVS_en_port;
  1743   00FF18  504B               	movf	SVS_print_pov@svs_counter^0,w,c
  1744   00FF1A  0D02               	mullw	2
  1745   00FF1C  CFF3 F040          	movff	prodl,??_SVS_print_pov
  1746   00FF20  CFF4 F041          	movff	prodh,??_SVS_print_pov+1
  1747   00FF24  5040               	movf	??_SVS_print_pov^0,w,c
  1748   00FF26  243C               	addwf	SVS_print_pov@Seven_SEG^0,w,c
  1749   00FF28  6E42               	movwf	(??_SVS_print_pov+2)^0,c
  1750   00FF2A  5041               	movf	(??_SVS_print_pov+1)^0,w,c
  1751   00FF2C  203D               	addwfc	(SVS_print_pov@Seven_SEG+1)^0,w,c
  1752   00FF2E  6E43               	movwf	(??_SVS_print_pov+3)^0,c
  1753   00FF30  0E02               	movlw	2
  1754   00FF32  2442               	addwf	(??_SVS_print_pov+2)^0,w,c
  1755   00FF34  6ED9               	movwf	fsr2l,c
  1756   00FF36  0E00               	movlw	0
  1757   00FF38  2043               	addwfc	(??_SVS_print_pov+3)^0,w,c
  1758   00FF3A  6EDA               	movwf	fsr2h,c
  1759   00FF3C  50DF               	movf	indf2,w,c
  1760   00FF3E  6E44               	movwf	(??_SVS_print_pov+4)^0,c
  1761   00FF40  504A               	movf	SVS_print_pov@temp^0,w,c
  1762   00FF42  1844               	xorwf	(??_SVS_print_pov+4)^0,w,c
  1763   00FF44  0BF8               	andlw	-8
  1764   00FF46  1844               	xorwf	(??_SVS_print_pov+4)^0,w,c
  1765   00FF48  6E4A               	movwf	SVS_print_pov@temp^0,c
  1766   00FF4A                     
  1767                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 115:                 temp.pin = Seven_SEG->SVS_EN_PI
      +                          NS[svs_counter].SVS_en_pin;
  1768   00FF4A  504B               	movf	SVS_print_pov@svs_counter^0,w,c
  1769   00FF4C  0D02               	mullw	2
  1770   00FF4E  CFF3 F040          	movff	prodl,??_SVS_print_pov
  1771   00FF52  CFF4 F041          	movff	prodh,??_SVS_print_pov+1
  1772   00FF56  5040               	movf	??_SVS_print_pov^0,w,c
  1773   00FF58  243C               	addwf	SVS_print_pov@Seven_SEG^0,w,c
  1774   00FF5A  6E42               	movwf	(??_SVS_print_pov+2)^0,c
  1775   00FF5C  5041               	movf	(??_SVS_print_pov+1)^0,w,c
  1776   00FF5E  203D               	addwfc	(SVS_print_pov@Seven_SEG+1)^0,w,c
  1777   00FF60  6E43               	movwf	(??_SVS_print_pov+3)^0,c
  1778   00FF62  0E03               	movlw	3
  1779   00FF64  2442               	addwf	(??_SVS_print_pov+2)^0,w,c
  1780   00FF66  6ED9               	movwf	fsr2l,c
  1781   00FF68  0E00               	movlw	0
  1782   00FF6A  2043               	addwfc	(??_SVS_print_pov+3)^0,w,c
  1783   00FF6C  6EDA               	movwf	fsr2h,c
  1784   00FF6E  50DF               	movf	indf2,w,c
  1785   00FF70  6E44               	movwf	(??_SVS_print_pov+4)^0,c
  1786   00FF72  4644               	rlncf	(??_SVS_print_pov+4)^0,f,c
  1787   00FF74  4644               	rlncf	(??_SVS_print_pov+4)^0,f,c
  1788   00FF76  4644               	rlncf	(??_SVS_print_pov+4)^0,f,c
  1789   00FF78  504A               	movf	SVS_print_pov@temp^0,w,c
  1790   00FF7A  1844               	xorwf	(??_SVS_print_pov+4)^0,w,c
  1791   00FF7C  0BC7               	andlw	-57
  1792   00FF7E  1844               	xorwf	(??_SVS_print_pov+4)^0,w,c
  1793   00FF80  6E4A               	movwf	SVS_print_pov@temp^0,c
  1794   00FF82                     
  1795                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 116:                 gpio_pin_write_logic( &temp, GP
      +                          IO_LOW);
  1796   00FF82  0E4A               	movlw	low SVS_print_pov@temp
  1797   00FF84  6E2D               	movwf	gpio_pin_write_logic@pin_config^0,c
  1798   00FF86  0E00               	movlw	high SVS_print_pov@temp
  1799   00FF88  6E2E               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  1800   00FF8A  0E00               	movlw	0
  1801   00FF8C  6E2F               	movwf	gpio_pin_write_logic@logic^0,c
  1802   00FF8E  EC9B  F07C         	call	_gpio_pin_write_logic	;wreg free
  1803   00FF92                     
  1804                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 117:                 SVS_print(Seven_SEG, data[svs_c
      +                          ounter]);
  1805   00FF92  C03C  F037         	movff	SVS_print_pov@Seven_SEG,SVS_print@Seven_SEG
  1806   00FF96  C03D  F038         	movff	SVS_print_pov@Seven_SEG+1,SVS_print@Seven_SEG+1
  1807   00FF9A  504B               	movf	SVS_print_pov@svs_counter^0,w,c
  1808   00FF9C  243E               	addwf	SVS_print_pov@data^0,w,c
  1809   00FF9E  6ED9               	movwf	fsr2l,c
  1810   00FFA0  0E00               	movlw	0
  1811   00FFA2  203F               	addwfc	(SVS_print_pov@data+1)^0,w,c
  1812   00FFA4  6EDA               	movwf	fsr2h,c
  1813   00FFA6  50DF               	movf	indf2,w,c
  1814   00FFA8  6E39               	movwf	SVS_print@data^0,c
  1815   00FFAA  EC99  F07B         	call	_SVS_print	;wreg free
  1816   00FFAE                     
  1817                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 118:                 for(long l =0; l<=500;l++);
  1818   00FFAE  0E00               	movlw	0
  1819   00FFB0  6E45               	movwf	SVS_print_pov@l^0,c
  1820   00FFB2  0E00               	movlw	0
  1821   00FFB4  6E46               	movwf	(SVS_print_pov@l+1)^0,c
  1822   00FFB6  0E00               	movlw	0
  1823   00FFB8  6E47               	movwf	(SVS_print_pov@l+2)^0,c
  1824   00FFBA  0E00               	movlw	0
  1825   00FFBC  6E48               	movwf	(SVS_print_pov@l+3)^0,c
  1826   00FFBE                     l1806:
  1827   00FFBE  0E01               	movlw	1
  1828   00FFC0  2645               	addwf	SVS_print_pov@l^0,f,c
  1829   00FFC2  0E00               	movlw	0
  1830   00FFC4  2246               	addwfc	(SVS_print_pov@l+1)^0,f,c
  1831   00FFC6  2247               	addwfc	(SVS_print_pov@l+2)^0,f,c
  1832   00FFC8  2248               	addwfc	(SVS_print_pov@l+3)^0,f,c
  1833   00FFCA  BE48               	btfsc	(SVS_print_pov@l+3)^0,7,c
  1834   00FFCC  EFF4  F07F         	goto	u1111
  1835   00FFD0  5048               	movf	(SVS_print_pov@l+3)^0,w,c
  1836   00FFD2  1047               	iorwf	(SVS_print_pov@l+2)^0,w,c
  1837   00FFD4  E10B               	bnz	u1110
  1838   00FFD6  0EF5               	movlw	245
  1839   00FFD8  5C45               	subwf	SVS_print_pov@l^0,w,c
  1840   00FFDA  0E01               	movlw	1
  1841   00FFDC  5846               	subwfb	(SVS_print_pov@l+1)^0,w,c
  1842   00FFDE  A0D8               	btfss	status,0,c
  1843   00FFE0  EFF4  F07F         	goto	u1111
  1844   00FFE4  EFF6  F07F         	goto	u1110
  1845   00FFE8                     u1111:
  1846   00FFE8  EFDF  F07F         	goto	l1806
  1847   00FFEC                     u1110:
  1848   00FFEC                     
  1849                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 119:             }
  1850   00FFEC  2A4B               	incf	SVS_print_pov@svs_counter^0,f,c
  1851   00FFEE  0E05               	movlw	5
  1852   00FFF0  644B               	cpfsgt	SVS_print_pov@svs_counter^0,c
  1853   00FFF2  EFFD  F07F         	goto	u1121
  1854   00FFF6  EFFF  F07F         	goto	u1120
  1855   00FFFA                     u1121:
  1856   00FFFA  EF4D  F07F         	goto	l1786
  1857   00FFFE                     u1120:
  1858   00FFFE                     l42:
  1859   00FFFE  0012               	return		;funcret
  1860   010000                     __end_of_SVS_print_pov:
  1861                           	callstack 0
  1862                           
  1863 ;; *************** function _gpio_pin_write_logic *****************
  1864 ;; Defined at:
  1865 ;;		line 75 in file "MCAL_layer/GPIO/GPIO.c"
  1866 ;; Parameters:    Size  Location     Type
  1867 ;;  pin_config      2    0[COMRAM] PTR struct .
  1868 ;;		 -> led_turn_off@temp(1), led_turn_on@temp(1), led_intialize@temp(1), SVS_print_pov@temp(1), 
  1869 ;;  logic           1    2[COMRAM] enum E2798
  1870 ;; Auto vars:     Size  Location     Type
  1871 ;;  ret             1    9[COMRAM] unsigned char 
  1872 ;; Return value:  Size  Location     Type
  1873 ;;                  1    wreg      unsigned char 
  1874 ;; Registers used:
  1875 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1876 ;; Tracked objects:
  1877 ;;		On entry : 0/0
  1878 ;;		On exit  : 0/0
  1879 ;;		Unchanged: 0/0
  1880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1881 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1882 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1883 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1884 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1885 ;;Total ram usage:       10 bytes
  1886 ;; Hardware stack levels used: 1
  1887 ;; This function calls:
  1888 ;;		Nothing
  1889 ;; This function is called by:
  1890 ;;		_SVS_print_pov
  1891 ;;		_motor_turn_on
  1892 ;;		_motor_stop
  1893 ;;		_relay_turn_on
  1894 ;;		_relay_turn_off
  1895 ;;		_led_intialize
  1896 ;;		_led_turn_on
  1897 ;;		_led_turn_off
  1898 ;;		_gpio_pin_initialize
  1899 ;; This function uses a non-reentrant model
  1900 ;;
  1901                           
  1902                           	psect	text9
  1903   00F936                     __ptext9:
  1904                           	callstack 0
  1905   00F936                     _gpio_pin_write_logic:
  1906                           	callstack 29
  1907   00F936                     
  1908                           ;MCAL_layer/GPIO/GPIO.c: 77:     Std_ReturnType ret = (Std_ReturnType)0x00;
  1909   00F936  0E00               	movlw	0
  1910   00F938  6E36               	movwf	gpio_pin_write_logic@ret^0,c
  1911   00F93A                     
  1912                           ;MCAL_layer/GPIO/GPIO.c: 79:     if(pin_config == ((void*)0)){
  1913   00F93A  502D               	movf	gpio_pin_write_logic@pin_config^0,w,c
  1914   00F93C  102E               	iorwf	(gpio_pin_write_logic@pin_config+1)^0,w,c
  1915   00F93E  A4D8               	btfss	status,2,c
  1916   00F940  EFA4  F07C         	goto	u1051
  1917   00F944  EFA6  F07C         	goto	u1050
  1918   00F948                     u1051:
  1919   00F948  EF13  F07D         	goto	l1750
  1920   00F94C                     u1050:
  1921   00F94C                     l1736:
  1922                           
  1923                           ;MCAL_layer/GPIO/GPIO.c: 80:         ret =(Std_ReturnType)0x01;
  1924   00F94C  0E01               	movlw	1
  1925   00F94E  6E36               	movwf	gpio_pin_write_logic@ret^0,c
  1926                           
  1927                           ;MCAL_layer/GPIO/GPIO.c: 81:     }
  1928   00F950  EF28  F07D         	goto	l1752
  1929   00F954                     l1738:
  1930                           
  1931                           ;MCAL_layer/GPIO/GPIO.c: 85:                 ((*((volatile uint8 *)(lat_registers[pin_co
      +                          nfig->port]))) |= (0x01 << pin_config->pin));
  1932   00F954  C02D  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  1933   00F958  C02E  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  1934   00F95C  30DF               	rrcf	223,w,c
  1935   00F95E  32E8               	rrcf	wreg,f,c
  1936   00F960  32E8               	rrcf	wreg,f,c
  1937   00F962  0B07               	andlw	7
  1938   00F964  6E30               	movwf	??_gpio_pin_write_logic^0,c
  1939   00F966  0E01               	movlw	1
  1940   00F968  6E31               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1941   00F96A  2A30               	incf	??_gpio_pin_write_logic^0,f,c
  1942   00F96C  EFBA  F07C         	goto	u1064
  1943   00F970                     u1065:
  1944   00F970  90D8               	bcf	status,0,c
  1945   00F972  3631               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1946   00F974                     u1064:
  1947   00F974  2E30               	decfsz	??_gpio_pin_write_logic^0,f,c
  1948   00F976  EFB8  F07C         	goto	u1065
  1949   00F97A  C02D  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  1950   00F97E  C02E  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  1951   00F982  50DF               	movf	223,w,c
  1952   00F984  0B07               	andlw	7
  1953   00F986  6E32               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1954   00F988  5032               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1955   00F98A  0D02               	mullw	2
  1956   00F98C  0E01               	movlw	low _lat_registers
  1957   00F98E  24F3               	addwf	243,w,c
  1958   00F990  6ED9               	movwf	fsr2l,c
  1959   00F992  0E00               	movlw	high _lat_registers
  1960   00F994  20F4               	addwfc	prodh,w,c
  1961   00F996  6EDA               	movwf	fsr2h,c
  1962   00F998  CFDE F033          	movff	postinc2,??_gpio_pin_write_logic+3
  1963   00F99C  CFDD F034          	movff	postdec2,??_gpio_pin_write_logic+4
  1964   00F9A0  C033  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1965   00F9A4  C034  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1966   00F9A8  5031               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1967   00F9AA  12DF               	iorwf	indf2,f,c
  1968   00F9AC                     
  1969                           ;MCAL_layer/GPIO/GPIO.c: 86:                 pin_config->logic = GPIO_HIGH;
  1970   00F9AC  C02D  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  1971   00F9B0  C02E  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  1972   00F9B4  8EDF               	bsf	indf2,7,c
  1973                           
  1974                           ;MCAL_layer/GPIO/GPIO.c: 87:                 break;
  1975   00F9B6  EF28  F07D         	goto	l1752
  1976   00F9BA                     l1742:
  1977                           
  1978                           ;MCAL_layer/GPIO/GPIO.c: 89:                 ((*((volatile uint8 *)(lat_registers[pin_co
      +                          nfig->port]))) &= (~(0x01 << pin_config->pin)));
  1979   00F9BA  C02D  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  1980   00F9BE  C02E  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  1981   00F9C2  30DF               	rrcf	223,w,c
  1982   00F9C4  32E8               	rrcf	wreg,f,c
  1983   00F9C6  32E8               	rrcf	wreg,f,c
  1984   00F9C8  0B07               	andlw	7
  1985   00F9CA  6E30               	movwf	??_gpio_pin_write_logic^0,c
  1986   00F9CC  0E01               	movlw	1
  1987   00F9CE  6E31               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1988   00F9D0  2A30               	incf	??_gpio_pin_write_logic^0,f,c
  1989   00F9D2  EFED  F07C         	goto	u1074
  1990   00F9D6                     u1075:
  1991   00F9D6  90D8               	bcf	status,0,c
  1992   00F9D8  3631               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1993   00F9DA                     u1074:
  1994   00F9DA  2E30               	decfsz	??_gpio_pin_write_logic^0,f,c
  1995   00F9DC  EFEB  F07C         	goto	u1075
  1996   00F9E0  5031               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1997   00F9E2  0AFF               	xorlw	255
  1998   00F9E4  6E32               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1999   00F9E6  C02D  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  2000   00F9EA  C02E  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  2001   00F9EE  50DF               	movf	223,w,c
  2002   00F9F0  0B07               	andlw	7
  2003   00F9F2  6E33               	movwf	(??_gpio_pin_write_logic+3)^0,c
  2004   00F9F4  5033               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  2005   00F9F6  0D02               	mullw	2
  2006   00F9F8  0E01               	movlw	low _lat_registers
  2007   00F9FA  24F3               	addwf	243,w,c
  2008   00F9FC  6ED9               	movwf	fsr2l,c
  2009   00F9FE  0E00               	movlw	high _lat_registers
  2010   00FA00  20F4               	addwfc	prodh,w,c
  2011   00FA02  6EDA               	movwf	fsr2h,c
  2012   00FA04  CFDE F034          	movff	postinc2,??_gpio_pin_write_logic+4
  2013   00FA08  CFDD F035          	movff	postdec2,??_gpio_pin_write_logic+5
  2014   00FA0C  C034  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  2015   00FA10  C035  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  2016   00FA14  5032               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  2017   00FA16  16DF               	andwf	indf2,f,c
  2018   00FA18                     
  2019                           ;MCAL_layer/GPIO/GPIO.c: 90:                 pin_config->logic = GPIO_LOW;
  2020   00FA18  C02D  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  2021   00FA1C  C02E  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  2022   00FA20  9EDF               	bcf	indf2,7,c
  2023                           
  2024                           ;MCAL_layer/GPIO/GPIO.c: 91:                 break;
  2025   00FA22  EF28  F07D         	goto	l1752
  2026   00FA26                     l1750:
  2027   00FA26  502F               	movf	gpio_pin_write_logic@logic^0,w,c
  2028   00FA28  6E30               	movwf	??_gpio_pin_write_logic^0,c
  2029   00FA2A  6A31               	clrf	(??_gpio_pin_write_logic+1)^0,c
  2030                           
  2031                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2032                           ; Switch size 1, requested type "simple"
  2033                           ; Number of cases is 1, Range of values is 0 to 0
  2034                           ; switch strategies available:
  2035                           ; Name         Instructions Cycles
  2036                           ; simple_byte            4     3 (average)
  2037                           ;	Chosen strategy is simple_byte
  2038   00FA2C  5031               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  2039   00FA2E  0A00               	xorlw	0	; case 0
  2040   00FA30  B4D8               	btfsc	status,2,c
  2041   00FA32  EF1D  F07D         	goto	l2114
  2042   00FA36  EFA6  F07C         	goto	l1736
  2043   00FA3A                     l2114:
  2044                           
  2045                           ; Switch size 1, requested type "simple"
  2046                           ; Number of cases is 2, Range of values is 0 to 1
  2047                           ; switch strategies available:
  2048                           ; Name         Instructions Cycles
  2049                           ; simple_byte            7     4 (average)
  2050                           ;	Chosen strategy is simple_byte
  2051   00FA3A  5030               	movf	??_gpio_pin_write_logic^0,w,c
  2052   00FA3C  0A00               	xorlw	0	; case 0
  2053   00FA3E  B4D8               	btfsc	status,2,c
  2054   00FA40  EFDD  F07C         	goto	l1742
  2055   00FA44  0A01               	xorlw	1	; case 1
  2056   00FA46  B4D8               	btfsc	status,2,c
  2057   00FA48  EFAA  F07C         	goto	l1738
  2058   00FA4C  EFA6  F07C         	goto	l1736
  2059   00FA50                     l1752:
  2060                           
  2061                           ;MCAL_layer/GPIO/GPIO.c: 98:     return ret;
  2062   00FA50  5036               	movf	gpio_pin_write_logic@ret^0,w,c
  2063   00FA52  0012               	return		;funcret
  2064   00FA54                     __end_of_gpio_pin_write_logic:
  2065                           	callstack 0
  2066                           
  2067 ;; *************** function _SVS_print *****************
  2068 ;; Defined at:
  2069 ;;		line 71 in file "ECU_layer/7_SEGMENTS/7_SEGMENTS.c"
  2070 ;; Parameters:    Size  Location     Type
  2071 ;;  Seven_SEG       2   10[COMRAM] PTR const struct .
  2072 ;;		 -> seven_seg(14), 
  2073 ;;  data            1   12[COMRAM] enum E2870
  2074 ;; Auto vars:     Size  Location     Type
  2075 ;;  temp            1   14[COMRAM] struct .
  2076 ;;  ret             1    0        unsigned char 
  2077 ;; Return value:  Size  Location     Type
  2078 ;;                  1    wreg      unsigned char 
  2079 ;; Registers used:
  2080 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2081 ;; Tracked objects:
  2082 ;;		On entry : 0/0
  2083 ;;		On exit  : 0/0
  2084 ;;		Unchanged: 0/0
  2085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2086 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2087 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2088 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2089 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2090 ;;Total ram usage:        5 bytes
  2091 ;; Hardware stack levels used: 1
  2092 ;; Hardware stack levels required when called: 1
  2093 ;; This function calls:
  2094 ;;		_gpio_port_high_nibble_write_logic
  2095 ;;		_gpio_port_low_nibble_write_logic
  2096 ;; This function is called by:
  2097 ;;		_SVS_print_pov
  2098 ;; This function uses a non-reentrant model
  2099 ;;
  2100                           
  2101                           	psect	text10
  2102   00F732                     __ptext10:
  2103                           	callstack 0
  2104   00F732                     _SVS_print:
  2105                           	callstack 28
  2106   00F732                     
  2107                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 74:     if(Seven_SEG == ((void*)0)){
  2108   00F732  5037               	movf	SVS_print@Seven_SEG^0,w,c
  2109   00F734  1038               	iorwf	(SVS_print@Seven_SEG+1)^0,w,c
  2110   00F736  A4D8               	btfss	status,2,c
  2111   00F738  EFA0  F07B         	goto	u1021
  2112   00F73C  EFA2  F07B         	goto	u1020
  2113   00F740                     u1021:
  2114   00F740  EFA4  F07B         	goto	l1720
  2115   00F744                     u1020:
  2116   00F744                     
  2117                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 76:     }
  2118   00F744  EFE0  F07B         	goto	l30
  2119   00F748                     l1720:
  2120                           
  2121                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 78:         pin_config_t temp;;ECU_layer/7_SEGMENTS/
      +                          7_SEGMENTS.c: 79:         temp.port = Seven_SEG->SVS_port;
  2122   00F748  C037  FFD9         	movff	SVS_print@Seven_SEG,fsr2l
  2123   00F74C  C038  FFDA         	movff	SVS_print@Seven_SEG+1,fsr2h
  2124   00F750  50DF               	movf	indf2,w,c
  2125   00F752  6E3A               	movwf	??_SVS_print^0,c
  2126   00F754  503B               	movf	SVS_print@temp^0,w,c
  2127   00F756  183A               	xorwf	??_SVS_print^0,w,c
  2128   00F758  0BF8               	andlw	-8
  2129   00F75A  183A               	xorwf	??_SVS_print^0,w,c
  2130   00F75C  6E3B               	movwf	SVS_print@temp^0,c
  2131   00F75E                     
  2132                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 80:         temp.direction= GPIO_DIRECTION_OUTPUT;
  2133   00F75E  9C3B               	bcf	SVS_print@temp^0,6,c
  2134                           
  2135                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 82:         if(Seven_SEG->SVS_nibble_state == SVS_LO
      +                          W_NIBBLE){
  2136   00F760  EE20 F001          	lfsr	2,1
  2137   00F764  5037               	movf	SVS_print@Seven_SEG^0,w,c
  2138   00F766  26D9               	addwf	fsr2l,f,c
  2139   00F768  5038               	movf	(SVS_print@Seven_SEG+1)^0,w,c
  2140   00F76A  22DA               	addwfc	fsr2h,f,c
  2141   00F76C  50DF               	movf	indf2,w,c
  2142   00F76E  A4D8               	btfss	status,2,c
  2143   00F770  EFBC  F07B         	goto	u1031
  2144   00F774  EFBE  F07B         	goto	u1030
  2145   00F778                     u1031:
  2146   00F778  EFC8  F07B         	goto	l1726
  2147   00F77C                     u1030:
  2148   00F77C                     
  2149                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 83:             gpio_port_low_nibble_write_logic(&te
      +                          mp, data);
  2150   00F77C  0E3B               	movlw	low SVS_print@temp
  2151   00F77E  6E2D               	movwf	gpio_port_low_nibble_write_logic@pin_config^0,c
  2152   00F780  0E00               	movlw	high SVS_print@temp
  2153   00F782  6E2E               	movwf	(gpio_port_low_nibble_write_logic@pin_config+1)^0,c
  2154   00F784  C039  F02F         	movff	SVS_print@data,gpio_port_low_nibble_write_logic@data
  2155   00F788  ECD3  F07A         	call	_gpio_port_low_nibble_write_logic	;wreg free
  2156                           
  2157                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 84:         }else if(Seven_SEG->SVS_nibble_state == 
      +                          SVS_HIGH_NIBBLE){
  2158   00F78C  EFE0  F07B         	goto	l30
  2159   00F790                     l1726:
  2160   00F790  EE20 F001          	lfsr	2,1
  2161   00F794  5037               	movf	SVS_print@Seven_SEG^0,w,c
  2162   00F796  26D9               	addwf	fsr2l,f,c
  2163   00F798  5038               	movf	(SVS_print@Seven_SEG+1)^0,w,c
  2164   00F79A  22DA               	addwfc	fsr2h,f,c
  2165   00F79C  04DE               	decf	postinc2,w,c
  2166   00F79E  A4D8               	btfss	status,2,c
  2167   00F7A0  EFD4  F07B         	goto	u1041
  2168   00F7A4  EFD6  F07B         	goto	u1040
  2169   00F7A8                     u1041:
  2170   00F7A8  EFE0  F07B         	goto	l26
  2171   00F7AC                     u1040:
  2172   00F7AC                     
  2173                           ;ECU_layer/7_SEGMENTS/7_SEGMENTS.c: 85:             gpio_port_high_nibble_write_logic(&t
      +                          emp, data);
  2174   00F7AC  0E3B               	movlw	low SVS_print@temp
  2175   00F7AE  6E2D               	movwf	gpio_port_high_nibble_write_logic@pin_config^0,c
  2176   00F7B0  0E00               	movlw	high SVS_print@temp
  2177   00F7B2  6E2E               	movwf	(gpio_port_high_nibble_write_logic@pin_config+1)^0,c
  2178   00F7B4  C039  F02F         	movff	SVS_print@data,gpio_port_high_nibble_write_logic@data
  2179   00F7B8  EC91  F07A         	call	_gpio_port_high_nibble_write_logic	;wreg free
  2180   00F7BC  EFE0  F07B         	goto	l30
  2181   00F7C0                     l26:
  2182   00F7C0                     l30:
  2183   00F7C0  0012               	return		;funcret
  2184   00F7C2                     __end_of_SVS_print:
  2185                           	callstack 0
  2186                           
  2187 ;; *************** function _gpio_port_low_nibble_write_logic *****************
  2188 ;; Defined at:
  2189 ;;		line 310 in file "MCAL_layer/GPIO/GPIO.c"
  2190 ;; Parameters:    Size  Location     Type
  2191 ;;  pin_config      2    0[COMRAM] PTR struct .
  2192 ;;		 -> SVS_print@temp(1), 
  2193 ;;  data            1    2[COMRAM] unsigned char 
  2194 ;; Auto vars:     Size  Location     Type
  2195 ;;  ret             1    0        unsigned char 
  2196 ;; Return value:  Size  Location     Type
  2197 ;;                  1    wreg      unsigned char 
  2198 ;; Registers used:
  2199 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2200 ;; Tracked objects:
  2201 ;;		On entry : 0/0
  2202 ;;		On exit  : 0/0
  2203 ;;		Unchanged: 0/0
  2204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2205 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2207 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2208 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2209 ;;Total ram usage:       10 bytes
  2210 ;; Hardware stack levels used: 1
  2211 ;; This function calls:
  2212 ;;		Nothing
  2213 ;; This function is called by:
  2214 ;;		_SVS_print
  2215 ;; This function uses a non-reentrant model
  2216 ;;
  2217                           
  2218                           	psect	text11
  2219   00F5A6                     __ptext11:
  2220                           	callstack 0
  2221   00F5A6                     _gpio_port_low_nibble_write_logic:
  2222                           	callstack 28
  2223   00F5A6                     
  2224                           ;MCAL_layer/GPIO/GPIO.c: 312:     if(pin_config == ((void*)0)){
  2225   00F5A6  502D               	movf	gpio_port_low_nibble_write_logic@pin_config^0,w,c
  2226   00F5A8  102E               	iorwf	(gpio_port_low_nibble_write_logic@pin_config+1)^0,w,c
  2227   00F5AA  A4D8               	btfss	status,2,c
  2228   00F5AC  EFDA  F07A         	goto	u961
  2229   00F5B0  EFDC  F07A         	goto	u960
  2230   00F5B4                     u961:
  2231   00F5B4  EFDE  F07A         	goto	l1668
  2232   00F5B8                     u960:
  2233   00F5B8                     
  2234                           ;MCAL_layer/GPIO/GPIO.c: 314:     }
  2235   00F5B8  EF14  F07B         	goto	l270
  2236   00F5BC                     l1668:
  2237                           
  2238                           ;MCAL_layer/GPIO/GPIO.c: 316:         ((*((volatile uint8 *)(lat_registers[pin_config->p
      +                          ort]))) = (((*((volatile uint8 *)(lat_registers[pin_config->port])))&0xF0)|(data&0x0F)))
      +                          ;
  2239   00F5BC  C02D  FFD9         	movff	gpio_port_low_nibble_write_logic@pin_config,fsr2l
  2240   00F5C0  C02E  FFDA         	movff	gpio_port_low_nibble_write_logic@pin_config+1,fsr2h
  2241   00F5C4  50DF               	movf	223,w,c
  2242   00F5C6  0B07               	andlw	7
  2243   00F5C8  6E30               	movwf	??_gpio_port_low_nibble_write_logic^0,c
  2244   00F5CA  5030               	movf	??_gpio_port_low_nibble_write_logic^0,w,c
  2245   00F5CC  0D02               	mullw	2
  2246   00F5CE  0E01               	movlw	low _lat_registers
  2247   00F5D0  24F3               	addwf	243,w,c
  2248   00F5D2  6ED9               	movwf	fsr2l,c
  2249   00F5D4  0E00               	movlw	high _lat_registers
  2250   00F5D6  20F4               	addwfc	prodh,w,c
  2251   00F5D8  6EDA               	movwf	fsr2h,c
  2252   00F5DA  CFDE F031          	movff	postinc2,??_gpio_port_low_nibble_write_logic+1
  2253   00F5DE  CFDD F032          	movff	postdec2,??_gpio_port_low_nibble_write_logic+2
  2254   00F5E2  C031  FFD9         	movff	??_gpio_port_low_nibble_write_logic+1,fsr2l
  2255   00F5E6  C032  FFDA         	movff	??_gpio_port_low_nibble_write_logic+2,fsr2h
  2256   00F5EA  C02F  F033         	movff	gpio_port_low_nibble_write_logic@data,??_gpio_port_low_nibble_write_logic+3
  2257   00F5EE  0E0F               	movlw	15
  2258   00F5F0  1633               	andwf	(??_gpio_port_low_nibble_write_logic+3)^0,f,c
  2259   00F5F2  C02D  FFE1         	movff	gpio_port_low_nibble_write_logic@pin_config,fsr1l
  2260   00F5F6  C02E  FFE2         	movff	gpio_port_low_nibble_write_logic@pin_config+1,fsr1h
  2261   00F5FA  50E7               	movf	231,w,c
  2262   00F5FC  0B07               	andlw	7
  2263   00F5FE  6E34               	movwf	(??_gpio_port_low_nibble_write_logic+4)^0,c
  2264   00F600  5034               	movf	(??_gpio_port_low_nibble_write_logic+4)^0,w,c
  2265   00F602  0D02               	mullw	2
  2266   00F604  0E01               	movlw	low _lat_registers
  2267   00F606  24F3               	addwf	243,w,c
  2268   00F608  6EE1               	movwf	fsr1l,c
  2269   00F60A  0E00               	movlw	high _lat_registers
  2270   00F60C  20F4               	addwfc	prodh,w,c
  2271   00F60E  6EE2               	movwf	fsr1h,c
  2272   00F610  CFE6 F035          	movff	postinc1,??_gpio_port_low_nibble_write_logic+5
  2273   00F614  CFE5 F036          	movff	postdec1,??_gpio_port_low_nibble_write_logic+6
  2274   00F618  C035  FFE1         	movff	??_gpio_port_low_nibble_write_logic+5,fsr1l
  2275   00F61C  C036  FFE2         	movff	??_gpio_port_low_nibble_write_logic+6,fsr1h
  2276   00F620  50E7               	movf	indf1,w,c
  2277   00F622  0BF0               	andlw	240
  2278   00F624  1033               	iorwf	(??_gpio_port_low_nibble_write_logic+3)^0,w,c
  2279   00F626  6EDF               	movwf	indf2,c
  2280   00F628                     l270:
  2281   00F628  0012               	return		;funcret
  2282   00F62A                     __end_of_gpio_port_low_nibble_write_logic:
  2283                           	callstack 0
  2284                           
  2285 ;; *************** function _gpio_port_high_nibble_write_logic *****************
  2286 ;; Defined at:
  2287 ;;		line 331 in file "MCAL_layer/GPIO/GPIO.c"
  2288 ;; Parameters:    Size  Location     Type
  2289 ;;  pin_config      2    0[COMRAM] PTR struct .
  2290 ;;		 -> SVS_print@temp(1), 
  2291 ;;  data            1    2[COMRAM] unsigned char 
  2292 ;; Auto vars:     Size  Location     Type
  2293 ;;  ret             1    0        unsigned char 
  2294 ;; Return value:  Size  Location     Type
  2295 ;;                  1    wreg      unsigned char 
  2296 ;; Registers used:
  2297 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2298 ;; Tracked objects:
  2299 ;;		On entry : 0/0
  2300 ;;		On exit  : 0/0
  2301 ;;		Unchanged: 0/0
  2302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2303 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2305 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2306 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2307 ;;Total ram usage:       10 bytes
  2308 ;; Hardware stack levels used: 1
  2309 ;; This function calls:
  2310 ;;		Nothing
  2311 ;; This function is called by:
  2312 ;;		_SVS_print
  2313 ;; This function uses a non-reentrant model
  2314 ;;
  2315                           
  2316                           	psect	text12
  2317   00F522                     __ptext12:
  2318                           	callstack 0
  2319   00F522                     _gpio_port_high_nibble_write_logic:
  2320                           	callstack 28
  2321   00F522                     
  2322                           ;MCAL_layer/GPIO/GPIO.c: 333:     if(pin_config == ((void*)0)){
  2323   00F522  502D               	movf	gpio_port_high_nibble_write_logic@pin_config^0,w,c
  2324   00F524  102E               	iorwf	(gpio_port_high_nibble_write_logic@pin_config+1)^0,w,c
  2325   00F526  A4D8               	btfss	status,2,c
  2326   00F528  EF98  F07A         	goto	u971
  2327   00F52C  EF9A  F07A         	goto	u970
  2328   00F530                     u971:
  2329   00F530  EF9C  F07A         	goto	l1678
  2330   00F534                     u970:
  2331   00F534                     
  2332                           ;MCAL_layer/GPIO/GPIO.c: 335:     }
  2333   00F534  EFD2  F07A         	goto	l280
  2334   00F538                     l1678:
  2335                           
  2336                           ;MCAL_layer/GPIO/GPIO.c: 337:         ((*((volatile uint8 *)(lat_registers[pin_config->p
      +                          ort]))) = (((*((volatile uint8 *)(lat_registers[pin_config->port])))&0x0F)|(data&0xF0)))
      +                          ;
  2337   00F538  C02D  FFD9         	movff	gpio_port_high_nibble_write_logic@pin_config,fsr2l
  2338   00F53C  C02E  FFDA         	movff	gpio_port_high_nibble_write_logic@pin_config+1,fsr2h
  2339   00F540  50DF               	movf	223,w,c
  2340   00F542  0B07               	andlw	7
  2341   00F544  6E30               	movwf	??_gpio_port_high_nibble_write_logic^0,c
  2342   00F546  5030               	movf	??_gpio_port_high_nibble_write_logic^0,w,c
  2343   00F548  0D02               	mullw	2
  2344   00F54A  0E01               	movlw	low _lat_registers
  2345   00F54C  24F3               	addwf	243,w,c
  2346   00F54E  6ED9               	movwf	fsr2l,c
  2347   00F550  0E00               	movlw	high _lat_registers
  2348   00F552  20F4               	addwfc	prodh,w,c
  2349   00F554  6EDA               	movwf	fsr2h,c
  2350   00F556  CFDE F031          	movff	postinc2,??_gpio_port_high_nibble_write_logic+1
  2351   00F55A  CFDD F032          	movff	postdec2,??_gpio_port_high_nibble_write_logic+2
  2352   00F55E  C031  FFD9         	movff	??_gpio_port_high_nibble_write_logic+1,fsr2l
  2353   00F562  C032  FFDA         	movff	??_gpio_port_high_nibble_write_logic+2,fsr2h
  2354   00F566  C02F  F033         	movff	gpio_port_high_nibble_write_logic@data,??_gpio_port_high_nibble_write_logic+3
  2355   00F56A  0EF0               	movlw	240
  2356   00F56C  1633               	andwf	(??_gpio_port_high_nibble_write_logic+3)^0,f,c
  2357   00F56E  C02D  FFE1         	movff	gpio_port_high_nibble_write_logic@pin_config,fsr1l
  2358   00F572  C02E  FFE2         	movff	gpio_port_high_nibble_write_logic@pin_config+1,fsr1h
  2359   00F576  50E7               	movf	231,w,c
  2360   00F578  0B07               	andlw	7
  2361   00F57A  6E34               	movwf	(??_gpio_port_high_nibble_write_logic+4)^0,c
  2362   00F57C  5034               	movf	(??_gpio_port_high_nibble_write_logic+4)^0,w,c
  2363   00F57E  0D02               	mullw	2
  2364   00F580  0E01               	movlw	low _lat_registers
  2365   00F582  24F3               	addwf	243,w,c
  2366   00F584  6EE1               	movwf	fsr1l,c
  2367   00F586  0E00               	movlw	high _lat_registers
  2368   00F588  20F4               	addwfc	prodh,w,c
  2369   00F58A  6EE2               	movwf	fsr1h,c
  2370   00F58C  CFE6 F035          	movff	postinc1,??_gpio_port_high_nibble_write_logic+5
  2371   00F590  CFE5 F036          	movff	postdec1,??_gpio_port_high_nibble_write_logic+6
  2372   00F594  C035  FFE1         	movff	??_gpio_port_high_nibble_write_logic+5,fsr1l
  2373   00F598  C036  FFE2         	movff	??_gpio_port_high_nibble_write_logic+6,fsr1h
  2374   00F59C  50E7               	movf	indf1,w,c
  2375   00F59E  0B0F               	andlw	15
  2376   00F5A0  1033               	iorwf	(??_gpio_port_high_nibble_write_logic+3)^0,w,c
  2377   00F5A2  6EDF               	movwf	indf2,c
  2378   00F5A4                     l280:
  2379   00F5A4  0012               	return		;funcret
  2380   00F5A6                     __end_of_gpio_port_high_nibble_write_logic:
  2381                           	callstack 0
  2382   000000                     
  2383                           	psect	rparam
  2384   000000                     
  2385                           	psect	idloc
  2386                           
  2387                           ;Config register IDLOC0 @ 0x200000
  2388                           ;	unspecified, using default values
  2389   200000                     	org	2097152
  2390   200000  FF                 	db	255
  2391                           
  2392                           ;Config register IDLOC1 @ 0x200001
  2393                           ;	unspecified, using default values
  2394   200001                     	org	2097153
  2395   200001  FF                 	db	255
  2396                           
  2397                           ;Config register IDLOC2 @ 0x200002
  2398                           ;	unspecified, using default values
  2399   200002                     	org	2097154
  2400   200002  FF                 	db	255
  2401                           
  2402                           ;Config register IDLOC3 @ 0x200003
  2403                           ;	unspecified, using default values
  2404   200003                     	org	2097155
  2405   200003  FF                 	db	255
  2406                           
  2407                           ;Config register IDLOC4 @ 0x200004
  2408                           ;	unspecified, using default values
  2409   200004                     	org	2097156
  2410   200004  FF                 	db	255
  2411                           
  2412                           ;Config register IDLOC5 @ 0x200005
  2413                           ;	unspecified, using default values
  2414   200005                     	org	2097157
  2415   200005  FF                 	db	255
  2416                           
  2417                           ;Config register IDLOC6 @ 0x200006
  2418                           ;	unspecified, using default values
  2419   200006                     	org	2097158
  2420   200006  FF                 	db	255
  2421                           
  2422                           ;Config register IDLOC7 @ 0x200007
  2423                           ;	unspecified, using default values
  2424   200007                     	org	2097159
  2425   200007  FF                 	db	255
  2426                           
  2427                           	psect	config
  2428                           
  2429                           ; Padding undefined space
  2430   300000                     	org	3145728
  2431   300000  FF                 	db	255
  2432                           
  2433                           ;Config register CONFIG1H @ 0x300001
  2434                           ;	Oscillator Selection bits
  2435                           ;	OSC = HS, HS oscillator
  2436                           ;	Fail-Safe Clock Monitor Enable bit
  2437                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2438                           ;	Internal/External Oscillator Switchover bit
  2439                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2440   300001                     	org	3145729
  2441   300001  02                 	db	2
  2442                           
  2443                           ;Config register CONFIG2L @ 0x300002
  2444                           ;	Power-up Timer Enable bit
  2445                           ;	PWRT = OFF, PWRT disabled
  2446                           ;	Brown-out Reset Enable bits
  2447                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2448                           ;	Brown Out Reset Voltage bits
  2449                           ;	BORV = 1, 
  2450   300002                     	org	3145730
  2451   300002  09                 	db	9
  2452                           
  2453                           ;Config register CONFIG2H @ 0x300003
  2454                           ;	Watchdog Timer Enable bit
  2455                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2456                           ;	Watchdog Timer Postscale Select bits
  2457                           ;	WDTPS = 32768, 1:32768
  2458   300003                     	org	3145731
  2459   300003  1E                 	db	30
  2460                           
  2461                           ; Padding undefined space
  2462   300004                     	org	3145732
  2463   300004  FF                 	db	255
  2464                           
  2465                           ;Config register CONFIG3H @ 0x300005
  2466                           ;	CCP2 MUX bit
  2467                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2468                           ;	PORTB A/D Enable bit
  2469                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2470                           ;	Low-Power Timer1 Oscillator Enable bit
  2471                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2472                           ;	MCLR Pin Enable bit
  2473                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2474   300005                     	org	3145733
  2475   300005  81                 	db	129
  2476                           
  2477                           ;Config register CONFIG4L @ 0x300006
  2478                           ;	Stack Full/Underflow Reset Enable bit
  2479                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2480                           ;	Single-Supply ICSP Enable bit
  2481                           ;	LVP = OFF, Single-Supply ICSP disabled
  2482                           ;	Extended Instruction Set Enable bit
  2483                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2484                           ;	Background Debugger Enable bit
  2485                           ;	DEBUG = 0x1, unprogrammed default
  2486   300006                     	org	3145734
  2487   300006  81                 	db	129
  2488                           
  2489                           ; Padding undefined space
  2490   300007                     	org	3145735
  2491   300007  FF                 	db	255
  2492                           
  2493                           ;Config register CONFIG5L @ 0x300008
  2494                           ;	Code Protection bit
  2495                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2496                           ;	Code Protection bit
  2497                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2498                           ;	Code Protection bit
  2499                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2500                           ;	Code Protection bit
  2501                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2502   300008                     	org	3145736
  2503   300008  0F                 	db	15
  2504                           
  2505                           ;Config register CONFIG5H @ 0x300009
  2506                           ;	Boot Block Code Protection bit
  2507                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2508                           ;	Data EEPROM Code Protection bit
  2509                           ;	CPD = OFF, Data EEPROM not code-protected
  2510   300009                     	org	3145737
  2511   300009  C0                 	db	192
  2512                           
  2513                           ;Config register CONFIG6L @ 0x30000A
  2514                           ;	Write Protection bit
  2515                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2516                           ;	Write Protection bit
  2517                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2518                           ;	Write Protection bit
  2519                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2520                           ;	Write Protection bit
  2521                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2522   30000A                     	org	3145738
  2523   30000A  0F                 	db	15
  2524                           
  2525                           ;Config register CONFIG6H @ 0x30000B
  2526                           ;	Configuration Register Write Protection bit
  2527                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2528                           ;	Boot Block Write Protection bit
  2529                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2530                           ;	Data EEPROM Write Protection bit
  2531                           ;	WRTD = OFF, Data EEPROM not write-protected
  2532   30000B                     	org	3145739
  2533   30000B  E0                 	db	224
  2534                           
  2535                           ;Config register CONFIG7L @ 0x30000C
  2536                           ;	Table Read Protection bit
  2537                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2538                           ;	Table Read Protection bit
  2539                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2540                           ;	Table Read Protection bit
  2541                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2542                           ;	Table Read Protection bit
  2543                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2544   30000C                     	org	3145740
  2545   30000C  0F                 	db	15
  2546                           
  2547                           ;Config register CONFIG7H @ 0x30000D
  2548                           ;	Boot Block Table Read Protection bit
  2549                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2550   30000D                     	org	3145741
  2551   30000D  40                 	db	64
  2552                           tosu	equ	0xFFF
  2553                           tosh	equ	0xFFE
  2554                           tosl	equ	0xFFD
  2555                           stkptr	equ	0xFFC
  2556                           pclatu	equ	0xFFB
  2557                           pclath	equ	0xFFA
  2558                           pcl	equ	0xFF9
  2559                           tblptru	equ	0xFF8
  2560                           tblptrh	equ	0xFF7
  2561                           tblptrl	equ	0xFF6
  2562                           tablat	equ	0xFF5
  2563                           prodh	equ	0xFF4
  2564                           prodl	equ	0xFF3
  2565                           indf0	equ	0xFEF
  2566                           postinc0	equ	0xFEE
  2567                           postdec0	equ	0xFED
  2568                           preinc0	equ	0xFEC
  2569                           plusw0	equ	0xFEB
  2570                           fsr0h	equ	0xFEA
  2571                           fsr0l	equ	0xFE9
  2572                           wreg	equ	0xFE8
  2573                           indf1	equ	0xFE7
  2574                           postinc1	equ	0xFE6
  2575                           postdec1	equ	0xFE5
  2576                           preinc1	equ	0xFE4
  2577                           plusw1	equ	0xFE3
  2578                           fsr1h	equ	0xFE2
  2579                           fsr1l	equ	0xFE1
  2580                           bsr	equ	0xFE0
  2581                           indf2	equ	0xFDF
  2582                           postinc2	equ	0xFDE
  2583                           postdec2	equ	0xFDD
  2584                           preinc2	equ	0xFDC
  2585                           plusw2	equ	0xFDB
  2586                           fsr2h	equ	0xFDA
  2587                           fsr2l	equ	0xFD9
  2588                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        44
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     42      97
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    gpio_port_high_nibble_write_logic@pin_config	PTR struct . size(2) Largest target is 1
		 -> SVS_print@temp(COMRAM[1]), 

    gpio_port_high_nibble_direction_initialize@pin_config	PTR struct . size(2) Largest target is 1
		 -> SVS_initialize@temp(COMRAM[1]), 

    gpio_port_low_nibble_write_logic@pin_config	PTR struct . size(2) Largest target is 1
		 -> SVS_print@temp(COMRAM[1]), 

    gpio_port_low_nibble_direction_initialize@pin_config	PTR struct . size(2) Largest target is 1
		 -> SVS_initialize@temp(COMRAM[1]), 

    gpio_pin_write_logic@pin_config	PTR struct . size(2) Largest target is 1
		 -> led_turn_off@temp(COMRAM[1]), led_turn_on@temp(COMRAM[1]), led_intialize@temp(COMRAM[1]), SVS_print_pov@temp(COMRAM[1]), 

    gpio_pin_direction_initialize@pin_config	PTR const struct . size(2) Largest target is 1
		 -> led_intialize@temp(COMRAM[1]), SVS_initialize@temp(COMRAM[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATB(BITBIGSFRlh[1]), 
		 -> LATA(BITBIGSFRll[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), 
		 -> PORTA(BITBIGSFRll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRhl[1]), TRISD(BITBIGSFRhl[1]), TRISC(BITBIGSFRhl[1]), TRISB(BITBIGSFRhl[1]), 
		 -> TRISA(BITBIGSFRll[1]), 

    SVS_print_pov@data	PTR unsigned char  size(2) Largest target is 6
		 -> main@data(COMRAM[6]), 

    SVS_print_pov@Seven_SEG	PTR struct . size(2) Largest target is 14
		 -> seven_seg(COMRAM[14]), 

    SVS_print@Seven_SEG	PTR const struct . size(2) Largest target is 14
		 -> seven_seg(COMRAM[14]), 

    SVS_initialize@Seven_SEG	PTR const struct . size(2) Largest target is 14
		 -> seven_seg(COMRAM[14]), 


Critical Paths under _main in COMRAM

    _main->_SVS_print_pov
    _appliction_intialize->_SVS_initialize
    _SVS_initialize->_gpio_port_high_nibble_direction_initialize
    _SVS_initialize->_gpio_port_low_nibble_direction_initialize
    _SVS_print_pov->_SVS_print
    _SVS_print->_gpio_port_high_nibble_write_logic
    _SVS_print->_gpio_port_low_nibble_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0    7691
                                             31 COMRAM    11    11      0
                      _SVS_print_pov
                            ___awdiv
                            ___awmod
               _appliction_intialize
 ---------------------------------------------------------------------------------
 (1) _appliction_intialize                                 0     0      0    1716
                     _SVS_initialize
 ---------------------------------------------------------------------------------
 (2) _SVS_initialize                                      11     9      2    1716
                                             10 COMRAM    10     8      2
      _gpio_pin_direction_initialize
_gpio_port_high_nibble_direction_ini
_gpio_port_low_nibble_direction_init
 ---------------------------------------------------------------------------------
 (3) _gpio_port_low_nibble_direction_initialize           11     8      3     248
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (3) _gpio_port_high_nibble_direction_initialize          11     8      3     248
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_initialize                        9     7      2     831
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     752
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     756
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _SVS_print_pov                                       17    13      4    4069
                                             15 COMRAM    16    12      4
                          _SVS_print
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                10     7      3    2481
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (2) _SVS_print                                            6     3      3     838
                                             10 COMRAM     5     2      3
  _gpio_port_high_nibble_write_logic
   _gpio_port_low_nibble_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_port_low_nibble_write_logic                    11     8      3     248
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (3) _gpio_port_high_nibble_write_logic                   11     8      3     248
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SVS_print_pov
     _SVS_print
       _gpio_port_high_nibble_write_logic
       _gpio_port_low_nibble_write_logic
     _gpio_pin_write_logic
   ___awdiv
   ___awmod
   _appliction_intialize
     _SVS_initialize
       _gpio_pin_direction_initialize
       _gpio_port_high_nibble_direction_initialize
       _gpio_port_low_nibble_direction_initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      41        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     2A      61       1       76.4%
BITBIGSFRhh         3D      0       0      37        0.0%
BITBIGSFRhl         2A      0       0      38        0.0%
BITBIGSFRlh          4      0       0      39        0.0%
BITBIGSFRll          4      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      61      26        0.0%
DATA                 0      0      61       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Mar 11 22:56:17 2023

                                                  l30 F7C0  
                                                  l22 FCA6  
                                                  l26 F7C0  
                                                  l42 FFFE  
                                        ___awdiv@sign 0032  
                                      _SVS_initialize FB78  
                                                 l214 FA52  
                                                 l314 F4BE  
                                                 l270 F628  
                                                 l280 F5A4  
                                                 l192 FDEC  
                                                 l265 F730  
                                                 l275 F6AC  
                                                 l197 FDEE  
                                                 l561 F870  
                                                 l548 F934  
                                                 u900 FCE0  
                                                 u901 FCDC  
                                                 u910 FCFE  
                                                 u911 FCFA  
                                                 u920 FD1C  
                                                 u921 FD18  
                                                 u940 FD94  
                                                 u941 FD90  
                                                 u934 FD3C  
                                                 u870 F6C0  
                                                 u935 FD38  
                                                 u871 F6BC  
                                                 u960 F5B8  
                                                 u880 F63C  
                                                 u961 F5B4  
                                                 u881 F638  
                                                 u970 F534  
                                                 u954 FDB4  
                                                 u890 FCBE  
                                                 u971 F530  
                                                 u955 FDB0  
                                                 u891 FCBA  
                                                 u980 FB8A  
                                                 u981 FB86  
                                                 u990 FBC2  
                                                 u991 FBBE  
                                                 _ret 005D  
                                        ___awmod@sign 0032  
                                                 prod 000FF3  
                                                 wreg 000FE8  
                                                l2100 FB02  
                                                l2102 FB18  
                                                l2104 FB2E  
                                                l2114 FA3A  
                                                l2106 FB44  
                                                l2108 FB5A  
                                                l2060 FA54  
                                                l2062 FA60  
                                                l2080 FAAA  
                                                l2072 FA74  
                                                l2064 FA64  
                                                l2090 FAD2  
                                                l2082 FAAC  
                                                l2074 FA88  
                                                l2066 FA70  
                                                l1620 F6AE  
                                                l1700 FC0A  
                                                l2092 FAD6  
                                                l2084 FABC  
                                                l2076 FA98  
                                                l1630 F62A  
                                                l1622 F6AE  
                                                l1710 FC86  
                                                l2094 FAD8  
                                                l2086 FAC0  
                                                l2078 FA9A  
                                                l1720 F748  
                                                l1800 FFAE  
                                                l1640 FCA8  
                                                l1632 F62A  
                                                l1624 F6C0  
                                                l1712 FC8A  
                                                l2096 FAE8  
                                                l2088 FAC2  
                                                l1722 F75E  
                                                l1714 F732  
                                                l1810 FFEE  
                                                l1650 FD06  
                                                l1642 FCAC  
                                                l1634 F63C  
                                                l1626 F6C4  
                                                l1706 FC0C  
                                                l2098 FAEC  
                                                l1724 F77C  
                                                l1716 F732  
                                                l1740 F9AC  
                                                l1732 F936  
                                                l1820 F884  
                                                l1652 FD1C  
                                                l1644 FCBE  
                                                l1636 F640  
                                                l1708 FC7A  
                                                l1812 F4AA  
                                                l1662 F5A6  
                                                l1726 F790  
                                                l1718 F744  
                                                l1742 F9BA  
                                                l1750 FA26  
                                                l1734 F93A  
                                                l1806 FFBE  
                                                l1830 F8AA  
                                                l1822 F88C  
                                                l1654 FD7E  
                                                l1646 FCE0  
                                                l1814 F4B2  
                                                l1672 F522  
                                                l1664 F5A6  
                                                l1728 F7AC  
                                                l1744 FA18  
                                                l1752 FA50  
                                                l1736 F94C  
                                                l1808 FFEC  
                                                l1760 FDF0  
                                                l1840 F8E2  
                                                l1832 F8B2  
                                                l1824 F890  
                                                l1816 F872  
                                                l1656 FD94  
                                                l1648 FCFE  
                                                l1674 F522  
                                                l1666 F5B8  
                                                l1738 F954  
                                                l1762 FDF0  
                                                l1850 F90E  
                                                l1842 F8E8  
                                                l1834 F8C4  
                                                l1826 F89E  
                                                l1818 F876  
                                                l1690 FBA4  
                                                l1682 FB78  
                                                l1676 F534  
                                                l1668 F5BC  
                                                l1780 FE96  
                                                l1772 FE0A  
                                                l1764 FE02  
                                                l1844 F8FE  
                                                l1836 F8CC  
                                                l1852 F914  
                                                l1828 F8A6  
                                                l1860 F7C2  
                                                l1692 FBC2  
                                                l1684 FB78  
                                                l1678 F538  
                                                l1790 FF08  
                                                l1774 FE74  
                                                l1766 FE06  
                                                l1854 F924  
                                                l1846 F906  
                                                l1838 F8D4  
                                                l1870 F7EE  
                                                l1862 F7C6  
                                                l1694 FBD6  
                                                l1686 FB8A  
                                                l1792 FF18  
                                                l1776 FE84  
                                                l1856 F92C  
                                                l1848 F908  
                                                l1880 F826  
                                                l1872 F7F6  
                                                l1864 F7D4  
                                                l1696 FBF2  
                                                l1688 FB8E  
                                                l1794 FF4A  
                                                l1786 FE9A  
                                                l1778 FE86  
                                                l1890 F860  
                                                l1882 F83C  
                                                l1874 F808  
                                                l1866 F7DC  
                                                l1698 FC02  
                                                l1796 FF82  
                                                l1788 FEAA  
                                                l1892 F868  
                                                l1884 F844  
                                                l1876 F810  
                                                l1868 F7E0  
                                                l1798 FF92  
                                                l1886 F84A  
                                                l1878 F818  
                                                l1888 F850  
                                                u1000 FBF2  
                                                u1001 FBEE  
                                                u1010 FCA6  
                                                u1011 FCA2  
                                                u1020 F744  
                                                u1100 FEAA  
                                                u1021 F740  
                                                u1101 FEA6  
                                                u1030 F77C  
                                                u1110 FFEC  
                                                u1031 F778  
                                                u1111 FFE8  
                                                u1040 F7AC  
                                                u1120 FFFE  
                                                u1200 F7EE  
                                                u1041 F7A8  
                                                u1121 FFFA  
                                                u1201 F7EA  
                                                u1050 F94C  
                                                u1130 F884  
                                                u1210 F808  
                                                u1051 F948  
                                                u1131 F880  
                                                u1211 F804  
                                                u1140 F89E  
                                                u1220 F826  
                                                u1141 F89A  
                                                u1221 F822  
                                                u1150 F8C4  
                                                u1230 F83C  
                                                u1151 F8C0  
                                                u1231 F838  
                                                u1064 F974  
                                                u1080 FE02  
                                                u1160 F8E2  
                                                u1240 F860  
                                                u1065 F970  
                                                u1081 FDFE  
                                                u1161 F8DE  
                                                u1241 F85C  
                                                u1074 F9DA  
                                                u1090 FE96  
                                                u1170 F8FE  
                                                u1075 F9D6  
                                                u1091 FE92  
                                                u1171 F8FA  
                                                u1180 F924  
                                                u1181 F920  
                                                _LATA 000F89  
                                                u1190 F7D4  
                                                _LATB 000F8A  
                                                u1191 F7D0  
                                                _LATC 000F8B  
                                                _LATD 000F8C  
                                                u1441 FA6A  
                                                _LATE 000F8D  
                                                u1450 FAAA  
                                                u1451 FAA6  
                                                u1460 FABC  
                                                u1461 FAB8  
                                                u1470 FAD2  
                                                u1471 FACE  
                                                u1480 FAE8  
                                                u1481 FAE4  
                                                u1497 FA8E  
                                         main@counter 0053  
                                                _main FA54  
                                                fsr1h 000FE2  
                                                fsr2h 000FDA  
                                                indf1 000FE7  
                                                indf2 000FDF  
                                                fsr1l 000FE1  
                                                fsr2l 000FD9  
                                                prodh 000FF4  
                                                prodl 000FF3  
                                                start 0000  
                                        ___param_bank 000000  
                                _gpio_pin_write_logic F936  
                               __end_of_SVS_print_pov 0000  
                              __end_of_SVS_initialize FCA8  
                                               ?_main 002D  
                                     __end_of___awdiv F936  
                                     __end_of___awmod F872  
                                     ___awdiv@divisor 002F  
                                     ___awdiv@counter 0031  
                                               _PORTA 000F80  
                                               _PORTB 000F81  
                                               _PORTC 000F82  
                                               _PORTD 000F83  
                                               _PORTE 000F84  
                                               _TRISA 000F92  
                                               _TRISB 000F93  
                                               _TRISC 000F94  
                                               _TRISD 000F95  
                                               _TRISE 000F96  
                        __end_of_appliction_intialize F4C0  
                                               tablat 000FF5  
                                               status 000FD8  
                      ?_gpio_pin_direction_initialize 002D  
                                     __initialization F4EC  
                                        __end_of_main FB78  
                               ?_gpio_pin_write_logic 002D  
                                     ?_SVS_initialize 0037  
                                       _lat_registers 0001  
                                              ??_main 004C  
                                       __activetblptr 000002  
                                    led_turn_on@F2895 0060  
                                              _ADCON0 000FC2  
                                              _ADCON1 000FC1  
                                    ___awdiv@dividend 002D  
   __end_of_gpio_port_low_nibble_direction_initialize F732  
         ??_gpio_port_low_nibble_direction_initialize 0030  
          ?_gpio_port_low_nibble_direction_initialize 002D  
           _gpio_port_low_nibble_direction_initialize F6AE  
                                           ??___awdiv 0031  
                                           ??___awmod 0031  
                                              clear_0 F512  
                                    ___awdiv@quotient 0033  
                                     ___awmod@divisor 002F  
                                              isa$std 000001  
                                     ___awmod@counter 0031  
  __end_of_gpio_port_high_nibble_direction_initialize F6AE  
        ??_gpio_port_high_nibble_direction_initialize 0030  
         ?_gpio_port_high_nibble_direction_initialize 002D  
          _gpio_port_high_nibble_direction_initialize F62A  
                                        __pdataCOMRAM 0001  
                                              tblptrh 000FF7  
                                              tblptrl 000FF6  
                                              tblptru 000FF8  
                                          __accesstop 0080  
                             __end_of__initialization F518  
                                   __end_of_SVS_print F7C2  
                                       ___rparam_used 000001  
      gpio_port_high_nibble_direction_initialize@data 002F  
       gpio_port_low_nibble_direction_initialize@data 002F  
                              ??_gpio_pin_write_logic 0030  
                                      __pcstackCOMRAM 002D  
                                  SVS_initialize@temp 0040  
                                _appliction_intialize F4AA  
                                  SVS_print@Seven_SEG 0037  
         gpio_port_high_nibble_write_logic@pin_config 002D  
                               ?_appliction_intialize 002D  
                                   led_turn_off@F2900 005F  
                                     led_toggle@F2905 005E  
                                       SVS_print@data 0039  
                                       SVS_print@temp 003B  
                                      _tris_registers 0015  
                                             __Hparam 0000  
                                    ??_SVS_initialize 0039  
                                             __Lparam 0000  
                                             ___awdiv F872  
                                             ___awmod F7C2  
                                             __pcinit F4EC  
                                             __ramtop 1000  
                                             __ptext0 FA54  
                                             __ptext1 F4AA  
                                             __ptext2 FB78  
                                             __ptext3 F6AE  
                                             __ptext4 F62A  
                                             __ptext5 FCA8  
                                             __ptext6 F7C2  
                                             __ptext7 F872  
                                             __ptext8 FDF0  
                                             __ptext9 F936  
                     ??_gpio_pin_direction_initialize 002F  
                                    ___awmod@dividend 002D  
                                             main@hou 0056  
                                             main@min 0055  
                                             main@sec 0054  
                                end_of_initialization F518  
                                       __Lmediumconst 0000  
                          SVS_print_pov@svs_counter_2 0049  
                              ??_appliction_intialize 0041  
                                             postdec1 000FE5  
                                             postdec2 000FDD  
                                             postinc0 000FEE  
                                             postinc1 000FE6  
                                             postinc2 000FDE  
          gpio_port_low_nibble_write_logic@pin_config 002D  
                                           _SVS_print F732  
                                       _SVS_print_pov FDF0  
                                       __pidataCOMRAM F4C0  
                                 start_initialization F4EC  
                            SVS_print_pov@svs_counter 004B  
               __end_of_gpio_pin_direction_initialize FDF0  
                       _gpio_pin_direction_initialize FCA8  
                             SVS_initialize@Seven_SEG 0037  
                                          ?_SVS_print 0037  
                                      ?_SVS_print_pov 003C  
                           SVS_initialize@svs_counter 003E  
                                         __pbssCOMRAM 0057  
                gpio_port_low_nibble_write_logic@data 002F  
            __end_of_gpio_port_low_nibble_write_logic F62A  
                  ??_gpio_port_low_nibble_write_logic 0030  
                   ?_gpio_port_low_nibble_write_logic 002D  
                    _gpio_port_low_nibble_write_logic F5A6  
                      gpio_pin_write_logic@pin_config 002D  
                                            ?___awdiv 002D  
                                            ?___awmod 002D  
                           gpio_pin_write_logic@logic 002F  
                                      SVS_print_pov@l 0045  
                                         ??_SVS_print 003A  
                                     ??_SVS_print_pov 0040  
                                           _seven_seg 001F  
                                           main@F2989 0057  
                    gpio_pin_direction_initialize@ret 0035  
gpio_port_high_nibble_direction_initialize@pin_config 002D  
 gpio_port_low_nibble_direction_initialize@pin_config 002D  
             gpio_pin_direction_initialize@pin_config 002D  
                             gpio_pin_write_logic@ret 0036  
                                           copy_data0 F500  
                                            __Hrparam 0000  
                                            __Lrparam 0000  
                                  led_intialize@F2890 0061  
                                            __ptext10 F732  
                                            __ptext11 F5A6  
                                            __ptext12 F522  
                                   SVS_print_pov@data 003E  
                                   SVS_print_pov@temp 004A  
                                            isa$xinst 000000  
                                            main@data 004D  
                        __end_of_gpio_pin_write_logic FA54  
               gpio_port_high_nibble_write_logic@data 002F  
                                      _port_registers 000B  
                              SVS_print_pov@Seven_SEG 003C  
           __end_of_gpio_port_high_nibble_write_logic F5A6  
                 ??_gpio_port_high_nibble_write_logic 0030  
                  ?_gpio_port_high_nibble_write_logic 002D  
                   _gpio_port_high_nibble_write_logic F522  
